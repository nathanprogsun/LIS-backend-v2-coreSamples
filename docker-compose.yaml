version: '3.8'

# LIS Backend v2 - CoreSamples Docker Compose Setup
#
# This file sets up the CoreSamples service along with its core dependencies
# for local development and testing.
#
# It is highly recommended to use a .env file in the project root
# to manage secrets and local configuration overrides.
# Example .env file:
#
# MYSQL_ROOT_PASSWORD=myrootpassword_changeme
# MYSQL_USER=coresamples_user
# MYSQL_PASSWORD=coresamples_pass_changeme
# MYSQL_DATABASE=coresamples_db
# JWT_SECRET=thisisadevelopmentsecret_pleasedontuseinprod_changeme
#
# # Optional overrides for host ports or log levels:
# # CORESAMPLES_LOG_LEVEL=info
# # MYSQL_HOST_PORT=3307
# # CONSUL_HOST_PORT=8500
# # REDIS_HOST_PORT=6379
# # JAEGER_AGENT_UDP_PORT=6831
# # JAEGER_UI_HOST_PORT=16686
# # JAEGER_AGENT_INTERNAL_PORT=6831

services:
  coresamples:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: coresamples_service
    ports:
      - "8083:8083"
      - "8084:8084"
    environment:
      RUN_ENV: dev_docker_compose
      LOG_LEVEL: ${CORESAMPLES_LOG_LEVEL:-debug}
      JWT_SECRET: ${JWT_SECRET}
      SENTRY_DSN: ${SENTRY_DSN}
      CONSUL_HTTP_ADDR: consul:8500
      CONSUL_TOKEN: ""
      MYSQL_HOST: mysql
      MYSQL_PORT: "3306"
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      REDIS_ADDR: redis:6379
      JAEGER_AGENT_HOST: jaeger
      JAEGER_AGENT_PORT: ${JAEGER_AGENT_INTERNAL_PORT:-6831}
      JAEGER_SERVICE_NAME: coresamples_v2
    depends_on:
      mysql:
        condition: service_healthy
      consul:
        condition: service_healthy
      redis:
        condition: service_healthy
      jaeger:
        condition: service_started
    networks:
      - lis_network

  mysql:
    image: mysql:8.0
    container_name: mysql_db
    ports:
      - "${MYSQL_HOST_PORT:-3307}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u${MYSQL_USER}", "-p${MYSQL_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - lis_network

  consul:
    image: consul:1.15.4
    container_name: consul_server
    ports:
      - "${CONSUL_HOST_PORT:-8500}:8500"
    volumes:
      - consul_data:/consul/data
    command: agent -dev -ui -client=0.0.0.0 -bind=0.0.0.0 -enable-script-checks=true
    healthcheck:
      test: ["CMD", "consul", "members", "|", "grep", "alive"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - lis_network

  redis:
    image: redis:7.0-alpine
    container_name: redis_cache
    ports:
      - "${REDIS_HOST_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - lis_network

  jaeger:
    image: jaegertracing/all-in-one:1.48.0
    container_name: jaeger_tracing
    ports:
      - "${JAEGER_AGENT_UDP_PORT:-6831}:6831/udp"
      - "${JAEGER_UI_HOST_PORT:-16686}:16686"
    environment:
      COLLECTOR_ZIPKIN_HOST_PORT: ":9411"
      LOG_LEVEL: ${JAEGER_LOG_LEVEL:-debug}
    networks:
      - lis_network

volumes:
  mysql_data:
  consul_data:
  redis_data:

networks:
  lis_network:
    driver: bridge