// Code generated by ent, DO NOT EDIT.

package labordersendhistory

import (
	"coresamples/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldLTE(FieldID, id))
}

// SampleID applies equality check predicate on the "sample_id" field. It's identical to SampleIDEQ.
func SampleID(v int) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldEQ(FieldSampleID, v))
}

// TubeType applies equality check predicate on the "tube_type" field. It's identical to TubeTypeEQ.
func TubeType(v string) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldEQ(FieldTubeType, v))
}

// SendoutTime applies equality check predicate on the "sendout_time" field. It's identical to SendoutTimeEQ.
func SendoutTime(v time.Time) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldEQ(FieldSendoutTime, v))
}

// IsRedrawOrder applies equality check predicate on the "is_redraw_order" field. It's identical to IsRedrawOrderEQ.
func IsRedrawOrder(v bool) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldEQ(FieldIsRedrawOrder, v))
}

// IsLabSpecialOrder applies equality check predicate on the "is_lab_special_order" field. It's identical to IsLabSpecialOrderEQ.
func IsLabSpecialOrder(v bool) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldEQ(FieldIsLabSpecialOrder, v))
}

// Action applies equality check predicate on the "action" field. It's identical to ActionEQ.
func Action(v string) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldEQ(FieldAction, v))
}

// IsResendBlocked applies equality check predicate on the "is_resend_blocked" field. It's identical to IsResendBlockedEQ.
func IsResendBlocked(v bool) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldEQ(FieldIsResendBlocked, v))
}

// SampleIDEQ applies the EQ predicate on the "sample_id" field.
func SampleIDEQ(v int) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldEQ(FieldSampleID, v))
}

// SampleIDNEQ applies the NEQ predicate on the "sample_id" field.
func SampleIDNEQ(v int) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldNEQ(FieldSampleID, v))
}

// SampleIDIn applies the In predicate on the "sample_id" field.
func SampleIDIn(vs ...int) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldIn(FieldSampleID, vs...))
}

// SampleIDNotIn applies the NotIn predicate on the "sample_id" field.
func SampleIDNotIn(vs ...int) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldNotIn(FieldSampleID, vs...))
}

// TubeTypeEQ applies the EQ predicate on the "tube_type" field.
func TubeTypeEQ(v string) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldEQ(FieldTubeType, v))
}

// TubeTypeNEQ applies the NEQ predicate on the "tube_type" field.
func TubeTypeNEQ(v string) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldNEQ(FieldTubeType, v))
}

// TubeTypeIn applies the In predicate on the "tube_type" field.
func TubeTypeIn(vs ...string) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldIn(FieldTubeType, vs...))
}

// TubeTypeNotIn applies the NotIn predicate on the "tube_type" field.
func TubeTypeNotIn(vs ...string) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldNotIn(FieldTubeType, vs...))
}

// TubeTypeGT applies the GT predicate on the "tube_type" field.
func TubeTypeGT(v string) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldGT(FieldTubeType, v))
}

// TubeTypeGTE applies the GTE predicate on the "tube_type" field.
func TubeTypeGTE(v string) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldGTE(FieldTubeType, v))
}

// TubeTypeLT applies the LT predicate on the "tube_type" field.
func TubeTypeLT(v string) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldLT(FieldTubeType, v))
}

// TubeTypeLTE applies the LTE predicate on the "tube_type" field.
func TubeTypeLTE(v string) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldLTE(FieldTubeType, v))
}

// TubeTypeContains applies the Contains predicate on the "tube_type" field.
func TubeTypeContains(v string) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldContains(FieldTubeType, v))
}

// TubeTypeHasPrefix applies the HasPrefix predicate on the "tube_type" field.
func TubeTypeHasPrefix(v string) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldHasPrefix(FieldTubeType, v))
}

// TubeTypeHasSuffix applies the HasSuffix predicate on the "tube_type" field.
func TubeTypeHasSuffix(v string) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldHasSuffix(FieldTubeType, v))
}

// TubeTypeEqualFold applies the EqualFold predicate on the "tube_type" field.
func TubeTypeEqualFold(v string) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldEqualFold(FieldTubeType, v))
}

// TubeTypeContainsFold applies the ContainsFold predicate on the "tube_type" field.
func TubeTypeContainsFold(v string) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldContainsFold(FieldTubeType, v))
}

// SendoutTimeEQ applies the EQ predicate on the "sendout_time" field.
func SendoutTimeEQ(v time.Time) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldEQ(FieldSendoutTime, v))
}

// SendoutTimeNEQ applies the NEQ predicate on the "sendout_time" field.
func SendoutTimeNEQ(v time.Time) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldNEQ(FieldSendoutTime, v))
}

// SendoutTimeIn applies the In predicate on the "sendout_time" field.
func SendoutTimeIn(vs ...time.Time) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldIn(FieldSendoutTime, vs...))
}

// SendoutTimeNotIn applies the NotIn predicate on the "sendout_time" field.
func SendoutTimeNotIn(vs ...time.Time) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldNotIn(FieldSendoutTime, vs...))
}

// SendoutTimeGT applies the GT predicate on the "sendout_time" field.
func SendoutTimeGT(v time.Time) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldGT(FieldSendoutTime, v))
}

// SendoutTimeGTE applies the GTE predicate on the "sendout_time" field.
func SendoutTimeGTE(v time.Time) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldGTE(FieldSendoutTime, v))
}

// SendoutTimeLT applies the LT predicate on the "sendout_time" field.
func SendoutTimeLT(v time.Time) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldLT(FieldSendoutTime, v))
}

// SendoutTimeLTE applies the LTE predicate on the "sendout_time" field.
func SendoutTimeLTE(v time.Time) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldLTE(FieldSendoutTime, v))
}

// SendoutTimeIsNil applies the IsNil predicate on the "sendout_time" field.
func SendoutTimeIsNil() predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldIsNull(FieldSendoutTime))
}

// SendoutTimeNotNil applies the NotNil predicate on the "sendout_time" field.
func SendoutTimeNotNil() predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldNotNull(FieldSendoutTime))
}

// IsRedrawOrderEQ applies the EQ predicate on the "is_redraw_order" field.
func IsRedrawOrderEQ(v bool) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldEQ(FieldIsRedrawOrder, v))
}

// IsRedrawOrderNEQ applies the NEQ predicate on the "is_redraw_order" field.
func IsRedrawOrderNEQ(v bool) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldNEQ(FieldIsRedrawOrder, v))
}

// IsRedrawOrderIsNil applies the IsNil predicate on the "is_redraw_order" field.
func IsRedrawOrderIsNil() predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldIsNull(FieldIsRedrawOrder))
}

// IsRedrawOrderNotNil applies the NotNil predicate on the "is_redraw_order" field.
func IsRedrawOrderNotNil() predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldNotNull(FieldIsRedrawOrder))
}

// IsLabSpecialOrderEQ applies the EQ predicate on the "is_lab_special_order" field.
func IsLabSpecialOrderEQ(v bool) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldEQ(FieldIsLabSpecialOrder, v))
}

// IsLabSpecialOrderNEQ applies the NEQ predicate on the "is_lab_special_order" field.
func IsLabSpecialOrderNEQ(v bool) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldNEQ(FieldIsLabSpecialOrder, v))
}

// IsLabSpecialOrderIsNil applies the IsNil predicate on the "is_lab_special_order" field.
func IsLabSpecialOrderIsNil() predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldIsNull(FieldIsLabSpecialOrder))
}

// IsLabSpecialOrderNotNil applies the NotNil predicate on the "is_lab_special_order" field.
func IsLabSpecialOrderNotNil() predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldNotNull(FieldIsLabSpecialOrder))
}

// ActionEQ applies the EQ predicate on the "action" field.
func ActionEQ(v string) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldEQ(FieldAction, v))
}

// ActionNEQ applies the NEQ predicate on the "action" field.
func ActionNEQ(v string) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldNEQ(FieldAction, v))
}

// ActionIn applies the In predicate on the "action" field.
func ActionIn(vs ...string) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldIn(FieldAction, vs...))
}

// ActionNotIn applies the NotIn predicate on the "action" field.
func ActionNotIn(vs ...string) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldNotIn(FieldAction, vs...))
}

// ActionGT applies the GT predicate on the "action" field.
func ActionGT(v string) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldGT(FieldAction, v))
}

// ActionGTE applies the GTE predicate on the "action" field.
func ActionGTE(v string) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldGTE(FieldAction, v))
}

// ActionLT applies the LT predicate on the "action" field.
func ActionLT(v string) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldLT(FieldAction, v))
}

// ActionLTE applies the LTE predicate on the "action" field.
func ActionLTE(v string) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldLTE(FieldAction, v))
}

// ActionContains applies the Contains predicate on the "action" field.
func ActionContains(v string) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldContains(FieldAction, v))
}

// ActionHasPrefix applies the HasPrefix predicate on the "action" field.
func ActionHasPrefix(v string) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldHasPrefix(FieldAction, v))
}

// ActionHasSuffix applies the HasSuffix predicate on the "action" field.
func ActionHasSuffix(v string) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldHasSuffix(FieldAction, v))
}

// ActionIsNil applies the IsNil predicate on the "action" field.
func ActionIsNil() predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldIsNull(FieldAction))
}

// ActionNotNil applies the NotNil predicate on the "action" field.
func ActionNotNil() predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldNotNull(FieldAction))
}

// ActionEqualFold applies the EqualFold predicate on the "action" field.
func ActionEqualFold(v string) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldEqualFold(FieldAction, v))
}

// ActionContainsFold applies the ContainsFold predicate on the "action" field.
func ActionContainsFold(v string) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldContainsFold(FieldAction, v))
}

// IsResendBlockedEQ applies the EQ predicate on the "is_resend_blocked" field.
func IsResendBlockedEQ(v bool) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldEQ(FieldIsResendBlocked, v))
}

// IsResendBlockedNEQ applies the NEQ predicate on the "is_resend_blocked" field.
func IsResendBlockedNEQ(v bool) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldNEQ(FieldIsResendBlocked, v))
}

// IsResendBlockedIsNil applies the IsNil predicate on the "is_resend_blocked" field.
func IsResendBlockedIsNil() predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldIsNull(FieldIsResendBlocked))
}

// IsResendBlockedNotNil applies the NotNil predicate on the "is_resend_blocked" field.
func IsResendBlockedNotNil() predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.FieldNotNull(FieldIsResendBlocked))
}

// HasSample applies the HasEdge predicate on the "sample" edge.
func HasSample() predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, false, SampleTable, SampleColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasSampleWith applies the HasEdge predicate on the "sample" edge with a given conditions (other predicates).
func HasSampleWith(preds ...predicate.Sample) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(func(s *sql.Selector) {
		step := newSampleStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.LabOrderSendHistory) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.LabOrderSendHistory) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.LabOrderSendHistory) predicate.LabOrderSendHistory {
	return predicate.LabOrderSendHistory(sql.NotPredicates(p))
}
