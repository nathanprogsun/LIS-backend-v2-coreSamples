// Code generated by ent, DO NOT EDIT.

package internaluser

import (
	"coresamples/ent/predicate"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldLTE(FieldID, id))
}

// InternalUserRole applies equality check predicate on the "internal_user_role" field. It's identical to InternalUserRoleEQ.
func InternalUserRole(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldEQ(FieldInternalUserRole, v))
}

// InternalUserName applies equality check predicate on the "internal_user_name" field. It's identical to InternalUserNameEQ.
func InternalUserName(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldEQ(FieldInternalUserName, v))
}

// InternalUserFirstname applies equality check predicate on the "internal_user_firstname" field. It's identical to InternalUserFirstnameEQ.
func InternalUserFirstname(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldEQ(FieldInternalUserFirstname, v))
}

// InternalUserLastname applies equality check predicate on the "internal_user_lastname" field. It's identical to InternalUserLastnameEQ.
func InternalUserLastname(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldEQ(FieldInternalUserLastname, v))
}

// InternalUserMiddleName applies equality check predicate on the "internal_user_middle_name" field. It's identical to InternalUserMiddleNameEQ.
func InternalUserMiddleName(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldEQ(FieldInternalUserMiddleName, v))
}

// InternalUserIsFullTime applies equality check predicate on the "internal_user_is_full_time" field. It's identical to InternalUserIsFullTimeEQ.
func InternalUserIsFullTime(v bool) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldEQ(FieldInternalUserIsFullTime, v))
}

// InternalUserEmail applies equality check predicate on the "internal_user_email" field. It's identical to InternalUserEmailEQ.
func InternalUserEmail(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldEQ(FieldInternalUserEmail, v))
}

// InternalUserPhone applies equality check predicate on the "internal_user_phone" field. It's identical to InternalUserPhoneEQ.
func InternalUserPhone(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldEQ(FieldInternalUserPhone, v))
}

// IsActive applies equality check predicate on the "isActive" field. It's identical to IsActiveEQ.
func IsActive(v bool) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldEQ(FieldIsActive, v))
}

// UserID applies equality check predicate on the "user_id" field. It's identical to UserIDEQ.
func UserID(v int) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldEQ(FieldUserID, v))
}

// InternalUserType applies equality check predicate on the "internal_user_type" field. It's identical to InternalUserTypeEQ.
func InternalUserType(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldEQ(FieldInternalUserType, v))
}

// InternalUserRoleID applies equality check predicate on the "internal_user_role_id" field. It's identical to InternalUserRoleIDEQ.
func InternalUserRoleID(v int) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldEQ(FieldInternalUserRoleID, v))
}

// InternalUserRoleEQ applies the EQ predicate on the "internal_user_role" field.
func InternalUserRoleEQ(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldEQ(FieldInternalUserRole, v))
}

// InternalUserRoleNEQ applies the NEQ predicate on the "internal_user_role" field.
func InternalUserRoleNEQ(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldNEQ(FieldInternalUserRole, v))
}

// InternalUserRoleIn applies the In predicate on the "internal_user_role" field.
func InternalUserRoleIn(vs ...string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldIn(FieldInternalUserRole, vs...))
}

// InternalUserRoleNotIn applies the NotIn predicate on the "internal_user_role" field.
func InternalUserRoleNotIn(vs ...string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldNotIn(FieldInternalUserRole, vs...))
}

// InternalUserRoleGT applies the GT predicate on the "internal_user_role" field.
func InternalUserRoleGT(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldGT(FieldInternalUserRole, v))
}

// InternalUserRoleGTE applies the GTE predicate on the "internal_user_role" field.
func InternalUserRoleGTE(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldGTE(FieldInternalUserRole, v))
}

// InternalUserRoleLT applies the LT predicate on the "internal_user_role" field.
func InternalUserRoleLT(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldLT(FieldInternalUserRole, v))
}

// InternalUserRoleLTE applies the LTE predicate on the "internal_user_role" field.
func InternalUserRoleLTE(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldLTE(FieldInternalUserRole, v))
}

// InternalUserRoleContains applies the Contains predicate on the "internal_user_role" field.
func InternalUserRoleContains(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldContains(FieldInternalUserRole, v))
}

// InternalUserRoleHasPrefix applies the HasPrefix predicate on the "internal_user_role" field.
func InternalUserRoleHasPrefix(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldHasPrefix(FieldInternalUserRole, v))
}

// InternalUserRoleHasSuffix applies the HasSuffix predicate on the "internal_user_role" field.
func InternalUserRoleHasSuffix(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldHasSuffix(FieldInternalUserRole, v))
}

// InternalUserRoleEqualFold applies the EqualFold predicate on the "internal_user_role" field.
func InternalUserRoleEqualFold(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldEqualFold(FieldInternalUserRole, v))
}

// InternalUserRoleContainsFold applies the ContainsFold predicate on the "internal_user_role" field.
func InternalUserRoleContainsFold(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldContainsFold(FieldInternalUserRole, v))
}

// InternalUserNameEQ applies the EQ predicate on the "internal_user_name" field.
func InternalUserNameEQ(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldEQ(FieldInternalUserName, v))
}

// InternalUserNameNEQ applies the NEQ predicate on the "internal_user_name" field.
func InternalUserNameNEQ(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldNEQ(FieldInternalUserName, v))
}

// InternalUserNameIn applies the In predicate on the "internal_user_name" field.
func InternalUserNameIn(vs ...string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldIn(FieldInternalUserName, vs...))
}

// InternalUserNameNotIn applies the NotIn predicate on the "internal_user_name" field.
func InternalUserNameNotIn(vs ...string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldNotIn(FieldInternalUserName, vs...))
}

// InternalUserNameGT applies the GT predicate on the "internal_user_name" field.
func InternalUserNameGT(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldGT(FieldInternalUserName, v))
}

// InternalUserNameGTE applies the GTE predicate on the "internal_user_name" field.
func InternalUserNameGTE(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldGTE(FieldInternalUserName, v))
}

// InternalUserNameLT applies the LT predicate on the "internal_user_name" field.
func InternalUserNameLT(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldLT(FieldInternalUserName, v))
}

// InternalUserNameLTE applies the LTE predicate on the "internal_user_name" field.
func InternalUserNameLTE(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldLTE(FieldInternalUserName, v))
}

// InternalUserNameContains applies the Contains predicate on the "internal_user_name" field.
func InternalUserNameContains(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldContains(FieldInternalUserName, v))
}

// InternalUserNameHasPrefix applies the HasPrefix predicate on the "internal_user_name" field.
func InternalUserNameHasPrefix(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldHasPrefix(FieldInternalUserName, v))
}

// InternalUserNameHasSuffix applies the HasSuffix predicate on the "internal_user_name" field.
func InternalUserNameHasSuffix(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldHasSuffix(FieldInternalUserName, v))
}

// InternalUserNameIsNil applies the IsNil predicate on the "internal_user_name" field.
func InternalUserNameIsNil() predicate.InternalUser {
	return predicate.InternalUser(sql.FieldIsNull(FieldInternalUserName))
}

// InternalUserNameNotNil applies the NotNil predicate on the "internal_user_name" field.
func InternalUserNameNotNil() predicate.InternalUser {
	return predicate.InternalUser(sql.FieldNotNull(FieldInternalUserName))
}

// InternalUserNameEqualFold applies the EqualFold predicate on the "internal_user_name" field.
func InternalUserNameEqualFold(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldEqualFold(FieldInternalUserName, v))
}

// InternalUserNameContainsFold applies the ContainsFold predicate on the "internal_user_name" field.
func InternalUserNameContainsFold(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldContainsFold(FieldInternalUserName, v))
}

// InternalUserFirstnameEQ applies the EQ predicate on the "internal_user_firstname" field.
func InternalUserFirstnameEQ(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldEQ(FieldInternalUserFirstname, v))
}

// InternalUserFirstnameNEQ applies the NEQ predicate on the "internal_user_firstname" field.
func InternalUserFirstnameNEQ(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldNEQ(FieldInternalUserFirstname, v))
}

// InternalUserFirstnameIn applies the In predicate on the "internal_user_firstname" field.
func InternalUserFirstnameIn(vs ...string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldIn(FieldInternalUserFirstname, vs...))
}

// InternalUserFirstnameNotIn applies the NotIn predicate on the "internal_user_firstname" field.
func InternalUserFirstnameNotIn(vs ...string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldNotIn(FieldInternalUserFirstname, vs...))
}

// InternalUserFirstnameGT applies the GT predicate on the "internal_user_firstname" field.
func InternalUserFirstnameGT(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldGT(FieldInternalUserFirstname, v))
}

// InternalUserFirstnameGTE applies the GTE predicate on the "internal_user_firstname" field.
func InternalUserFirstnameGTE(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldGTE(FieldInternalUserFirstname, v))
}

// InternalUserFirstnameLT applies the LT predicate on the "internal_user_firstname" field.
func InternalUserFirstnameLT(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldLT(FieldInternalUserFirstname, v))
}

// InternalUserFirstnameLTE applies the LTE predicate on the "internal_user_firstname" field.
func InternalUserFirstnameLTE(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldLTE(FieldInternalUserFirstname, v))
}

// InternalUserFirstnameContains applies the Contains predicate on the "internal_user_firstname" field.
func InternalUserFirstnameContains(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldContains(FieldInternalUserFirstname, v))
}

// InternalUserFirstnameHasPrefix applies the HasPrefix predicate on the "internal_user_firstname" field.
func InternalUserFirstnameHasPrefix(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldHasPrefix(FieldInternalUserFirstname, v))
}

// InternalUserFirstnameHasSuffix applies the HasSuffix predicate on the "internal_user_firstname" field.
func InternalUserFirstnameHasSuffix(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldHasSuffix(FieldInternalUserFirstname, v))
}

// InternalUserFirstnameIsNil applies the IsNil predicate on the "internal_user_firstname" field.
func InternalUserFirstnameIsNil() predicate.InternalUser {
	return predicate.InternalUser(sql.FieldIsNull(FieldInternalUserFirstname))
}

// InternalUserFirstnameNotNil applies the NotNil predicate on the "internal_user_firstname" field.
func InternalUserFirstnameNotNil() predicate.InternalUser {
	return predicate.InternalUser(sql.FieldNotNull(FieldInternalUserFirstname))
}

// InternalUserFirstnameEqualFold applies the EqualFold predicate on the "internal_user_firstname" field.
func InternalUserFirstnameEqualFold(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldEqualFold(FieldInternalUserFirstname, v))
}

// InternalUserFirstnameContainsFold applies the ContainsFold predicate on the "internal_user_firstname" field.
func InternalUserFirstnameContainsFold(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldContainsFold(FieldInternalUserFirstname, v))
}

// InternalUserLastnameEQ applies the EQ predicate on the "internal_user_lastname" field.
func InternalUserLastnameEQ(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldEQ(FieldInternalUserLastname, v))
}

// InternalUserLastnameNEQ applies the NEQ predicate on the "internal_user_lastname" field.
func InternalUserLastnameNEQ(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldNEQ(FieldInternalUserLastname, v))
}

// InternalUserLastnameIn applies the In predicate on the "internal_user_lastname" field.
func InternalUserLastnameIn(vs ...string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldIn(FieldInternalUserLastname, vs...))
}

// InternalUserLastnameNotIn applies the NotIn predicate on the "internal_user_lastname" field.
func InternalUserLastnameNotIn(vs ...string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldNotIn(FieldInternalUserLastname, vs...))
}

// InternalUserLastnameGT applies the GT predicate on the "internal_user_lastname" field.
func InternalUserLastnameGT(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldGT(FieldInternalUserLastname, v))
}

// InternalUserLastnameGTE applies the GTE predicate on the "internal_user_lastname" field.
func InternalUserLastnameGTE(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldGTE(FieldInternalUserLastname, v))
}

// InternalUserLastnameLT applies the LT predicate on the "internal_user_lastname" field.
func InternalUserLastnameLT(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldLT(FieldInternalUserLastname, v))
}

// InternalUserLastnameLTE applies the LTE predicate on the "internal_user_lastname" field.
func InternalUserLastnameLTE(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldLTE(FieldInternalUserLastname, v))
}

// InternalUserLastnameContains applies the Contains predicate on the "internal_user_lastname" field.
func InternalUserLastnameContains(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldContains(FieldInternalUserLastname, v))
}

// InternalUserLastnameHasPrefix applies the HasPrefix predicate on the "internal_user_lastname" field.
func InternalUserLastnameHasPrefix(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldHasPrefix(FieldInternalUserLastname, v))
}

// InternalUserLastnameHasSuffix applies the HasSuffix predicate on the "internal_user_lastname" field.
func InternalUserLastnameHasSuffix(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldHasSuffix(FieldInternalUserLastname, v))
}

// InternalUserLastnameIsNil applies the IsNil predicate on the "internal_user_lastname" field.
func InternalUserLastnameIsNil() predicate.InternalUser {
	return predicate.InternalUser(sql.FieldIsNull(FieldInternalUserLastname))
}

// InternalUserLastnameNotNil applies the NotNil predicate on the "internal_user_lastname" field.
func InternalUserLastnameNotNil() predicate.InternalUser {
	return predicate.InternalUser(sql.FieldNotNull(FieldInternalUserLastname))
}

// InternalUserLastnameEqualFold applies the EqualFold predicate on the "internal_user_lastname" field.
func InternalUserLastnameEqualFold(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldEqualFold(FieldInternalUserLastname, v))
}

// InternalUserLastnameContainsFold applies the ContainsFold predicate on the "internal_user_lastname" field.
func InternalUserLastnameContainsFold(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldContainsFold(FieldInternalUserLastname, v))
}

// InternalUserMiddleNameEQ applies the EQ predicate on the "internal_user_middle_name" field.
func InternalUserMiddleNameEQ(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldEQ(FieldInternalUserMiddleName, v))
}

// InternalUserMiddleNameNEQ applies the NEQ predicate on the "internal_user_middle_name" field.
func InternalUserMiddleNameNEQ(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldNEQ(FieldInternalUserMiddleName, v))
}

// InternalUserMiddleNameIn applies the In predicate on the "internal_user_middle_name" field.
func InternalUserMiddleNameIn(vs ...string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldIn(FieldInternalUserMiddleName, vs...))
}

// InternalUserMiddleNameNotIn applies the NotIn predicate on the "internal_user_middle_name" field.
func InternalUserMiddleNameNotIn(vs ...string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldNotIn(FieldInternalUserMiddleName, vs...))
}

// InternalUserMiddleNameGT applies the GT predicate on the "internal_user_middle_name" field.
func InternalUserMiddleNameGT(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldGT(FieldInternalUserMiddleName, v))
}

// InternalUserMiddleNameGTE applies the GTE predicate on the "internal_user_middle_name" field.
func InternalUserMiddleNameGTE(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldGTE(FieldInternalUserMiddleName, v))
}

// InternalUserMiddleNameLT applies the LT predicate on the "internal_user_middle_name" field.
func InternalUserMiddleNameLT(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldLT(FieldInternalUserMiddleName, v))
}

// InternalUserMiddleNameLTE applies the LTE predicate on the "internal_user_middle_name" field.
func InternalUserMiddleNameLTE(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldLTE(FieldInternalUserMiddleName, v))
}

// InternalUserMiddleNameContains applies the Contains predicate on the "internal_user_middle_name" field.
func InternalUserMiddleNameContains(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldContains(FieldInternalUserMiddleName, v))
}

// InternalUserMiddleNameHasPrefix applies the HasPrefix predicate on the "internal_user_middle_name" field.
func InternalUserMiddleNameHasPrefix(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldHasPrefix(FieldInternalUserMiddleName, v))
}

// InternalUserMiddleNameHasSuffix applies the HasSuffix predicate on the "internal_user_middle_name" field.
func InternalUserMiddleNameHasSuffix(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldHasSuffix(FieldInternalUserMiddleName, v))
}

// InternalUserMiddleNameIsNil applies the IsNil predicate on the "internal_user_middle_name" field.
func InternalUserMiddleNameIsNil() predicate.InternalUser {
	return predicate.InternalUser(sql.FieldIsNull(FieldInternalUserMiddleName))
}

// InternalUserMiddleNameNotNil applies the NotNil predicate on the "internal_user_middle_name" field.
func InternalUserMiddleNameNotNil() predicate.InternalUser {
	return predicate.InternalUser(sql.FieldNotNull(FieldInternalUserMiddleName))
}

// InternalUserMiddleNameEqualFold applies the EqualFold predicate on the "internal_user_middle_name" field.
func InternalUserMiddleNameEqualFold(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldEqualFold(FieldInternalUserMiddleName, v))
}

// InternalUserMiddleNameContainsFold applies the ContainsFold predicate on the "internal_user_middle_name" field.
func InternalUserMiddleNameContainsFold(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldContainsFold(FieldInternalUserMiddleName, v))
}

// InternalUserIsFullTimeEQ applies the EQ predicate on the "internal_user_is_full_time" field.
func InternalUserIsFullTimeEQ(v bool) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldEQ(FieldInternalUserIsFullTime, v))
}

// InternalUserIsFullTimeNEQ applies the NEQ predicate on the "internal_user_is_full_time" field.
func InternalUserIsFullTimeNEQ(v bool) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldNEQ(FieldInternalUserIsFullTime, v))
}

// InternalUserEmailEQ applies the EQ predicate on the "internal_user_email" field.
func InternalUserEmailEQ(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldEQ(FieldInternalUserEmail, v))
}

// InternalUserEmailNEQ applies the NEQ predicate on the "internal_user_email" field.
func InternalUserEmailNEQ(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldNEQ(FieldInternalUserEmail, v))
}

// InternalUserEmailIn applies the In predicate on the "internal_user_email" field.
func InternalUserEmailIn(vs ...string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldIn(FieldInternalUserEmail, vs...))
}

// InternalUserEmailNotIn applies the NotIn predicate on the "internal_user_email" field.
func InternalUserEmailNotIn(vs ...string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldNotIn(FieldInternalUserEmail, vs...))
}

// InternalUserEmailGT applies the GT predicate on the "internal_user_email" field.
func InternalUserEmailGT(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldGT(FieldInternalUserEmail, v))
}

// InternalUserEmailGTE applies the GTE predicate on the "internal_user_email" field.
func InternalUserEmailGTE(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldGTE(FieldInternalUserEmail, v))
}

// InternalUserEmailLT applies the LT predicate on the "internal_user_email" field.
func InternalUserEmailLT(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldLT(FieldInternalUserEmail, v))
}

// InternalUserEmailLTE applies the LTE predicate on the "internal_user_email" field.
func InternalUserEmailLTE(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldLTE(FieldInternalUserEmail, v))
}

// InternalUserEmailContains applies the Contains predicate on the "internal_user_email" field.
func InternalUserEmailContains(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldContains(FieldInternalUserEmail, v))
}

// InternalUserEmailHasPrefix applies the HasPrefix predicate on the "internal_user_email" field.
func InternalUserEmailHasPrefix(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldHasPrefix(FieldInternalUserEmail, v))
}

// InternalUserEmailHasSuffix applies the HasSuffix predicate on the "internal_user_email" field.
func InternalUserEmailHasSuffix(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldHasSuffix(FieldInternalUserEmail, v))
}

// InternalUserEmailIsNil applies the IsNil predicate on the "internal_user_email" field.
func InternalUserEmailIsNil() predicate.InternalUser {
	return predicate.InternalUser(sql.FieldIsNull(FieldInternalUserEmail))
}

// InternalUserEmailNotNil applies the NotNil predicate on the "internal_user_email" field.
func InternalUserEmailNotNil() predicate.InternalUser {
	return predicate.InternalUser(sql.FieldNotNull(FieldInternalUserEmail))
}

// InternalUserEmailEqualFold applies the EqualFold predicate on the "internal_user_email" field.
func InternalUserEmailEqualFold(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldEqualFold(FieldInternalUserEmail, v))
}

// InternalUserEmailContainsFold applies the ContainsFold predicate on the "internal_user_email" field.
func InternalUserEmailContainsFold(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldContainsFold(FieldInternalUserEmail, v))
}

// InternalUserPhoneEQ applies the EQ predicate on the "internal_user_phone" field.
func InternalUserPhoneEQ(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldEQ(FieldInternalUserPhone, v))
}

// InternalUserPhoneNEQ applies the NEQ predicate on the "internal_user_phone" field.
func InternalUserPhoneNEQ(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldNEQ(FieldInternalUserPhone, v))
}

// InternalUserPhoneIn applies the In predicate on the "internal_user_phone" field.
func InternalUserPhoneIn(vs ...string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldIn(FieldInternalUserPhone, vs...))
}

// InternalUserPhoneNotIn applies the NotIn predicate on the "internal_user_phone" field.
func InternalUserPhoneNotIn(vs ...string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldNotIn(FieldInternalUserPhone, vs...))
}

// InternalUserPhoneGT applies the GT predicate on the "internal_user_phone" field.
func InternalUserPhoneGT(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldGT(FieldInternalUserPhone, v))
}

// InternalUserPhoneGTE applies the GTE predicate on the "internal_user_phone" field.
func InternalUserPhoneGTE(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldGTE(FieldInternalUserPhone, v))
}

// InternalUserPhoneLT applies the LT predicate on the "internal_user_phone" field.
func InternalUserPhoneLT(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldLT(FieldInternalUserPhone, v))
}

// InternalUserPhoneLTE applies the LTE predicate on the "internal_user_phone" field.
func InternalUserPhoneLTE(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldLTE(FieldInternalUserPhone, v))
}

// InternalUserPhoneContains applies the Contains predicate on the "internal_user_phone" field.
func InternalUserPhoneContains(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldContains(FieldInternalUserPhone, v))
}

// InternalUserPhoneHasPrefix applies the HasPrefix predicate on the "internal_user_phone" field.
func InternalUserPhoneHasPrefix(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldHasPrefix(FieldInternalUserPhone, v))
}

// InternalUserPhoneHasSuffix applies the HasSuffix predicate on the "internal_user_phone" field.
func InternalUserPhoneHasSuffix(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldHasSuffix(FieldInternalUserPhone, v))
}

// InternalUserPhoneIsNil applies the IsNil predicate on the "internal_user_phone" field.
func InternalUserPhoneIsNil() predicate.InternalUser {
	return predicate.InternalUser(sql.FieldIsNull(FieldInternalUserPhone))
}

// InternalUserPhoneNotNil applies the NotNil predicate on the "internal_user_phone" field.
func InternalUserPhoneNotNil() predicate.InternalUser {
	return predicate.InternalUser(sql.FieldNotNull(FieldInternalUserPhone))
}

// InternalUserPhoneEqualFold applies the EqualFold predicate on the "internal_user_phone" field.
func InternalUserPhoneEqualFold(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldEqualFold(FieldInternalUserPhone, v))
}

// InternalUserPhoneContainsFold applies the ContainsFold predicate on the "internal_user_phone" field.
func InternalUserPhoneContainsFold(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldContainsFold(FieldInternalUserPhone, v))
}

// IsActiveEQ applies the EQ predicate on the "isActive" field.
func IsActiveEQ(v bool) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldEQ(FieldIsActive, v))
}

// IsActiveNEQ applies the NEQ predicate on the "isActive" field.
func IsActiveNEQ(v bool) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldNEQ(FieldIsActive, v))
}

// UserIDEQ applies the EQ predicate on the "user_id" field.
func UserIDEQ(v int) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldEQ(FieldUserID, v))
}

// UserIDNEQ applies the NEQ predicate on the "user_id" field.
func UserIDNEQ(v int) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldNEQ(FieldUserID, v))
}

// UserIDIn applies the In predicate on the "user_id" field.
func UserIDIn(vs ...int) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldIn(FieldUserID, vs...))
}

// UserIDNotIn applies the NotIn predicate on the "user_id" field.
func UserIDNotIn(vs ...int) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldNotIn(FieldUserID, vs...))
}

// UserIDIsNil applies the IsNil predicate on the "user_id" field.
func UserIDIsNil() predicate.InternalUser {
	return predicate.InternalUser(sql.FieldIsNull(FieldUserID))
}

// UserIDNotNil applies the NotNil predicate on the "user_id" field.
func UserIDNotNil() predicate.InternalUser {
	return predicate.InternalUser(sql.FieldNotNull(FieldUserID))
}

// InternalUserTypeEQ applies the EQ predicate on the "internal_user_type" field.
func InternalUserTypeEQ(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldEQ(FieldInternalUserType, v))
}

// InternalUserTypeNEQ applies the NEQ predicate on the "internal_user_type" field.
func InternalUserTypeNEQ(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldNEQ(FieldInternalUserType, v))
}

// InternalUserTypeIn applies the In predicate on the "internal_user_type" field.
func InternalUserTypeIn(vs ...string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldIn(FieldInternalUserType, vs...))
}

// InternalUserTypeNotIn applies the NotIn predicate on the "internal_user_type" field.
func InternalUserTypeNotIn(vs ...string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldNotIn(FieldInternalUserType, vs...))
}

// InternalUserTypeGT applies the GT predicate on the "internal_user_type" field.
func InternalUserTypeGT(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldGT(FieldInternalUserType, v))
}

// InternalUserTypeGTE applies the GTE predicate on the "internal_user_type" field.
func InternalUserTypeGTE(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldGTE(FieldInternalUserType, v))
}

// InternalUserTypeLT applies the LT predicate on the "internal_user_type" field.
func InternalUserTypeLT(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldLT(FieldInternalUserType, v))
}

// InternalUserTypeLTE applies the LTE predicate on the "internal_user_type" field.
func InternalUserTypeLTE(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldLTE(FieldInternalUserType, v))
}

// InternalUserTypeContains applies the Contains predicate on the "internal_user_type" field.
func InternalUserTypeContains(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldContains(FieldInternalUserType, v))
}

// InternalUserTypeHasPrefix applies the HasPrefix predicate on the "internal_user_type" field.
func InternalUserTypeHasPrefix(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldHasPrefix(FieldInternalUserType, v))
}

// InternalUserTypeHasSuffix applies the HasSuffix predicate on the "internal_user_type" field.
func InternalUserTypeHasSuffix(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldHasSuffix(FieldInternalUserType, v))
}

// InternalUserTypeIsNil applies the IsNil predicate on the "internal_user_type" field.
func InternalUserTypeIsNil() predicate.InternalUser {
	return predicate.InternalUser(sql.FieldIsNull(FieldInternalUserType))
}

// InternalUserTypeNotNil applies the NotNil predicate on the "internal_user_type" field.
func InternalUserTypeNotNil() predicate.InternalUser {
	return predicate.InternalUser(sql.FieldNotNull(FieldInternalUserType))
}

// InternalUserTypeEqualFold applies the EqualFold predicate on the "internal_user_type" field.
func InternalUserTypeEqualFold(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldEqualFold(FieldInternalUserType, v))
}

// InternalUserTypeContainsFold applies the ContainsFold predicate on the "internal_user_type" field.
func InternalUserTypeContainsFold(v string) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldContainsFold(FieldInternalUserType, v))
}

// InternalUserRoleIDEQ applies the EQ predicate on the "internal_user_role_id" field.
func InternalUserRoleIDEQ(v int) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldEQ(FieldInternalUserRoleID, v))
}

// InternalUserRoleIDNEQ applies the NEQ predicate on the "internal_user_role_id" field.
func InternalUserRoleIDNEQ(v int) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldNEQ(FieldInternalUserRoleID, v))
}

// InternalUserRoleIDIn applies the In predicate on the "internal_user_role_id" field.
func InternalUserRoleIDIn(vs ...int) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldIn(FieldInternalUserRoleID, vs...))
}

// InternalUserRoleIDNotIn applies the NotIn predicate on the "internal_user_role_id" field.
func InternalUserRoleIDNotIn(vs ...int) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldNotIn(FieldInternalUserRoleID, vs...))
}

// InternalUserRoleIDGT applies the GT predicate on the "internal_user_role_id" field.
func InternalUserRoleIDGT(v int) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldGT(FieldInternalUserRoleID, v))
}

// InternalUserRoleIDGTE applies the GTE predicate on the "internal_user_role_id" field.
func InternalUserRoleIDGTE(v int) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldGTE(FieldInternalUserRoleID, v))
}

// InternalUserRoleIDLT applies the LT predicate on the "internal_user_role_id" field.
func InternalUserRoleIDLT(v int) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldLT(FieldInternalUserRoleID, v))
}

// InternalUserRoleIDLTE applies the LTE predicate on the "internal_user_role_id" field.
func InternalUserRoleIDLTE(v int) predicate.InternalUser {
	return predicate.InternalUser(sql.FieldLTE(FieldInternalUserRoleID, v))
}

// InternalUserRoleIDIsNil applies the IsNil predicate on the "internal_user_role_id" field.
func InternalUserRoleIDIsNil() predicate.InternalUser {
	return predicate.InternalUser(sql.FieldIsNull(FieldInternalUserRoleID))
}

// InternalUserRoleIDNotNil applies the NotNil predicate on the "internal_user_role_id" field.
func InternalUserRoleIDNotNil() predicate.InternalUser {
	return predicate.InternalUser(sql.FieldNotNull(FieldInternalUserRoleID))
}

// HasSalesTeam applies the HasEdge predicate on the "sales_team" edge.
func HasSalesTeam() predicate.InternalUser {
	return predicate.InternalUser(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2M, true, SalesTeamTable, SalesTeamColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasSalesTeamWith applies the HasEdge predicate on the "sales_team" edge with a given conditions (other predicates).
func HasSalesTeamWith(preds ...predicate.SalesTeam) predicate.InternalUser {
	return predicate.InternalUser(func(s *sql.Selector) {
		step := newSalesTeamStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasInternalUserContacts applies the HasEdge predicate on the "internal_user_contacts" edge.
func HasInternalUserContacts() predicate.InternalUser {
	return predicate.InternalUser(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2M, false, InternalUserContactsTable, InternalUserContactsColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasInternalUserContactsWith applies the HasEdge predicate on the "internal_user_contacts" edge with a given conditions (other predicates).
func HasInternalUserContactsWith(preds ...predicate.Contact) predicate.InternalUser {
	return predicate.InternalUser(func(s *sql.Selector) {
		step := newInternalUserContactsStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasInternalUserAddresses applies the HasEdge predicate on the "internal_user_addresses" edge.
func HasInternalUserAddresses() predicate.InternalUser {
	return predicate.InternalUser(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2M, false, InternalUserAddressesTable, InternalUserAddressesColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasInternalUserAddressesWith applies the HasEdge predicate on the "internal_user_addresses" edge with a given conditions (other predicates).
func HasInternalUserAddressesWith(preds ...predicate.Address) predicate.InternalUser {
	return predicate.InternalUser(func(s *sql.Selector) {
		step := newInternalUserAddressesStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasCustomers applies the HasEdge predicate on the "customers" edge.
func HasCustomers() predicate.InternalUser {
	return predicate.InternalUser(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2M, false, CustomersTable, CustomersColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasCustomersWith applies the HasEdge predicate on the "customers" edge with a given conditions (other predicates).
func HasCustomersWith(preds ...predicate.Customer) predicate.InternalUser {
	return predicate.InternalUser(func(s *sql.Selector) {
		step := newCustomersStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasUser applies the HasEdge predicate on the "user" edge.
func HasUser() predicate.InternalUser {
	return predicate.InternalUser(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, UserTable, UserColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasUserWith applies the HasEdge predicate on the "user" edge with a given conditions (other predicates).
func HasUserWith(preds ...predicate.User) predicate.InternalUser {
	return predicate.InternalUser(func(s *sql.Selector) {
		step := newUserStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasInternalUserSettings applies the HasEdge predicate on the "internal_user_settings" edge.
func HasInternalUserSettings() predicate.InternalUser {
	return predicate.InternalUser(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2M, false, InternalUserSettingsTable, InternalUserSettingsPrimaryKey...),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasInternalUserSettingsWith applies the HasEdge predicate on the "internal_user_settings" edge with a given conditions (other predicates).
func HasInternalUserSettingsWith(preds ...predicate.Setting) predicate.InternalUser {
	return predicate.InternalUser(func(s *sql.Selector) {
		step := newInternalUserSettingsStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.InternalUser) predicate.InternalUser {
	return predicate.InternalUser(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.InternalUser) predicate.InternalUser {
	return predicate.InternalUser(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.InternalUser) predicate.InternalUser {
	return predicate.InternalUser(sql.NotPredicates(p))
}
