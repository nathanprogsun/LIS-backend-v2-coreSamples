// Code generated by ent, DO NOT EDIT.

package orderinfo

import (
	"coresamples/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLTE(FieldID, id))
}

// OrderTitle applies equality check predicate on the "order_title" field. It's identical to OrderTitleEQ.
func OrderTitle(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderTitle, v))
}

// OrderType applies equality check predicate on the "order_type" field. It's identical to OrderTypeEQ.
func OrderType(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderType, v))
}

// OrderDescription applies equality check predicate on the "order_description" field. It's identical to OrderDescriptionEQ.
func OrderDescription(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderDescription, v))
}

// OrderConfirmationNumber applies equality check predicate on the "order_confirmation_number" field. It's identical to OrderConfirmationNumberEQ.
func OrderConfirmationNumber(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderConfirmationNumber, v))
}

// ClinicID applies equality check predicate on the "clinic_id" field. It's identical to ClinicIDEQ.
func ClinicID(v int) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldClinicID, v))
}

// CustomerID applies equality check predicate on the "customer_id" field. It's identical to CustomerIDEQ.
func CustomerID(v int) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldCustomerID, v))
}

// OrderCreateTime applies equality check predicate on the "order_create_time" field. It's identical to OrderCreateTimeEQ.
func OrderCreateTime(v time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderCreateTime, v))
}

// OrderServiceTime applies equality check predicate on the "order_service_time" field. It's identical to OrderServiceTimeEQ.
func OrderServiceTime(v time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderServiceTime, v))
}

// OrderProcessTime applies equality check predicate on the "order_process_time" field. It's identical to OrderProcessTimeEQ.
func OrderProcessTime(v time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderProcessTime, v))
}

// OrderRedrawTime applies equality check predicate on the "order_redraw_time" field. It's identical to OrderRedrawTimeEQ.
func OrderRedrawTime(v time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderRedrawTime, v))
}

// OrderCancelTime applies equality check predicate on the "order_cancel_time" field. It's identical to OrderCancelTimeEQ.
func OrderCancelTime(v time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderCancelTime, v))
}

// IsActive applies equality check predicate on the "isActive" field. It's identical to IsActiveEQ.
func IsActive(v bool) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldIsActive, v))
}

// HasOrderSetting applies equality check predicate on the "has_order_setting" field. It's identical to HasOrderSettingEQ.
func HasOrderSetting(v bool) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldHasOrderSetting, v))
}

// OrderCanceled applies equality check predicate on the "order_canceled" field. It's identical to OrderCanceledEQ.
func OrderCanceled(v bool) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderCanceled, v))
}

// OrderFlagged applies equality check predicate on the "order_flagged" field. It's identical to OrderFlaggedEQ.
func OrderFlagged(v bool) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderFlagged, v))
}

// OrderStatus applies equality check predicate on the "order_status" field. It's identical to OrderStatusEQ.
func OrderStatus(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderStatus, v))
}

// OrderMajorStatus applies equality check predicate on the "order_major_status" field. It's identical to OrderMajorStatusEQ.
func OrderMajorStatus(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderMajorStatus, v))
}

// OrderKitStatus applies equality check predicate on the "order_kit_status" field. It's identical to OrderKitStatusEQ.
func OrderKitStatus(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderKitStatus, v))
}

// OrderReportStatus applies equality check predicate on the "order_report_status" field. It's identical to OrderReportStatusEQ.
func OrderReportStatus(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderReportStatus, v))
}

// OrderTnpIssueStatus applies equality check predicate on the "order_tnp_issue_status" field. It's identical to OrderTnpIssueStatusEQ.
func OrderTnpIssueStatus(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderTnpIssueStatus, v))
}

// OrderBillingIssueStatus applies equality check predicate on the "order_billing_issue_status" field. It's identical to OrderBillingIssueStatusEQ.
func OrderBillingIssueStatus(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderBillingIssueStatus, v))
}

// OrderMissingInfoIssueStatus applies equality check predicate on the "order_missing_info_issue_status" field. It's identical to OrderMissingInfoIssueStatusEQ.
func OrderMissingInfoIssueStatus(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderMissingInfoIssueStatus, v))
}

// OrderIncompleteQuestionnaireIssueStatus applies equality check predicate on the "order_incomplete_questionnaire_issue_status" field. It's identical to OrderIncompleteQuestionnaireIssueStatusEQ.
func OrderIncompleteQuestionnaireIssueStatus(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderIncompleteQuestionnaireIssueStatus, v))
}

// OrderNyWaiveFormIssueStatus applies equality check predicate on the "order_ny_waive_form_issue_status" field. It's identical to OrderNyWaiveFormIssueStatusEQ.
func OrderNyWaiveFormIssueStatus(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderNyWaiveFormIssueStatus, v))
}

// OrderLabIssueStatus applies equality check predicate on the "order_lab_issue_status" field. It's identical to OrderLabIssueStatusEQ.
func OrderLabIssueStatus(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderLabIssueStatus, v))
}

// OrderProcessingTime applies equality check predicate on the "order_processing_time" field. It's identical to OrderProcessingTimeEQ.
func OrderProcessingTime(v time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderProcessingTime, v))
}

// OrderMinorStatus applies equality check predicate on the "order_minor_status" field. It's identical to OrderMinorStatusEQ.
func OrderMinorStatus(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderMinorStatus, v))
}

// PatientFirstName applies equality check predicate on the "patient_first_name" field. It's identical to PatientFirstNameEQ.
func PatientFirstName(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldPatientFirstName, v))
}

// PatientLastName applies equality check predicate on the "patient_last_name" field. It's identical to PatientLastNameEQ.
func PatientLastName(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldPatientLastName, v))
}

// OrderSource applies equality check predicate on the "order_source" field. It's identical to OrderSourceEQ.
func OrderSource(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderSource, v))
}

// OrderChargeMethod applies equality check predicate on the "order_charge_method" field. It's identical to OrderChargeMethodEQ.
func OrderChargeMethod(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderChargeMethod, v))
}

// OrderPlacingType applies equality check predicate on the "order_placing_type" field. It's identical to OrderPlacingTypeEQ.
func OrderPlacingType(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderPlacingType, v))
}

// BillingOrderID applies equality check predicate on the "billing_order_id" field. It's identical to BillingOrderIDEQ.
func BillingOrderID(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldBillingOrderID, v))
}

// ContactID applies equality check predicate on the "contact_id" field. It's identical to ContactIDEQ.
func ContactID(v int) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldContactID, v))
}

// AddressID applies equality check predicate on the "address_id" field. It's identical to AddressIDEQ.
func AddressID(v int) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldAddressID, v))
}

// OrderTitleEQ applies the EQ predicate on the "order_title" field.
func OrderTitleEQ(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderTitle, v))
}

// OrderTitleNEQ applies the NEQ predicate on the "order_title" field.
func OrderTitleNEQ(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNEQ(FieldOrderTitle, v))
}

// OrderTitleIn applies the In predicate on the "order_title" field.
func OrderTitleIn(vs ...string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIn(FieldOrderTitle, vs...))
}

// OrderTitleNotIn applies the NotIn predicate on the "order_title" field.
func OrderTitleNotIn(vs ...string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotIn(FieldOrderTitle, vs...))
}

// OrderTitleGT applies the GT predicate on the "order_title" field.
func OrderTitleGT(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGT(FieldOrderTitle, v))
}

// OrderTitleGTE applies the GTE predicate on the "order_title" field.
func OrderTitleGTE(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGTE(FieldOrderTitle, v))
}

// OrderTitleLT applies the LT predicate on the "order_title" field.
func OrderTitleLT(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLT(FieldOrderTitle, v))
}

// OrderTitleLTE applies the LTE predicate on the "order_title" field.
func OrderTitleLTE(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLTE(FieldOrderTitle, v))
}

// OrderTitleContains applies the Contains predicate on the "order_title" field.
func OrderTitleContains(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldContains(FieldOrderTitle, v))
}

// OrderTitleHasPrefix applies the HasPrefix predicate on the "order_title" field.
func OrderTitleHasPrefix(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldHasPrefix(FieldOrderTitle, v))
}

// OrderTitleHasSuffix applies the HasSuffix predicate on the "order_title" field.
func OrderTitleHasSuffix(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldHasSuffix(FieldOrderTitle, v))
}

// OrderTitleEqualFold applies the EqualFold predicate on the "order_title" field.
func OrderTitleEqualFold(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEqualFold(FieldOrderTitle, v))
}

// OrderTitleContainsFold applies the ContainsFold predicate on the "order_title" field.
func OrderTitleContainsFold(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldContainsFold(FieldOrderTitle, v))
}

// OrderTypeEQ applies the EQ predicate on the "order_type" field.
func OrderTypeEQ(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderType, v))
}

// OrderTypeNEQ applies the NEQ predicate on the "order_type" field.
func OrderTypeNEQ(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNEQ(FieldOrderType, v))
}

// OrderTypeIn applies the In predicate on the "order_type" field.
func OrderTypeIn(vs ...string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIn(FieldOrderType, vs...))
}

// OrderTypeNotIn applies the NotIn predicate on the "order_type" field.
func OrderTypeNotIn(vs ...string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotIn(FieldOrderType, vs...))
}

// OrderTypeGT applies the GT predicate on the "order_type" field.
func OrderTypeGT(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGT(FieldOrderType, v))
}

// OrderTypeGTE applies the GTE predicate on the "order_type" field.
func OrderTypeGTE(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGTE(FieldOrderType, v))
}

// OrderTypeLT applies the LT predicate on the "order_type" field.
func OrderTypeLT(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLT(FieldOrderType, v))
}

// OrderTypeLTE applies the LTE predicate on the "order_type" field.
func OrderTypeLTE(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLTE(FieldOrderType, v))
}

// OrderTypeContains applies the Contains predicate on the "order_type" field.
func OrderTypeContains(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldContains(FieldOrderType, v))
}

// OrderTypeHasPrefix applies the HasPrefix predicate on the "order_type" field.
func OrderTypeHasPrefix(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldHasPrefix(FieldOrderType, v))
}

// OrderTypeHasSuffix applies the HasSuffix predicate on the "order_type" field.
func OrderTypeHasSuffix(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldHasSuffix(FieldOrderType, v))
}

// OrderTypeEqualFold applies the EqualFold predicate on the "order_type" field.
func OrderTypeEqualFold(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEqualFold(FieldOrderType, v))
}

// OrderTypeContainsFold applies the ContainsFold predicate on the "order_type" field.
func OrderTypeContainsFold(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldContainsFold(FieldOrderType, v))
}

// OrderDescriptionEQ applies the EQ predicate on the "order_description" field.
func OrderDescriptionEQ(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderDescription, v))
}

// OrderDescriptionNEQ applies the NEQ predicate on the "order_description" field.
func OrderDescriptionNEQ(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNEQ(FieldOrderDescription, v))
}

// OrderDescriptionIn applies the In predicate on the "order_description" field.
func OrderDescriptionIn(vs ...string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIn(FieldOrderDescription, vs...))
}

// OrderDescriptionNotIn applies the NotIn predicate on the "order_description" field.
func OrderDescriptionNotIn(vs ...string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotIn(FieldOrderDescription, vs...))
}

// OrderDescriptionGT applies the GT predicate on the "order_description" field.
func OrderDescriptionGT(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGT(FieldOrderDescription, v))
}

// OrderDescriptionGTE applies the GTE predicate on the "order_description" field.
func OrderDescriptionGTE(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGTE(FieldOrderDescription, v))
}

// OrderDescriptionLT applies the LT predicate on the "order_description" field.
func OrderDescriptionLT(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLT(FieldOrderDescription, v))
}

// OrderDescriptionLTE applies the LTE predicate on the "order_description" field.
func OrderDescriptionLTE(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLTE(FieldOrderDescription, v))
}

// OrderDescriptionContains applies the Contains predicate on the "order_description" field.
func OrderDescriptionContains(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldContains(FieldOrderDescription, v))
}

// OrderDescriptionHasPrefix applies the HasPrefix predicate on the "order_description" field.
func OrderDescriptionHasPrefix(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldHasPrefix(FieldOrderDescription, v))
}

// OrderDescriptionHasSuffix applies the HasSuffix predicate on the "order_description" field.
func OrderDescriptionHasSuffix(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldHasSuffix(FieldOrderDescription, v))
}

// OrderDescriptionEqualFold applies the EqualFold predicate on the "order_description" field.
func OrderDescriptionEqualFold(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEqualFold(FieldOrderDescription, v))
}

// OrderDescriptionContainsFold applies the ContainsFold predicate on the "order_description" field.
func OrderDescriptionContainsFold(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldContainsFold(FieldOrderDescription, v))
}

// OrderConfirmationNumberEQ applies the EQ predicate on the "order_confirmation_number" field.
func OrderConfirmationNumberEQ(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderConfirmationNumber, v))
}

// OrderConfirmationNumberNEQ applies the NEQ predicate on the "order_confirmation_number" field.
func OrderConfirmationNumberNEQ(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNEQ(FieldOrderConfirmationNumber, v))
}

// OrderConfirmationNumberIn applies the In predicate on the "order_confirmation_number" field.
func OrderConfirmationNumberIn(vs ...string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIn(FieldOrderConfirmationNumber, vs...))
}

// OrderConfirmationNumberNotIn applies the NotIn predicate on the "order_confirmation_number" field.
func OrderConfirmationNumberNotIn(vs ...string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotIn(FieldOrderConfirmationNumber, vs...))
}

// OrderConfirmationNumberGT applies the GT predicate on the "order_confirmation_number" field.
func OrderConfirmationNumberGT(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGT(FieldOrderConfirmationNumber, v))
}

// OrderConfirmationNumberGTE applies the GTE predicate on the "order_confirmation_number" field.
func OrderConfirmationNumberGTE(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGTE(FieldOrderConfirmationNumber, v))
}

// OrderConfirmationNumberLT applies the LT predicate on the "order_confirmation_number" field.
func OrderConfirmationNumberLT(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLT(FieldOrderConfirmationNumber, v))
}

// OrderConfirmationNumberLTE applies the LTE predicate on the "order_confirmation_number" field.
func OrderConfirmationNumberLTE(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLTE(FieldOrderConfirmationNumber, v))
}

// OrderConfirmationNumberContains applies the Contains predicate on the "order_confirmation_number" field.
func OrderConfirmationNumberContains(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldContains(FieldOrderConfirmationNumber, v))
}

// OrderConfirmationNumberHasPrefix applies the HasPrefix predicate on the "order_confirmation_number" field.
func OrderConfirmationNumberHasPrefix(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldHasPrefix(FieldOrderConfirmationNumber, v))
}

// OrderConfirmationNumberHasSuffix applies the HasSuffix predicate on the "order_confirmation_number" field.
func OrderConfirmationNumberHasSuffix(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldHasSuffix(FieldOrderConfirmationNumber, v))
}

// OrderConfirmationNumberEqualFold applies the EqualFold predicate on the "order_confirmation_number" field.
func OrderConfirmationNumberEqualFold(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEqualFold(FieldOrderConfirmationNumber, v))
}

// OrderConfirmationNumberContainsFold applies the ContainsFold predicate on the "order_confirmation_number" field.
func OrderConfirmationNumberContainsFold(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldContainsFold(FieldOrderConfirmationNumber, v))
}

// ClinicIDEQ applies the EQ predicate on the "clinic_id" field.
func ClinicIDEQ(v int) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldClinicID, v))
}

// ClinicIDNEQ applies the NEQ predicate on the "clinic_id" field.
func ClinicIDNEQ(v int) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNEQ(FieldClinicID, v))
}

// ClinicIDIn applies the In predicate on the "clinic_id" field.
func ClinicIDIn(vs ...int) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIn(FieldClinicID, vs...))
}

// ClinicIDNotIn applies the NotIn predicate on the "clinic_id" field.
func ClinicIDNotIn(vs ...int) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotIn(FieldClinicID, vs...))
}

// ClinicIDIsNil applies the IsNil predicate on the "clinic_id" field.
func ClinicIDIsNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIsNull(FieldClinicID))
}

// ClinicIDNotNil applies the NotNil predicate on the "clinic_id" field.
func ClinicIDNotNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotNull(FieldClinicID))
}

// CustomerIDEQ applies the EQ predicate on the "customer_id" field.
func CustomerIDEQ(v int) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldCustomerID, v))
}

// CustomerIDNEQ applies the NEQ predicate on the "customer_id" field.
func CustomerIDNEQ(v int) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNEQ(FieldCustomerID, v))
}

// CustomerIDIn applies the In predicate on the "customer_id" field.
func CustomerIDIn(vs ...int) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIn(FieldCustomerID, vs...))
}

// CustomerIDNotIn applies the NotIn predicate on the "customer_id" field.
func CustomerIDNotIn(vs ...int) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotIn(FieldCustomerID, vs...))
}

// CustomerIDIsNil applies the IsNil predicate on the "customer_id" field.
func CustomerIDIsNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIsNull(FieldCustomerID))
}

// CustomerIDNotNil applies the NotNil predicate on the "customer_id" field.
func CustomerIDNotNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotNull(FieldCustomerID))
}

// OrderCreateTimeEQ applies the EQ predicate on the "order_create_time" field.
func OrderCreateTimeEQ(v time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderCreateTime, v))
}

// OrderCreateTimeNEQ applies the NEQ predicate on the "order_create_time" field.
func OrderCreateTimeNEQ(v time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNEQ(FieldOrderCreateTime, v))
}

// OrderCreateTimeIn applies the In predicate on the "order_create_time" field.
func OrderCreateTimeIn(vs ...time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIn(FieldOrderCreateTime, vs...))
}

// OrderCreateTimeNotIn applies the NotIn predicate on the "order_create_time" field.
func OrderCreateTimeNotIn(vs ...time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotIn(FieldOrderCreateTime, vs...))
}

// OrderCreateTimeGT applies the GT predicate on the "order_create_time" field.
func OrderCreateTimeGT(v time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGT(FieldOrderCreateTime, v))
}

// OrderCreateTimeGTE applies the GTE predicate on the "order_create_time" field.
func OrderCreateTimeGTE(v time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGTE(FieldOrderCreateTime, v))
}

// OrderCreateTimeLT applies the LT predicate on the "order_create_time" field.
func OrderCreateTimeLT(v time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLT(FieldOrderCreateTime, v))
}

// OrderCreateTimeLTE applies the LTE predicate on the "order_create_time" field.
func OrderCreateTimeLTE(v time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLTE(FieldOrderCreateTime, v))
}

// OrderServiceTimeEQ applies the EQ predicate on the "order_service_time" field.
func OrderServiceTimeEQ(v time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderServiceTime, v))
}

// OrderServiceTimeNEQ applies the NEQ predicate on the "order_service_time" field.
func OrderServiceTimeNEQ(v time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNEQ(FieldOrderServiceTime, v))
}

// OrderServiceTimeIn applies the In predicate on the "order_service_time" field.
func OrderServiceTimeIn(vs ...time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIn(FieldOrderServiceTime, vs...))
}

// OrderServiceTimeNotIn applies the NotIn predicate on the "order_service_time" field.
func OrderServiceTimeNotIn(vs ...time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotIn(FieldOrderServiceTime, vs...))
}

// OrderServiceTimeGT applies the GT predicate on the "order_service_time" field.
func OrderServiceTimeGT(v time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGT(FieldOrderServiceTime, v))
}

// OrderServiceTimeGTE applies the GTE predicate on the "order_service_time" field.
func OrderServiceTimeGTE(v time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGTE(FieldOrderServiceTime, v))
}

// OrderServiceTimeLT applies the LT predicate on the "order_service_time" field.
func OrderServiceTimeLT(v time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLT(FieldOrderServiceTime, v))
}

// OrderServiceTimeLTE applies the LTE predicate on the "order_service_time" field.
func OrderServiceTimeLTE(v time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLTE(FieldOrderServiceTime, v))
}

// OrderServiceTimeIsNil applies the IsNil predicate on the "order_service_time" field.
func OrderServiceTimeIsNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIsNull(FieldOrderServiceTime))
}

// OrderServiceTimeNotNil applies the NotNil predicate on the "order_service_time" field.
func OrderServiceTimeNotNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotNull(FieldOrderServiceTime))
}

// OrderProcessTimeEQ applies the EQ predicate on the "order_process_time" field.
func OrderProcessTimeEQ(v time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderProcessTime, v))
}

// OrderProcessTimeNEQ applies the NEQ predicate on the "order_process_time" field.
func OrderProcessTimeNEQ(v time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNEQ(FieldOrderProcessTime, v))
}

// OrderProcessTimeIn applies the In predicate on the "order_process_time" field.
func OrderProcessTimeIn(vs ...time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIn(FieldOrderProcessTime, vs...))
}

// OrderProcessTimeNotIn applies the NotIn predicate on the "order_process_time" field.
func OrderProcessTimeNotIn(vs ...time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotIn(FieldOrderProcessTime, vs...))
}

// OrderProcessTimeGT applies the GT predicate on the "order_process_time" field.
func OrderProcessTimeGT(v time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGT(FieldOrderProcessTime, v))
}

// OrderProcessTimeGTE applies the GTE predicate on the "order_process_time" field.
func OrderProcessTimeGTE(v time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGTE(FieldOrderProcessTime, v))
}

// OrderProcessTimeLT applies the LT predicate on the "order_process_time" field.
func OrderProcessTimeLT(v time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLT(FieldOrderProcessTime, v))
}

// OrderProcessTimeLTE applies the LTE predicate on the "order_process_time" field.
func OrderProcessTimeLTE(v time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLTE(FieldOrderProcessTime, v))
}

// OrderProcessTimeIsNil applies the IsNil predicate on the "order_process_time" field.
func OrderProcessTimeIsNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIsNull(FieldOrderProcessTime))
}

// OrderProcessTimeNotNil applies the NotNil predicate on the "order_process_time" field.
func OrderProcessTimeNotNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotNull(FieldOrderProcessTime))
}

// OrderRedrawTimeEQ applies the EQ predicate on the "order_redraw_time" field.
func OrderRedrawTimeEQ(v time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderRedrawTime, v))
}

// OrderRedrawTimeNEQ applies the NEQ predicate on the "order_redraw_time" field.
func OrderRedrawTimeNEQ(v time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNEQ(FieldOrderRedrawTime, v))
}

// OrderRedrawTimeIn applies the In predicate on the "order_redraw_time" field.
func OrderRedrawTimeIn(vs ...time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIn(FieldOrderRedrawTime, vs...))
}

// OrderRedrawTimeNotIn applies the NotIn predicate on the "order_redraw_time" field.
func OrderRedrawTimeNotIn(vs ...time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotIn(FieldOrderRedrawTime, vs...))
}

// OrderRedrawTimeGT applies the GT predicate on the "order_redraw_time" field.
func OrderRedrawTimeGT(v time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGT(FieldOrderRedrawTime, v))
}

// OrderRedrawTimeGTE applies the GTE predicate on the "order_redraw_time" field.
func OrderRedrawTimeGTE(v time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGTE(FieldOrderRedrawTime, v))
}

// OrderRedrawTimeLT applies the LT predicate on the "order_redraw_time" field.
func OrderRedrawTimeLT(v time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLT(FieldOrderRedrawTime, v))
}

// OrderRedrawTimeLTE applies the LTE predicate on the "order_redraw_time" field.
func OrderRedrawTimeLTE(v time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLTE(FieldOrderRedrawTime, v))
}

// OrderRedrawTimeIsNil applies the IsNil predicate on the "order_redraw_time" field.
func OrderRedrawTimeIsNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIsNull(FieldOrderRedrawTime))
}

// OrderRedrawTimeNotNil applies the NotNil predicate on the "order_redraw_time" field.
func OrderRedrawTimeNotNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotNull(FieldOrderRedrawTime))
}

// OrderCancelTimeEQ applies the EQ predicate on the "order_cancel_time" field.
func OrderCancelTimeEQ(v time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderCancelTime, v))
}

// OrderCancelTimeNEQ applies the NEQ predicate on the "order_cancel_time" field.
func OrderCancelTimeNEQ(v time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNEQ(FieldOrderCancelTime, v))
}

// OrderCancelTimeIn applies the In predicate on the "order_cancel_time" field.
func OrderCancelTimeIn(vs ...time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIn(FieldOrderCancelTime, vs...))
}

// OrderCancelTimeNotIn applies the NotIn predicate on the "order_cancel_time" field.
func OrderCancelTimeNotIn(vs ...time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotIn(FieldOrderCancelTime, vs...))
}

// OrderCancelTimeGT applies the GT predicate on the "order_cancel_time" field.
func OrderCancelTimeGT(v time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGT(FieldOrderCancelTime, v))
}

// OrderCancelTimeGTE applies the GTE predicate on the "order_cancel_time" field.
func OrderCancelTimeGTE(v time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGTE(FieldOrderCancelTime, v))
}

// OrderCancelTimeLT applies the LT predicate on the "order_cancel_time" field.
func OrderCancelTimeLT(v time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLT(FieldOrderCancelTime, v))
}

// OrderCancelTimeLTE applies the LTE predicate on the "order_cancel_time" field.
func OrderCancelTimeLTE(v time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLTE(FieldOrderCancelTime, v))
}

// OrderCancelTimeIsNil applies the IsNil predicate on the "order_cancel_time" field.
func OrderCancelTimeIsNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIsNull(FieldOrderCancelTime))
}

// OrderCancelTimeNotNil applies the NotNil predicate on the "order_cancel_time" field.
func OrderCancelTimeNotNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotNull(FieldOrderCancelTime))
}

// IsActiveEQ applies the EQ predicate on the "isActive" field.
func IsActiveEQ(v bool) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldIsActive, v))
}

// IsActiveNEQ applies the NEQ predicate on the "isActive" field.
func IsActiveNEQ(v bool) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNEQ(FieldIsActive, v))
}

// HasOrderSettingEQ applies the EQ predicate on the "has_order_setting" field.
func HasOrderSettingEQ(v bool) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldHasOrderSetting, v))
}

// HasOrderSettingNEQ applies the NEQ predicate on the "has_order_setting" field.
func HasOrderSettingNEQ(v bool) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNEQ(FieldHasOrderSetting, v))
}

// OrderCanceledEQ applies the EQ predicate on the "order_canceled" field.
func OrderCanceledEQ(v bool) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderCanceled, v))
}

// OrderCanceledNEQ applies the NEQ predicate on the "order_canceled" field.
func OrderCanceledNEQ(v bool) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNEQ(FieldOrderCanceled, v))
}

// OrderFlaggedEQ applies the EQ predicate on the "order_flagged" field.
func OrderFlaggedEQ(v bool) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderFlagged, v))
}

// OrderFlaggedNEQ applies the NEQ predicate on the "order_flagged" field.
func OrderFlaggedNEQ(v bool) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNEQ(FieldOrderFlagged, v))
}

// OrderStatusEQ applies the EQ predicate on the "order_status" field.
func OrderStatusEQ(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderStatus, v))
}

// OrderStatusNEQ applies the NEQ predicate on the "order_status" field.
func OrderStatusNEQ(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNEQ(FieldOrderStatus, v))
}

// OrderStatusIn applies the In predicate on the "order_status" field.
func OrderStatusIn(vs ...string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIn(FieldOrderStatus, vs...))
}

// OrderStatusNotIn applies the NotIn predicate on the "order_status" field.
func OrderStatusNotIn(vs ...string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotIn(FieldOrderStatus, vs...))
}

// OrderStatusGT applies the GT predicate on the "order_status" field.
func OrderStatusGT(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGT(FieldOrderStatus, v))
}

// OrderStatusGTE applies the GTE predicate on the "order_status" field.
func OrderStatusGTE(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGTE(FieldOrderStatus, v))
}

// OrderStatusLT applies the LT predicate on the "order_status" field.
func OrderStatusLT(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLT(FieldOrderStatus, v))
}

// OrderStatusLTE applies the LTE predicate on the "order_status" field.
func OrderStatusLTE(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLTE(FieldOrderStatus, v))
}

// OrderStatusContains applies the Contains predicate on the "order_status" field.
func OrderStatusContains(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldContains(FieldOrderStatus, v))
}

// OrderStatusHasPrefix applies the HasPrefix predicate on the "order_status" field.
func OrderStatusHasPrefix(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldHasPrefix(FieldOrderStatus, v))
}

// OrderStatusHasSuffix applies the HasSuffix predicate on the "order_status" field.
func OrderStatusHasSuffix(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldHasSuffix(FieldOrderStatus, v))
}

// OrderStatusIsNil applies the IsNil predicate on the "order_status" field.
func OrderStatusIsNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIsNull(FieldOrderStatus))
}

// OrderStatusNotNil applies the NotNil predicate on the "order_status" field.
func OrderStatusNotNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotNull(FieldOrderStatus))
}

// OrderStatusEqualFold applies the EqualFold predicate on the "order_status" field.
func OrderStatusEqualFold(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEqualFold(FieldOrderStatus, v))
}

// OrderStatusContainsFold applies the ContainsFold predicate on the "order_status" field.
func OrderStatusContainsFold(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldContainsFold(FieldOrderStatus, v))
}

// OrderMajorStatusEQ applies the EQ predicate on the "order_major_status" field.
func OrderMajorStatusEQ(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderMajorStatus, v))
}

// OrderMajorStatusNEQ applies the NEQ predicate on the "order_major_status" field.
func OrderMajorStatusNEQ(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNEQ(FieldOrderMajorStatus, v))
}

// OrderMajorStatusIn applies the In predicate on the "order_major_status" field.
func OrderMajorStatusIn(vs ...string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIn(FieldOrderMajorStatus, vs...))
}

// OrderMajorStatusNotIn applies the NotIn predicate on the "order_major_status" field.
func OrderMajorStatusNotIn(vs ...string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotIn(FieldOrderMajorStatus, vs...))
}

// OrderMajorStatusGT applies the GT predicate on the "order_major_status" field.
func OrderMajorStatusGT(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGT(FieldOrderMajorStatus, v))
}

// OrderMajorStatusGTE applies the GTE predicate on the "order_major_status" field.
func OrderMajorStatusGTE(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGTE(FieldOrderMajorStatus, v))
}

// OrderMajorStatusLT applies the LT predicate on the "order_major_status" field.
func OrderMajorStatusLT(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLT(FieldOrderMajorStatus, v))
}

// OrderMajorStatusLTE applies the LTE predicate on the "order_major_status" field.
func OrderMajorStatusLTE(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLTE(FieldOrderMajorStatus, v))
}

// OrderMajorStatusContains applies the Contains predicate on the "order_major_status" field.
func OrderMajorStatusContains(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldContains(FieldOrderMajorStatus, v))
}

// OrderMajorStatusHasPrefix applies the HasPrefix predicate on the "order_major_status" field.
func OrderMajorStatusHasPrefix(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldHasPrefix(FieldOrderMajorStatus, v))
}

// OrderMajorStatusHasSuffix applies the HasSuffix predicate on the "order_major_status" field.
func OrderMajorStatusHasSuffix(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldHasSuffix(FieldOrderMajorStatus, v))
}

// OrderMajorStatusIsNil applies the IsNil predicate on the "order_major_status" field.
func OrderMajorStatusIsNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIsNull(FieldOrderMajorStatus))
}

// OrderMajorStatusNotNil applies the NotNil predicate on the "order_major_status" field.
func OrderMajorStatusNotNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotNull(FieldOrderMajorStatus))
}

// OrderMajorStatusEqualFold applies the EqualFold predicate on the "order_major_status" field.
func OrderMajorStatusEqualFold(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEqualFold(FieldOrderMajorStatus, v))
}

// OrderMajorStatusContainsFold applies the ContainsFold predicate on the "order_major_status" field.
func OrderMajorStatusContainsFold(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldContainsFold(FieldOrderMajorStatus, v))
}

// OrderKitStatusEQ applies the EQ predicate on the "order_kit_status" field.
func OrderKitStatusEQ(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderKitStatus, v))
}

// OrderKitStatusNEQ applies the NEQ predicate on the "order_kit_status" field.
func OrderKitStatusNEQ(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNEQ(FieldOrderKitStatus, v))
}

// OrderKitStatusIn applies the In predicate on the "order_kit_status" field.
func OrderKitStatusIn(vs ...string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIn(FieldOrderKitStatus, vs...))
}

// OrderKitStatusNotIn applies the NotIn predicate on the "order_kit_status" field.
func OrderKitStatusNotIn(vs ...string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotIn(FieldOrderKitStatus, vs...))
}

// OrderKitStatusGT applies the GT predicate on the "order_kit_status" field.
func OrderKitStatusGT(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGT(FieldOrderKitStatus, v))
}

// OrderKitStatusGTE applies the GTE predicate on the "order_kit_status" field.
func OrderKitStatusGTE(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGTE(FieldOrderKitStatus, v))
}

// OrderKitStatusLT applies the LT predicate on the "order_kit_status" field.
func OrderKitStatusLT(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLT(FieldOrderKitStatus, v))
}

// OrderKitStatusLTE applies the LTE predicate on the "order_kit_status" field.
func OrderKitStatusLTE(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLTE(FieldOrderKitStatus, v))
}

// OrderKitStatusContains applies the Contains predicate on the "order_kit_status" field.
func OrderKitStatusContains(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldContains(FieldOrderKitStatus, v))
}

// OrderKitStatusHasPrefix applies the HasPrefix predicate on the "order_kit_status" field.
func OrderKitStatusHasPrefix(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldHasPrefix(FieldOrderKitStatus, v))
}

// OrderKitStatusHasSuffix applies the HasSuffix predicate on the "order_kit_status" field.
func OrderKitStatusHasSuffix(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldHasSuffix(FieldOrderKitStatus, v))
}

// OrderKitStatusIsNil applies the IsNil predicate on the "order_kit_status" field.
func OrderKitStatusIsNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIsNull(FieldOrderKitStatus))
}

// OrderKitStatusNotNil applies the NotNil predicate on the "order_kit_status" field.
func OrderKitStatusNotNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotNull(FieldOrderKitStatus))
}

// OrderKitStatusEqualFold applies the EqualFold predicate on the "order_kit_status" field.
func OrderKitStatusEqualFold(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEqualFold(FieldOrderKitStatus, v))
}

// OrderKitStatusContainsFold applies the ContainsFold predicate on the "order_kit_status" field.
func OrderKitStatusContainsFold(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldContainsFold(FieldOrderKitStatus, v))
}

// OrderReportStatusEQ applies the EQ predicate on the "order_report_status" field.
func OrderReportStatusEQ(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderReportStatus, v))
}

// OrderReportStatusNEQ applies the NEQ predicate on the "order_report_status" field.
func OrderReportStatusNEQ(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNEQ(FieldOrderReportStatus, v))
}

// OrderReportStatusIn applies the In predicate on the "order_report_status" field.
func OrderReportStatusIn(vs ...string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIn(FieldOrderReportStatus, vs...))
}

// OrderReportStatusNotIn applies the NotIn predicate on the "order_report_status" field.
func OrderReportStatusNotIn(vs ...string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotIn(FieldOrderReportStatus, vs...))
}

// OrderReportStatusGT applies the GT predicate on the "order_report_status" field.
func OrderReportStatusGT(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGT(FieldOrderReportStatus, v))
}

// OrderReportStatusGTE applies the GTE predicate on the "order_report_status" field.
func OrderReportStatusGTE(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGTE(FieldOrderReportStatus, v))
}

// OrderReportStatusLT applies the LT predicate on the "order_report_status" field.
func OrderReportStatusLT(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLT(FieldOrderReportStatus, v))
}

// OrderReportStatusLTE applies the LTE predicate on the "order_report_status" field.
func OrderReportStatusLTE(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLTE(FieldOrderReportStatus, v))
}

// OrderReportStatusContains applies the Contains predicate on the "order_report_status" field.
func OrderReportStatusContains(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldContains(FieldOrderReportStatus, v))
}

// OrderReportStatusHasPrefix applies the HasPrefix predicate on the "order_report_status" field.
func OrderReportStatusHasPrefix(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldHasPrefix(FieldOrderReportStatus, v))
}

// OrderReportStatusHasSuffix applies the HasSuffix predicate on the "order_report_status" field.
func OrderReportStatusHasSuffix(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldHasSuffix(FieldOrderReportStatus, v))
}

// OrderReportStatusIsNil applies the IsNil predicate on the "order_report_status" field.
func OrderReportStatusIsNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIsNull(FieldOrderReportStatus))
}

// OrderReportStatusNotNil applies the NotNil predicate on the "order_report_status" field.
func OrderReportStatusNotNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotNull(FieldOrderReportStatus))
}

// OrderReportStatusEqualFold applies the EqualFold predicate on the "order_report_status" field.
func OrderReportStatusEqualFold(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEqualFold(FieldOrderReportStatus, v))
}

// OrderReportStatusContainsFold applies the ContainsFold predicate on the "order_report_status" field.
func OrderReportStatusContainsFold(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldContainsFold(FieldOrderReportStatus, v))
}

// OrderTnpIssueStatusEQ applies the EQ predicate on the "order_tnp_issue_status" field.
func OrderTnpIssueStatusEQ(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderTnpIssueStatus, v))
}

// OrderTnpIssueStatusNEQ applies the NEQ predicate on the "order_tnp_issue_status" field.
func OrderTnpIssueStatusNEQ(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNEQ(FieldOrderTnpIssueStatus, v))
}

// OrderTnpIssueStatusIn applies the In predicate on the "order_tnp_issue_status" field.
func OrderTnpIssueStatusIn(vs ...string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIn(FieldOrderTnpIssueStatus, vs...))
}

// OrderTnpIssueStatusNotIn applies the NotIn predicate on the "order_tnp_issue_status" field.
func OrderTnpIssueStatusNotIn(vs ...string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotIn(FieldOrderTnpIssueStatus, vs...))
}

// OrderTnpIssueStatusGT applies the GT predicate on the "order_tnp_issue_status" field.
func OrderTnpIssueStatusGT(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGT(FieldOrderTnpIssueStatus, v))
}

// OrderTnpIssueStatusGTE applies the GTE predicate on the "order_tnp_issue_status" field.
func OrderTnpIssueStatusGTE(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGTE(FieldOrderTnpIssueStatus, v))
}

// OrderTnpIssueStatusLT applies the LT predicate on the "order_tnp_issue_status" field.
func OrderTnpIssueStatusLT(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLT(FieldOrderTnpIssueStatus, v))
}

// OrderTnpIssueStatusLTE applies the LTE predicate on the "order_tnp_issue_status" field.
func OrderTnpIssueStatusLTE(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLTE(FieldOrderTnpIssueStatus, v))
}

// OrderTnpIssueStatusContains applies the Contains predicate on the "order_tnp_issue_status" field.
func OrderTnpIssueStatusContains(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldContains(FieldOrderTnpIssueStatus, v))
}

// OrderTnpIssueStatusHasPrefix applies the HasPrefix predicate on the "order_tnp_issue_status" field.
func OrderTnpIssueStatusHasPrefix(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldHasPrefix(FieldOrderTnpIssueStatus, v))
}

// OrderTnpIssueStatusHasSuffix applies the HasSuffix predicate on the "order_tnp_issue_status" field.
func OrderTnpIssueStatusHasSuffix(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldHasSuffix(FieldOrderTnpIssueStatus, v))
}

// OrderTnpIssueStatusIsNil applies the IsNil predicate on the "order_tnp_issue_status" field.
func OrderTnpIssueStatusIsNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIsNull(FieldOrderTnpIssueStatus))
}

// OrderTnpIssueStatusNotNil applies the NotNil predicate on the "order_tnp_issue_status" field.
func OrderTnpIssueStatusNotNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotNull(FieldOrderTnpIssueStatus))
}

// OrderTnpIssueStatusEqualFold applies the EqualFold predicate on the "order_tnp_issue_status" field.
func OrderTnpIssueStatusEqualFold(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEqualFold(FieldOrderTnpIssueStatus, v))
}

// OrderTnpIssueStatusContainsFold applies the ContainsFold predicate on the "order_tnp_issue_status" field.
func OrderTnpIssueStatusContainsFold(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldContainsFold(FieldOrderTnpIssueStatus, v))
}

// OrderBillingIssueStatusEQ applies the EQ predicate on the "order_billing_issue_status" field.
func OrderBillingIssueStatusEQ(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderBillingIssueStatus, v))
}

// OrderBillingIssueStatusNEQ applies the NEQ predicate on the "order_billing_issue_status" field.
func OrderBillingIssueStatusNEQ(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNEQ(FieldOrderBillingIssueStatus, v))
}

// OrderBillingIssueStatusIn applies the In predicate on the "order_billing_issue_status" field.
func OrderBillingIssueStatusIn(vs ...string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIn(FieldOrderBillingIssueStatus, vs...))
}

// OrderBillingIssueStatusNotIn applies the NotIn predicate on the "order_billing_issue_status" field.
func OrderBillingIssueStatusNotIn(vs ...string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotIn(FieldOrderBillingIssueStatus, vs...))
}

// OrderBillingIssueStatusGT applies the GT predicate on the "order_billing_issue_status" field.
func OrderBillingIssueStatusGT(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGT(FieldOrderBillingIssueStatus, v))
}

// OrderBillingIssueStatusGTE applies the GTE predicate on the "order_billing_issue_status" field.
func OrderBillingIssueStatusGTE(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGTE(FieldOrderBillingIssueStatus, v))
}

// OrderBillingIssueStatusLT applies the LT predicate on the "order_billing_issue_status" field.
func OrderBillingIssueStatusLT(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLT(FieldOrderBillingIssueStatus, v))
}

// OrderBillingIssueStatusLTE applies the LTE predicate on the "order_billing_issue_status" field.
func OrderBillingIssueStatusLTE(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLTE(FieldOrderBillingIssueStatus, v))
}

// OrderBillingIssueStatusContains applies the Contains predicate on the "order_billing_issue_status" field.
func OrderBillingIssueStatusContains(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldContains(FieldOrderBillingIssueStatus, v))
}

// OrderBillingIssueStatusHasPrefix applies the HasPrefix predicate on the "order_billing_issue_status" field.
func OrderBillingIssueStatusHasPrefix(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldHasPrefix(FieldOrderBillingIssueStatus, v))
}

// OrderBillingIssueStatusHasSuffix applies the HasSuffix predicate on the "order_billing_issue_status" field.
func OrderBillingIssueStatusHasSuffix(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldHasSuffix(FieldOrderBillingIssueStatus, v))
}

// OrderBillingIssueStatusIsNil applies the IsNil predicate on the "order_billing_issue_status" field.
func OrderBillingIssueStatusIsNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIsNull(FieldOrderBillingIssueStatus))
}

// OrderBillingIssueStatusNotNil applies the NotNil predicate on the "order_billing_issue_status" field.
func OrderBillingIssueStatusNotNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotNull(FieldOrderBillingIssueStatus))
}

// OrderBillingIssueStatusEqualFold applies the EqualFold predicate on the "order_billing_issue_status" field.
func OrderBillingIssueStatusEqualFold(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEqualFold(FieldOrderBillingIssueStatus, v))
}

// OrderBillingIssueStatusContainsFold applies the ContainsFold predicate on the "order_billing_issue_status" field.
func OrderBillingIssueStatusContainsFold(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldContainsFold(FieldOrderBillingIssueStatus, v))
}

// OrderMissingInfoIssueStatusEQ applies the EQ predicate on the "order_missing_info_issue_status" field.
func OrderMissingInfoIssueStatusEQ(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderMissingInfoIssueStatus, v))
}

// OrderMissingInfoIssueStatusNEQ applies the NEQ predicate on the "order_missing_info_issue_status" field.
func OrderMissingInfoIssueStatusNEQ(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNEQ(FieldOrderMissingInfoIssueStatus, v))
}

// OrderMissingInfoIssueStatusIn applies the In predicate on the "order_missing_info_issue_status" field.
func OrderMissingInfoIssueStatusIn(vs ...string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIn(FieldOrderMissingInfoIssueStatus, vs...))
}

// OrderMissingInfoIssueStatusNotIn applies the NotIn predicate on the "order_missing_info_issue_status" field.
func OrderMissingInfoIssueStatusNotIn(vs ...string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotIn(FieldOrderMissingInfoIssueStatus, vs...))
}

// OrderMissingInfoIssueStatusGT applies the GT predicate on the "order_missing_info_issue_status" field.
func OrderMissingInfoIssueStatusGT(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGT(FieldOrderMissingInfoIssueStatus, v))
}

// OrderMissingInfoIssueStatusGTE applies the GTE predicate on the "order_missing_info_issue_status" field.
func OrderMissingInfoIssueStatusGTE(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGTE(FieldOrderMissingInfoIssueStatus, v))
}

// OrderMissingInfoIssueStatusLT applies the LT predicate on the "order_missing_info_issue_status" field.
func OrderMissingInfoIssueStatusLT(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLT(FieldOrderMissingInfoIssueStatus, v))
}

// OrderMissingInfoIssueStatusLTE applies the LTE predicate on the "order_missing_info_issue_status" field.
func OrderMissingInfoIssueStatusLTE(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLTE(FieldOrderMissingInfoIssueStatus, v))
}

// OrderMissingInfoIssueStatusContains applies the Contains predicate on the "order_missing_info_issue_status" field.
func OrderMissingInfoIssueStatusContains(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldContains(FieldOrderMissingInfoIssueStatus, v))
}

// OrderMissingInfoIssueStatusHasPrefix applies the HasPrefix predicate on the "order_missing_info_issue_status" field.
func OrderMissingInfoIssueStatusHasPrefix(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldHasPrefix(FieldOrderMissingInfoIssueStatus, v))
}

// OrderMissingInfoIssueStatusHasSuffix applies the HasSuffix predicate on the "order_missing_info_issue_status" field.
func OrderMissingInfoIssueStatusHasSuffix(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldHasSuffix(FieldOrderMissingInfoIssueStatus, v))
}

// OrderMissingInfoIssueStatusIsNil applies the IsNil predicate on the "order_missing_info_issue_status" field.
func OrderMissingInfoIssueStatusIsNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIsNull(FieldOrderMissingInfoIssueStatus))
}

// OrderMissingInfoIssueStatusNotNil applies the NotNil predicate on the "order_missing_info_issue_status" field.
func OrderMissingInfoIssueStatusNotNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotNull(FieldOrderMissingInfoIssueStatus))
}

// OrderMissingInfoIssueStatusEqualFold applies the EqualFold predicate on the "order_missing_info_issue_status" field.
func OrderMissingInfoIssueStatusEqualFold(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEqualFold(FieldOrderMissingInfoIssueStatus, v))
}

// OrderMissingInfoIssueStatusContainsFold applies the ContainsFold predicate on the "order_missing_info_issue_status" field.
func OrderMissingInfoIssueStatusContainsFold(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldContainsFold(FieldOrderMissingInfoIssueStatus, v))
}

// OrderIncompleteQuestionnaireIssueStatusEQ applies the EQ predicate on the "order_incomplete_questionnaire_issue_status" field.
func OrderIncompleteQuestionnaireIssueStatusEQ(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderIncompleteQuestionnaireIssueStatus, v))
}

// OrderIncompleteQuestionnaireIssueStatusNEQ applies the NEQ predicate on the "order_incomplete_questionnaire_issue_status" field.
func OrderIncompleteQuestionnaireIssueStatusNEQ(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNEQ(FieldOrderIncompleteQuestionnaireIssueStatus, v))
}

// OrderIncompleteQuestionnaireIssueStatusIn applies the In predicate on the "order_incomplete_questionnaire_issue_status" field.
func OrderIncompleteQuestionnaireIssueStatusIn(vs ...string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIn(FieldOrderIncompleteQuestionnaireIssueStatus, vs...))
}

// OrderIncompleteQuestionnaireIssueStatusNotIn applies the NotIn predicate on the "order_incomplete_questionnaire_issue_status" field.
func OrderIncompleteQuestionnaireIssueStatusNotIn(vs ...string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotIn(FieldOrderIncompleteQuestionnaireIssueStatus, vs...))
}

// OrderIncompleteQuestionnaireIssueStatusGT applies the GT predicate on the "order_incomplete_questionnaire_issue_status" field.
func OrderIncompleteQuestionnaireIssueStatusGT(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGT(FieldOrderIncompleteQuestionnaireIssueStatus, v))
}

// OrderIncompleteQuestionnaireIssueStatusGTE applies the GTE predicate on the "order_incomplete_questionnaire_issue_status" field.
func OrderIncompleteQuestionnaireIssueStatusGTE(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGTE(FieldOrderIncompleteQuestionnaireIssueStatus, v))
}

// OrderIncompleteQuestionnaireIssueStatusLT applies the LT predicate on the "order_incomplete_questionnaire_issue_status" field.
func OrderIncompleteQuestionnaireIssueStatusLT(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLT(FieldOrderIncompleteQuestionnaireIssueStatus, v))
}

// OrderIncompleteQuestionnaireIssueStatusLTE applies the LTE predicate on the "order_incomplete_questionnaire_issue_status" field.
func OrderIncompleteQuestionnaireIssueStatusLTE(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLTE(FieldOrderIncompleteQuestionnaireIssueStatus, v))
}

// OrderIncompleteQuestionnaireIssueStatusContains applies the Contains predicate on the "order_incomplete_questionnaire_issue_status" field.
func OrderIncompleteQuestionnaireIssueStatusContains(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldContains(FieldOrderIncompleteQuestionnaireIssueStatus, v))
}

// OrderIncompleteQuestionnaireIssueStatusHasPrefix applies the HasPrefix predicate on the "order_incomplete_questionnaire_issue_status" field.
func OrderIncompleteQuestionnaireIssueStatusHasPrefix(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldHasPrefix(FieldOrderIncompleteQuestionnaireIssueStatus, v))
}

// OrderIncompleteQuestionnaireIssueStatusHasSuffix applies the HasSuffix predicate on the "order_incomplete_questionnaire_issue_status" field.
func OrderIncompleteQuestionnaireIssueStatusHasSuffix(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldHasSuffix(FieldOrderIncompleteQuestionnaireIssueStatus, v))
}

// OrderIncompleteQuestionnaireIssueStatusIsNil applies the IsNil predicate on the "order_incomplete_questionnaire_issue_status" field.
func OrderIncompleteQuestionnaireIssueStatusIsNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIsNull(FieldOrderIncompleteQuestionnaireIssueStatus))
}

// OrderIncompleteQuestionnaireIssueStatusNotNil applies the NotNil predicate on the "order_incomplete_questionnaire_issue_status" field.
func OrderIncompleteQuestionnaireIssueStatusNotNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotNull(FieldOrderIncompleteQuestionnaireIssueStatus))
}

// OrderIncompleteQuestionnaireIssueStatusEqualFold applies the EqualFold predicate on the "order_incomplete_questionnaire_issue_status" field.
func OrderIncompleteQuestionnaireIssueStatusEqualFold(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEqualFold(FieldOrderIncompleteQuestionnaireIssueStatus, v))
}

// OrderIncompleteQuestionnaireIssueStatusContainsFold applies the ContainsFold predicate on the "order_incomplete_questionnaire_issue_status" field.
func OrderIncompleteQuestionnaireIssueStatusContainsFold(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldContainsFold(FieldOrderIncompleteQuestionnaireIssueStatus, v))
}

// OrderNyWaiveFormIssueStatusEQ applies the EQ predicate on the "order_ny_waive_form_issue_status" field.
func OrderNyWaiveFormIssueStatusEQ(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderNyWaiveFormIssueStatus, v))
}

// OrderNyWaiveFormIssueStatusNEQ applies the NEQ predicate on the "order_ny_waive_form_issue_status" field.
func OrderNyWaiveFormIssueStatusNEQ(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNEQ(FieldOrderNyWaiveFormIssueStatus, v))
}

// OrderNyWaiveFormIssueStatusIn applies the In predicate on the "order_ny_waive_form_issue_status" field.
func OrderNyWaiveFormIssueStatusIn(vs ...string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIn(FieldOrderNyWaiveFormIssueStatus, vs...))
}

// OrderNyWaiveFormIssueStatusNotIn applies the NotIn predicate on the "order_ny_waive_form_issue_status" field.
func OrderNyWaiveFormIssueStatusNotIn(vs ...string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotIn(FieldOrderNyWaiveFormIssueStatus, vs...))
}

// OrderNyWaiveFormIssueStatusGT applies the GT predicate on the "order_ny_waive_form_issue_status" field.
func OrderNyWaiveFormIssueStatusGT(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGT(FieldOrderNyWaiveFormIssueStatus, v))
}

// OrderNyWaiveFormIssueStatusGTE applies the GTE predicate on the "order_ny_waive_form_issue_status" field.
func OrderNyWaiveFormIssueStatusGTE(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGTE(FieldOrderNyWaiveFormIssueStatus, v))
}

// OrderNyWaiveFormIssueStatusLT applies the LT predicate on the "order_ny_waive_form_issue_status" field.
func OrderNyWaiveFormIssueStatusLT(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLT(FieldOrderNyWaiveFormIssueStatus, v))
}

// OrderNyWaiveFormIssueStatusLTE applies the LTE predicate on the "order_ny_waive_form_issue_status" field.
func OrderNyWaiveFormIssueStatusLTE(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLTE(FieldOrderNyWaiveFormIssueStatus, v))
}

// OrderNyWaiveFormIssueStatusContains applies the Contains predicate on the "order_ny_waive_form_issue_status" field.
func OrderNyWaiveFormIssueStatusContains(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldContains(FieldOrderNyWaiveFormIssueStatus, v))
}

// OrderNyWaiveFormIssueStatusHasPrefix applies the HasPrefix predicate on the "order_ny_waive_form_issue_status" field.
func OrderNyWaiveFormIssueStatusHasPrefix(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldHasPrefix(FieldOrderNyWaiveFormIssueStatus, v))
}

// OrderNyWaiveFormIssueStatusHasSuffix applies the HasSuffix predicate on the "order_ny_waive_form_issue_status" field.
func OrderNyWaiveFormIssueStatusHasSuffix(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldHasSuffix(FieldOrderNyWaiveFormIssueStatus, v))
}

// OrderNyWaiveFormIssueStatusIsNil applies the IsNil predicate on the "order_ny_waive_form_issue_status" field.
func OrderNyWaiveFormIssueStatusIsNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIsNull(FieldOrderNyWaiveFormIssueStatus))
}

// OrderNyWaiveFormIssueStatusNotNil applies the NotNil predicate on the "order_ny_waive_form_issue_status" field.
func OrderNyWaiveFormIssueStatusNotNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotNull(FieldOrderNyWaiveFormIssueStatus))
}

// OrderNyWaiveFormIssueStatusEqualFold applies the EqualFold predicate on the "order_ny_waive_form_issue_status" field.
func OrderNyWaiveFormIssueStatusEqualFold(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEqualFold(FieldOrderNyWaiveFormIssueStatus, v))
}

// OrderNyWaiveFormIssueStatusContainsFold applies the ContainsFold predicate on the "order_ny_waive_form_issue_status" field.
func OrderNyWaiveFormIssueStatusContainsFold(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldContainsFold(FieldOrderNyWaiveFormIssueStatus, v))
}

// OrderLabIssueStatusEQ applies the EQ predicate on the "order_lab_issue_status" field.
func OrderLabIssueStatusEQ(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderLabIssueStatus, v))
}

// OrderLabIssueStatusNEQ applies the NEQ predicate on the "order_lab_issue_status" field.
func OrderLabIssueStatusNEQ(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNEQ(FieldOrderLabIssueStatus, v))
}

// OrderLabIssueStatusIn applies the In predicate on the "order_lab_issue_status" field.
func OrderLabIssueStatusIn(vs ...string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIn(FieldOrderLabIssueStatus, vs...))
}

// OrderLabIssueStatusNotIn applies the NotIn predicate on the "order_lab_issue_status" field.
func OrderLabIssueStatusNotIn(vs ...string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotIn(FieldOrderLabIssueStatus, vs...))
}

// OrderLabIssueStatusGT applies the GT predicate on the "order_lab_issue_status" field.
func OrderLabIssueStatusGT(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGT(FieldOrderLabIssueStatus, v))
}

// OrderLabIssueStatusGTE applies the GTE predicate on the "order_lab_issue_status" field.
func OrderLabIssueStatusGTE(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGTE(FieldOrderLabIssueStatus, v))
}

// OrderLabIssueStatusLT applies the LT predicate on the "order_lab_issue_status" field.
func OrderLabIssueStatusLT(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLT(FieldOrderLabIssueStatus, v))
}

// OrderLabIssueStatusLTE applies the LTE predicate on the "order_lab_issue_status" field.
func OrderLabIssueStatusLTE(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLTE(FieldOrderLabIssueStatus, v))
}

// OrderLabIssueStatusContains applies the Contains predicate on the "order_lab_issue_status" field.
func OrderLabIssueStatusContains(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldContains(FieldOrderLabIssueStatus, v))
}

// OrderLabIssueStatusHasPrefix applies the HasPrefix predicate on the "order_lab_issue_status" field.
func OrderLabIssueStatusHasPrefix(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldHasPrefix(FieldOrderLabIssueStatus, v))
}

// OrderLabIssueStatusHasSuffix applies the HasSuffix predicate on the "order_lab_issue_status" field.
func OrderLabIssueStatusHasSuffix(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldHasSuffix(FieldOrderLabIssueStatus, v))
}

// OrderLabIssueStatusIsNil applies the IsNil predicate on the "order_lab_issue_status" field.
func OrderLabIssueStatusIsNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIsNull(FieldOrderLabIssueStatus))
}

// OrderLabIssueStatusNotNil applies the NotNil predicate on the "order_lab_issue_status" field.
func OrderLabIssueStatusNotNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotNull(FieldOrderLabIssueStatus))
}

// OrderLabIssueStatusEqualFold applies the EqualFold predicate on the "order_lab_issue_status" field.
func OrderLabIssueStatusEqualFold(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEqualFold(FieldOrderLabIssueStatus, v))
}

// OrderLabIssueStatusContainsFold applies the ContainsFold predicate on the "order_lab_issue_status" field.
func OrderLabIssueStatusContainsFold(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldContainsFold(FieldOrderLabIssueStatus, v))
}

// OrderProcessingTimeEQ applies the EQ predicate on the "order_processing_time" field.
func OrderProcessingTimeEQ(v time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderProcessingTime, v))
}

// OrderProcessingTimeNEQ applies the NEQ predicate on the "order_processing_time" field.
func OrderProcessingTimeNEQ(v time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNEQ(FieldOrderProcessingTime, v))
}

// OrderProcessingTimeIn applies the In predicate on the "order_processing_time" field.
func OrderProcessingTimeIn(vs ...time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIn(FieldOrderProcessingTime, vs...))
}

// OrderProcessingTimeNotIn applies the NotIn predicate on the "order_processing_time" field.
func OrderProcessingTimeNotIn(vs ...time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotIn(FieldOrderProcessingTime, vs...))
}

// OrderProcessingTimeGT applies the GT predicate on the "order_processing_time" field.
func OrderProcessingTimeGT(v time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGT(FieldOrderProcessingTime, v))
}

// OrderProcessingTimeGTE applies the GTE predicate on the "order_processing_time" field.
func OrderProcessingTimeGTE(v time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGTE(FieldOrderProcessingTime, v))
}

// OrderProcessingTimeLT applies the LT predicate on the "order_processing_time" field.
func OrderProcessingTimeLT(v time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLT(FieldOrderProcessingTime, v))
}

// OrderProcessingTimeLTE applies the LTE predicate on the "order_processing_time" field.
func OrderProcessingTimeLTE(v time.Time) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLTE(FieldOrderProcessingTime, v))
}

// OrderProcessingTimeIsNil applies the IsNil predicate on the "order_processing_time" field.
func OrderProcessingTimeIsNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIsNull(FieldOrderProcessingTime))
}

// OrderProcessingTimeNotNil applies the NotNil predicate on the "order_processing_time" field.
func OrderProcessingTimeNotNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotNull(FieldOrderProcessingTime))
}

// OrderMinorStatusEQ applies the EQ predicate on the "order_minor_status" field.
func OrderMinorStatusEQ(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderMinorStatus, v))
}

// OrderMinorStatusNEQ applies the NEQ predicate on the "order_minor_status" field.
func OrderMinorStatusNEQ(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNEQ(FieldOrderMinorStatus, v))
}

// OrderMinorStatusIn applies the In predicate on the "order_minor_status" field.
func OrderMinorStatusIn(vs ...string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIn(FieldOrderMinorStatus, vs...))
}

// OrderMinorStatusNotIn applies the NotIn predicate on the "order_minor_status" field.
func OrderMinorStatusNotIn(vs ...string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotIn(FieldOrderMinorStatus, vs...))
}

// OrderMinorStatusGT applies the GT predicate on the "order_minor_status" field.
func OrderMinorStatusGT(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGT(FieldOrderMinorStatus, v))
}

// OrderMinorStatusGTE applies the GTE predicate on the "order_minor_status" field.
func OrderMinorStatusGTE(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGTE(FieldOrderMinorStatus, v))
}

// OrderMinorStatusLT applies the LT predicate on the "order_minor_status" field.
func OrderMinorStatusLT(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLT(FieldOrderMinorStatus, v))
}

// OrderMinorStatusLTE applies the LTE predicate on the "order_minor_status" field.
func OrderMinorStatusLTE(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLTE(FieldOrderMinorStatus, v))
}

// OrderMinorStatusContains applies the Contains predicate on the "order_minor_status" field.
func OrderMinorStatusContains(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldContains(FieldOrderMinorStatus, v))
}

// OrderMinorStatusHasPrefix applies the HasPrefix predicate on the "order_minor_status" field.
func OrderMinorStatusHasPrefix(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldHasPrefix(FieldOrderMinorStatus, v))
}

// OrderMinorStatusHasSuffix applies the HasSuffix predicate on the "order_minor_status" field.
func OrderMinorStatusHasSuffix(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldHasSuffix(FieldOrderMinorStatus, v))
}

// OrderMinorStatusIsNil applies the IsNil predicate on the "order_minor_status" field.
func OrderMinorStatusIsNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIsNull(FieldOrderMinorStatus))
}

// OrderMinorStatusNotNil applies the NotNil predicate on the "order_minor_status" field.
func OrderMinorStatusNotNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotNull(FieldOrderMinorStatus))
}

// OrderMinorStatusEqualFold applies the EqualFold predicate on the "order_minor_status" field.
func OrderMinorStatusEqualFold(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEqualFold(FieldOrderMinorStatus, v))
}

// OrderMinorStatusContainsFold applies the ContainsFold predicate on the "order_minor_status" field.
func OrderMinorStatusContainsFold(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldContainsFold(FieldOrderMinorStatus, v))
}

// PatientFirstNameEQ applies the EQ predicate on the "patient_first_name" field.
func PatientFirstNameEQ(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldPatientFirstName, v))
}

// PatientFirstNameNEQ applies the NEQ predicate on the "patient_first_name" field.
func PatientFirstNameNEQ(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNEQ(FieldPatientFirstName, v))
}

// PatientFirstNameIn applies the In predicate on the "patient_first_name" field.
func PatientFirstNameIn(vs ...string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIn(FieldPatientFirstName, vs...))
}

// PatientFirstNameNotIn applies the NotIn predicate on the "patient_first_name" field.
func PatientFirstNameNotIn(vs ...string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotIn(FieldPatientFirstName, vs...))
}

// PatientFirstNameGT applies the GT predicate on the "patient_first_name" field.
func PatientFirstNameGT(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGT(FieldPatientFirstName, v))
}

// PatientFirstNameGTE applies the GTE predicate on the "patient_first_name" field.
func PatientFirstNameGTE(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGTE(FieldPatientFirstName, v))
}

// PatientFirstNameLT applies the LT predicate on the "patient_first_name" field.
func PatientFirstNameLT(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLT(FieldPatientFirstName, v))
}

// PatientFirstNameLTE applies the LTE predicate on the "patient_first_name" field.
func PatientFirstNameLTE(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLTE(FieldPatientFirstName, v))
}

// PatientFirstNameContains applies the Contains predicate on the "patient_first_name" field.
func PatientFirstNameContains(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldContains(FieldPatientFirstName, v))
}

// PatientFirstNameHasPrefix applies the HasPrefix predicate on the "patient_first_name" field.
func PatientFirstNameHasPrefix(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldHasPrefix(FieldPatientFirstName, v))
}

// PatientFirstNameHasSuffix applies the HasSuffix predicate on the "patient_first_name" field.
func PatientFirstNameHasSuffix(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldHasSuffix(FieldPatientFirstName, v))
}

// PatientFirstNameIsNil applies the IsNil predicate on the "patient_first_name" field.
func PatientFirstNameIsNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIsNull(FieldPatientFirstName))
}

// PatientFirstNameNotNil applies the NotNil predicate on the "patient_first_name" field.
func PatientFirstNameNotNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotNull(FieldPatientFirstName))
}

// PatientFirstNameEqualFold applies the EqualFold predicate on the "patient_first_name" field.
func PatientFirstNameEqualFold(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEqualFold(FieldPatientFirstName, v))
}

// PatientFirstNameContainsFold applies the ContainsFold predicate on the "patient_first_name" field.
func PatientFirstNameContainsFold(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldContainsFold(FieldPatientFirstName, v))
}

// PatientLastNameEQ applies the EQ predicate on the "patient_last_name" field.
func PatientLastNameEQ(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldPatientLastName, v))
}

// PatientLastNameNEQ applies the NEQ predicate on the "patient_last_name" field.
func PatientLastNameNEQ(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNEQ(FieldPatientLastName, v))
}

// PatientLastNameIn applies the In predicate on the "patient_last_name" field.
func PatientLastNameIn(vs ...string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIn(FieldPatientLastName, vs...))
}

// PatientLastNameNotIn applies the NotIn predicate on the "patient_last_name" field.
func PatientLastNameNotIn(vs ...string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotIn(FieldPatientLastName, vs...))
}

// PatientLastNameGT applies the GT predicate on the "patient_last_name" field.
func PatientLastNameGT(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGT(FieldPatientLastName, v))
}

// PatientLastNameGTE applies the GTE predicate on the "patient_last_name" field.
func PatientLastNameGTE(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGTE(FieldPatientLastName, v))
}

// PatientLastNameLT applies the LT predicate on the "patient_last_name" field.
func PatientLastNameLT(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLT(FieldPatientLastName, v))
}

// PatientLastNameLTE applies the LTE predicate on the "patient_last_name" field.
func PatientLastNameLTE(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLTE(FieldPatientLastName, v))
}

// PatientLastNameContains applies the Contains predicate on the "patient_last_name" field.
func PatientLastNameContains(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldContains(FieldPatientLastName, v))
}

// PatientLastNameHasPrefix applies the HasPrefix predicate on the "patient_last_name" field.
func PatientLastNameHasPrefix(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldHasPrefix(FieldPatientLastName, v))
}

// PatientLastNameHasSuffix applies the HasSuffix predicate on the "patient_last_name" field.
func PatientLastNameHasSuffix(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldHasSuffix(FieldPatientLastName, v))
}

// PatientLastNameIsNil applies the IsNil predicate on the "patient_last_name" field.
func PatientLastNameIsNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIsNull(FieldPatientLastName))
}

// PatientLastNameNotNil applies the NotNil predicate on the "patient_last_name" field.
func PatientLastNameNotNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotNull(FieldPatientLastName))
}

// PatientLastNameEqualFold applies the EqualFold predicate on the "patient_last_name" field.
func PatientLastNameEqualFold(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEqualFold(FieldPatientLastName, v))
}

// PatientLastNameContainsFold applies the ContainsFold predicate on the "patient_last_name" field.
func PatientLastNameContainsFold(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldContainsFold(FieldPatientLastName, v))
}

// OrderSourceEQ applies the EQ predicate on the "order_source" field.
func OrderSourceEQ(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderSource, v))
}

// OrderSourceNEQ applies the NEQ predicate on the "order_source" field.
func OrderSourceNEQ(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNEQ(FieldOrderSource, v))
}

// OrderSourceIn applies the In predicate on the "order_source" field.
func OrderSourceIn(vs ...string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIn(FieldOrderSource, vs...))
}

// OrderSourceNotIn applies the NotIn predicate on the "order_source" field.
func OrderSourceNotIn(vs ...string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotIn(FieldOrderSource, vs...))
}

// OrderSourceGT applies the GT predicate on the "order_source" field.
func OrderSourceGT(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGT(FieldOrderSource, v))
}

// OrderSourceGTE applies the GTE predicate on the "order_source" field.
func OrderSourceGTE(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGTE(FieldOrderSource, v))
}

// OrderSourceLT applies the LT predicate on the "order_source" field.
func OrderSourceLT(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLT(FieldOrderSource, v))
}

// OrderSourceLTE applies the LTE predicate on the "order_source" field.
func OrderSourceLTE(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLTE(FieldOrderSource, v))
}

// OrderSourceContains applies the Contains predicate on the "order_source" field.
func OrderSourceContains(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldContains(FieldOrderSource, v))
}

// OrderSourceHasPrefix applies the HasPrefix predicate on the "order_source" field.
func OrderSourceHasPrefix(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldHasPrefix(FieldOrderSource, v))
}

// OrderSourceHasSuffix applies the HasSuffix predicate on the "order_source" field.
func OrderSourceHasSuffix(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldHasSuffix(FieldOrderSource, v))
}

// OrderSourceIsNil applies the IsNil predicate on the "order_source" field.
func OrderSourceIsNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIsNull(FieldOrderSource))
}

// OrderSourceNotNil applies the NotNil predicate on the "order_source" field.
func OrderSourceNotNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotNull(FieldOrderSource))
}

// OrderSourceEqualFold applies the EqualFold predicate on the "order_source" field.
func OrderSourceEqualFold(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEqualFold(FieldOrderSource, v))
}

// OrderSourceContainsFold applies the ContainsFold predicate on the "order_source" field.
func OrderSourceContainsFold(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldContainsFold(FieldOrderSource, v))
}

// OrderChargeMethodEQ applies the EQ predicate on the "order_charge_method" field.
func OrderChargeMethodEQ(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderChargeMethod, v))
}

// OrderChargeMethodNEQ applies the NEQ predicate on the "order_charge_method" field.
func OrderChargeMethodNEQ(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNEQ(FieldOrderChargeMethod, v))
}

// OrderChargeMethodIn applies the In predicate on the "order_charge_method" field.
func OrderChargeMethodIn(vs ...string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIn(FieldOrderChargeMethod, vs...))
}

// OrderChargeMethodNotIn applies the NotIn predicate on the "order_charge_method" field.
func OrderChargeMethodNotIn(vs ...string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotIn(FieldOrderChargeMethod, vs...))
}

// OrderChargeMethodGT applies the GT predicate on the "order_charge_method" field.
func OrderChargeMethodGT(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGT(FieldOrderChargeMethod, v))
}

// OrderChargeMethodGTE applies the GTE predicate on the "order_charge_method" field.
func OrderChargeMethodGTE(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGTE(FieldOrderChargeMethod, v))
}

// OrderChargeMethodLT applies the LT predicate on the "order_charge_method" field.
func OrderChargeMethodLT(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLT(FieldOrderChargeMethod, v))
}

// OrderChargeMethodLTE applies the LTE predicate on the "order_charge_method" field.
func OrderChargeMethodLTE(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLTE(FieldOrderChargeMethod, v))
}

// OrderChargeMethodContains applies the Contains predicate on the "order_charge_method" field.
func OrderChargeMethodContains(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldContains(FieldOrderChargeMethod, v))
}

// OrderChargeMethodHasPrefix applies the HasPrefix predicate on the "order_charge_method" field.
func OrderChargeMethodHasPrefix(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldHasPrefix(FieldOrderChargeMethod, v))
}

// OrderChargeMethodHasSuffix applies the HasSuffix predicate on the "order_charge_method" field.
func OrderChargeMethodHasSuffix(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldHasSuffix(FieldOrderChargeMethod, v))
}

// OrderChargeMethodIsNil applies the IsNil predicate on the "order_charge_method" field.
func OrderChargeMethodIsNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIsNull(FieldOrderChargeMethod))
}

// OrderChargeMethodNotNil applies the NotNil predicate on the "order_charge_method" field.
func OrderChargeMethodNotNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotNull(FieldOrderChargeMethod))
}

// OrderChargeMethodEqualFold applies the EqualFold predicate on the "order_charge_method" field.
func OrderChargeMethodEqualFold(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEqualFold(FieldOrderChargeMethod, v))
}

// OrderChargeMethodContainsFold applies the ContainsFold predicate on the "order_charge_method" field.
func OrderChargeMethodContainsFold(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldContainsFold(FieldOrderChargeMethod, v))
}

// OrderPlacingTypeEQ applies the EQ predicate on the "order_placing_type" field.
func OrderPlacingTypeEQ(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldOrderPlacingType, v))
}

// OrderPlacingTypeNEQ applies the NEQ predicate on the "order_placing_type" field.
func OrderPlacingTypeNEQ(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNEQ(FieldOrderPlacingType, v))
}

// OrderPlacingTypeIn applies the In predicate on the "order_placing_type" field.
func OrderPlacingTypeIn(vs ...string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIn(FieldOrderPlacingType, vs...))
}

// OrderPlacingTypeNotIn applies the NotIn predicate on the "order_placing_type" field.
func OrderPlacingTypeNotIn(vs ...string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotIn(FieldOrderPlacingType, vs...))
}

// OrderPlacingTypeGT applies the GT predicate on the "order_placing_type" field.
func OrderPlacingTypeGT(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGT(FieldOrderPlacingType, v))
}

// OrderPlacingTypeGTE applies the GTE predicate on the "order_placing_type" field.
func OrderPlacingTypeGTE(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGTE(FieldOrderPlacingType, v))
}

// OrderPlacingTypeLT applies the LT predicate on the "order_placing_type" field.
func OrderPlacingTypeLT(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLT(FieldOrderPlacingType, v))
}

// OrderPlacingTypeLTE applies the LTE predicate on the "order_placing_type" field.
func OrderPlacingTypeLTE(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLTE(FieldOrderPlacingType, v))
}

// OrderPlacingTypeContains applies the Contains predicate on the "order_placing_type" field.
func OrderPlacingTypeContains(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldContains(FieldOrderPlacingType, v))
}

// OrderPlacingTypeHasPrefix applies the HasPrefix predicate on the "order_placing_type" field.
func OrderPlacingTypeHasPrefix(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldHasPrefix(FieldOrderPlacingType, v))
}

// OrderPlacingTypeHasSuffix applies the HasSuffix predicate on the "order_placing_type" field.
func OrderPlacingTypeHasSuffix(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldHasSuffix(FieldOrderPlacingType, v))
}

// OrderPlacingTypeIsNil applies the IsNil predicate on the "order_placing_type" field.
func OrderPlacingTypeIsNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIsNull(FieldOrderPlacingType))
}

// OrderPlacingTypeNotNil applies the NotNil predicate on the "order_placing_type" field.
func OrderPlacingTypeNotNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotNull(FieldOrderPlacingType))
}

// OrderPlacingTypeEqualFold applies the EqualFold predicate on the "order_placing_type" field.
func OrderPlacingTypeEqualFold(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEqualFold(FieldOrderPlacingType, v))
}

// OrderPlacingTypeContainsFold applies the ContainsFold predicate on the "order_placing_type" field.
func OrderPlacingTypeContainsFold(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldContainsFold(FieldOrderPlacingType, v))
}

// BillingOrderIDEQ applies the EQ predicate on the "billing_order_id" field.
func BillingOrderIDEQ(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldBillingOrderID, v))
}

// BillingOrderIDNEQ applies the NEQ predicate on the "billing_order_id" field.
func BillingOrderIDNEQ(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNEQ(FieldBillingOrderID, v))
}

// BillingOrderIDIn applies the In predicate on the "billing_order_id" field.
func BillingOrderIDIn(vs ...string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIn(FieldBillingOrderID, vs...))
}

// BillingOrderIDNotIn applies the NotIn predicate on the "billing_order_id" field.
func BillingOrderIDNotIn(vs ...string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotIn(FieldBillingOrderID, vs...))
}

// BillingOrderIDGT applies the GT predicate on the "billing_order_id" field.
func BillingOrderIDGT(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGT(FieldBillingOrderID, v))
}

// BillingOrderIDGTE applies the GTE predicate on the "billing_order_id" field.
func BillingOrderIDGTE(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldGTE(FieldBillingOrderID, v))
}

// BillingOrderIDLT applies the LT predicate on the "billing_order_id" field.
func BillingOrderIDLT(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLT(FieldBillingOrderID, v))
}

// BillingOrderIDLTE applies the LTE predicate on the "billing_order_id" field.
func BillingOrderIDLTE(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldLTE(FieldBillingOrderID, v))
}

// BillingOrderIDContains applies the Contains predicate on the "billing_order_id" field.
func BillingOrderIDContains(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldContains(FieldBillingOrderID, v))
}

// BillingOrderIDHasPrefix applies the HasPrefix predicate on the "billing_order_id" field.
func BillingOrderIDHasPrefix(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldHasPrefix(FieldBillingOrderID, v))
}

// BillingOrderIDHasSuffix applies the HasSuffix predicate on the "billing_order_id" field.
func BillingOrderIDHasSuffix(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldHasSuffix(FieldBillingOrderID, v))
}

// BillingOrderIDIsNil applies the IsNil predicate on the "billing_order_id" field.
func BillingOrderIDIsNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIsNull(FieldBillingOrderID))
}

// BillingOrderIDNotNil applies the NotNil predicate on the "billing_order_id" field.
func BillingOrderIDNotNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotNull(FieldBillingOrderID))
}

// BillingOrderIDEqualFold applies the EqualFold predicate on the "billing_order_id" field.
func BillingOrderIDEqualFold(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEqualFold(FieldBillingOrderID, v))
}

// BillingOrderIDContainsFold applies the ContainsFold predicate on the "billing_order_id" field.
func BillingOrderIDContainsFold(v string) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldContainsFold(FieldBillingOrderID, v))
}

// ContactIDEQ applies the EQ predicate on the "contact_id" field.
func ContactIDEQ(v int) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldContactID, v))
}

// ContactIDNEQ applies the NEQ predicate on the "contact_id" field.
func ContactIDNEQ(v int) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNEQ(FieldContactID, v))
}

// ContactIDIn applies the In predicate on the "contact_id" field.
func ContactIDIn(vs ...int) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIn(FieldContactID, vs...))
}

// ContactIDNotIn applies the NotIn predicate on the "contact_id" field.
func ContactIDNotIn(vs ...int) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotIn(FieldContactID, vs...))
}

// ContactIDIsNil applies the IsNil predicate on the "contact_id" field.
func ContactIDIsNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIsNull(FieldContactID))
}

// ContactIDNotNil applies the NotNil predicate on the "contact_id" field.
func ContactIDNotNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotNull(FieldContactID))
}

// AddressIDEQ applies the EQ predicate on the "address_id" field.
func AddressIDEQ(v int) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldEQ(FieldAddressID, v))
}

// AddressIDNEQ applies the NEQ predicate on the "address_id" field.
func AddressIDNEQ(v int) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNEQ(FieldAddressID, v))
}

// AddressIDIn applies the In predicate on the "address_id" field.
func AddressIDIn(vs ...int) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIn(FieldAddressID, vs...))
}

// AddressIDNotIn applies the NotIn predicate on the "address_id" field.
func AddressIDNotIn(vs ...int) predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotIn(FieldAddressID, vs...))
}

// AddressIDIsNil applies the IsNil predicate on the "address_id" field.
func AddressIDIsNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldIsNull(FieldAddressID))
}

// AddressIDNotNil applies the NotNil predicate on the "address_id" field.
func AddressIDNotNil() predicate.OrderInfo {
	return predicate.OrderInfo(sql.FieldNotNull(FieldAddressID))
}

// HasTests applies the HasEdge predicate on the "tests" edge.
func HasTests() predicate.OrderInfo {
	return predicate.OrderInfo(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2M, false, TestsTable, TestsPrimaryKey...),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasTestsWith applies the HasEdge predicate on the "tests" edge with a given conditions (other predicates).
func HasTestsWith(preds ...predicate.Test) predicate.OrderInfo {
	return predicate.OrderInfo(func(s *sql.Selector) {
		step := newTestsStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasOrderFlags applies the HasEdge predicate on the "order_flags" edge.
func HasOrderFlags() predicate.OrderInfo {
	return predicate.OrderInfo(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2M, true, OrderFlagsTable, OrderFlagsPrimaryKey...),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasOrderFlagsWith applies the HasEdge predicate on the "order_flags" edge with a given conditions (other predicates).
func HasOrderFlagsWith(preds ...predicate.OrderFlag) predicate.OrderInfo {
	return predicate.OrderInfo(func(s *sql.Selector) {
		step := newOrderFlagsStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasSample applies the HasEdge predicate on the "sample" edge.
func HasSample() predicate.OrderInfo {
	return predicate.OrderInfo(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2O, false, SampleTable, SampleColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasSampleWith applies the HasEdge predicate on the "sample" edge with a given conditions (other predicates).
func HasSampleWith(preds ...predicate.Sample) predicate.OrderInfo {
	return predicate.OrderInfo(func(s *sql.Selector) {
		step := newSampleStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasContact applies the HasEdge predicate on the "contact" edge.
func HasContact() predicate.OrderInfo {
	return predicate.OrderInfo(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, ContactTable, ContactColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasContactWith applies the HasEdge predicate on the "contact" edge with a given conditions (other predicates).
func HasContactWith(preds ...predicate.Contact) predicate.OrderInfo {
	return predicate.OrderInfo(func(s *sql.Selector) {
		step := newContactStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasAddress applies the HasEdge predicate on the "address" edge.
func HasAddress() predicate.OrderInfo {
	return predicate.OrderInfo(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, AddressTable, AddressColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasAddressWith applies the HasEdge predicate on the "address" edge with a given conditions (other predicates).
func HasAddressWith(preds ...predicate.Address) predicate.OrderInfo {
	return predicate.OrderInfo(func(s *sql.Selector) {
		step := newAddressStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasClinic applies the HasEdge predicate on the "clinic" edge.
func HasClinic() predicate.OrderInfo {
	return predicate.OrderInfo(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, ClinicTable, ClinicColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasClinicWith applies the HasEdge predicate on the "clinic" edge with a given conditions (other predicates).
func HasClinicWith(preds ...predicate.Clinic) predicate.OrderInfo {
	return predicate.OrderInfo(func(s *sql.Selector) {
		step := newClinicStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasCustomerInfo applies the HasEdge predicate on the "customer_info" edge.
func HasCustomerInfo() predicate.OrderInfo {
	return predicate.OrderInfo(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, CustomerInfoTable, CustomerInfoColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasCustomerInfoWith applies the HasEdge predicate on the "customer_info" edge with a given conditions (other predicates).
func HasCustomerInfoWith(preds ...predicate.Customer) predicate.OrderInfo {
	return predicate.OrderInfo(func(s *sql.Selector) {
		step := newCustomerInfoStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.OrderInfo) predicate.OrderInfo {
	return predicate.OrderInfo(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.OrderInfo) predicate.OrderInfo {
	return predicate.OrderInfo(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.OrderInfo) predicate.OrderInfo {
	return predicate.OrderInfo(sql.NotPredicates(p))
}
