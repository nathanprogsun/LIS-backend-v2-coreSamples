// Code generated by ent, DO NOT EDIT.

package zipcode

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the zipcode type in the database.
	Label = "zipcode"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "zipcode"
	// FieldZipCodeType holds the string denoting the zipcodetype field in the database.
	FieldZipCodeType = "ZipCodeType"
	// FieldCity holds the string denoting the city field in the database.
	FieldCity = "City"
	// FieldState holds the string denoting the state field in the database.
	FieldState = "State"
	// FieldLocationType holds the string denoting the locationtype field in the database.
	FieldLocationType = "LocationType"
	// FieldLat holds the string denoting the lat field in the database.
	FieldLat = "Lat"
	// FieldLong holds the string denoting the long field in the database.
	FieldLong = "Long"
	// Table holds the table name of the zipcode in the database.
	Table = "zipcode"
)

// Columns holds all SQL columns for zipcode fields.
var Columns = []string{
	FieldID,
	FieldZipCodeType,
	FieldCity,
	FieldState,
	FieldLocationType,
	FieldLat,
	FieldLong,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// OrderOption defines the ordering options for the Zipcode queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByZipCodeType orders the results by the ZipCodeType field.
func ByZipCodeType(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldZipCodeType, opts...).ToFunc()
}

// ByCity orders the results by the City field.
func ByCity(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCity, opts...).ToFunc()
}

// ByState orders the results by the State field.
func ByState(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldState, opts...).ToFunc()
}

// ByLocationType orders the results by the LocationType field.
func ByLocationType(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldLocationType, opts...).ToFunc()
}

// ByLat orders the results by the Lat field.
func ByLat(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldLat, opts...).ToFunc()
}

// ByLong orders the results by the Long field.
func ByLong(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldLong, opts...).ToFunc()
}
