// Code generated by ent, DO NOT EDIT.

package patientflag

import (
	"coresamples/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldLTE(FieldID, id))
}

// PatientFlagName applies equality check predicate on the "patient_flag_name" field. It's identical to PatientFlagNameEQ.
func PatientFlagName(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldEQ(FieldPatientFlagName, v))
}

// PatientFlagDisplayName applies equality check predicate on the "patient_flag_display_name" field. It's identical to PatientFlagDisplayNameEQ.
func PatientFlagDisplayName(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldEQ(FieldPatientFlagDisplayName, v))
}

// PatientFlagDescription applies equality check predicate on the "patient_flag_description" field. It's identical to PatientFlagDescriptionEQ.
func PatientFlagDescription(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldEQ(FieldPatientFlagDescription, v))
}

// PatientFlagIsActive applies equality check predicate on the "patient_flag_is_active" field. It's identical to PatientFlagIsActiveEQ.
func PatientFlagIsActive(v bool) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldEQ(FieldPatientFlagIsActive, v))
}

// PatientFlagCreatedAt applies equality check predicate on the "patient_flag_created_at" field. It's identical to PatientFlagCreatedAtEQ.
func PatientFlagCreatedAt(v time.Time) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldEQ(FieldPatientFlagCreatedAt, v))
}

// PatientFlagColor applies equality check predicate on the "patient_flag_color" field. It's identical to PatientFlagColorEQ.
func PatientFlagColor(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldEQ(FieldPatientFlagColor, v))
}

// PatientFlagedBy applies equality check predicate on the "patient_flaged_by" field. It's identical to PatientFlagedByEQ.
func PatientFlagedBy(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldEQ(FieldPatientFlagedBy, v))
}

// PatientFlagNameEQ applies the EQ predicate on the "patient_flag_name" field.
func PatientFlagNameEQ(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldEQ(FieldPatientFlagName, v))
}

// PatientFlagNameNEQ applies the NEQ predicate on the "patient_flag_name" field.
func PatientFlagNameNEQ(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldNEQ(FieldPatientFlagName, v))
}

// PatientFlagNameIn applies the In predicate on the "patient_flag_name" field.
func PatientFlagNameIn(vs ...string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldIn(FieldPatientFlagName, vs...))
}

// PatientFlagNameNotIn applies the NotIn predicate on the "patient_flag_name" field.
func PatientFlagNameNotIn(vs ...string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldNotIn(FieldPatientFlagName, vs...))
}

// PatientFlagNameGT applies the GT predicate on the "patient_flag_name" field.
func PatientFlagNameGT(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldGT(FieldPatientFlagName, v))
}

// PatientFlagNameGTE applies the GTE predicate on the "patient_flag_name" field.
func PatientFlagNameGTE(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldGTE(FieldPatientFlagName, v))
}

// PatientFlagNameLT applies the LT predicate on the "patient_flag_name" field.
func PatientFlagNameLT(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldLT(FieldPatientFlagName, v))
}

// PatientFlagNameLTE applies the LTE predicate on the "patient_flag_name" field.
func PatientFlagNameLTE(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldLTE(FieldPatientFlagName, v))
}

// PatientFlagNameContains applies the Contains predicate on the "patient_flag_name" field.
func PatientFlagNameContains(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldContains(FieldPatientFlagName, v))
}

// PatientFlagNameHasPrefix applies the HasPrefix predicate on the "patient_flag_name" field.
func PatientFlagNameHasPrefix(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldHasPrefix(FieldPatientFlagName, v))
}

// PatientFlagNameHasSuffix applies the HasSuffix predicate on the "patient_flag_name" field.
func PatientFlagNameHasSuffix(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldHasSuffix(FieldPatientFlagName, v))
}

// PatientFlagNameEqualFold applies the EqualFold predicate on the "patient_flag_name" field.
func PatientFlagNameEqualFold(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldEqualFold(FieldPatientFlagName, v))
}

// PatientFlagNameContainsFold applies the ContainsFold predicate on the "patient_flag_name" field.
func PatientFlagNameContainsFold(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldContainsFold(FieldPatientFlagName, v))
}

// PatientFlagDisplayNameEQ applies the EQ predicate on the "patient_flag_display_name" field.
func PatientFlagDisplayNameEQ(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldEQ(FieldPatientFlagDisplayName, v))
}

// PatientFlagDisplayNameNEQ applies the NEQ predicate on the "patient_flag_display_name" field.
func PatientFlagDisplayNameNEQ(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldNEQ(FieldPatientFlagDisplayName, v))
}

// PatientFlagDisplayNameIn applies the In predicate on the "patient_flag_display_name" field.
func PatientFlagDisplayNameIn(vs ...string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldIn(FieldPatientFlagDisplayName, vs...))
}

// PatientFlagDisplayNameNotIn applies the NotIn predicate on the "patient_flag_display_name" field.
func PatientFlagDisplayNameNotIn(vs ...string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldNotIn(FieldPatientFlagDisplayName, vs...))
}

// PatientFlagDisplayNameGT applies the GT predicate on the "patient_flag_display_name" field.
func PatientFlagDisplayNameGT(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldGT(FieldPatientFlagDisplayName, v))
}

// PatientFlagDisplayNameGTE applies the GTE predicate on the "patient_flag_display_name" field.
func PatientFlagDisplayNameGTE(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldGTE(FieldPatientFlagDisplayName, v))
}

// PatientFlagDisplayNameLT applies the LT predicate on the "patient_flag_display_name" field.
func PatientFlagDisplayNameLT(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldLT(FieldPatientFlagDisplayName, v))
}

// PatientFlagDisplayNameLTE applies the LTE predicate on the "patient_flag_display_name" field.
func PatientFlagDisplayNameLTE(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldLTE(FieldPatientFlagDisplayName, v))
}

// PatientFlagDisplayNameContains applies the Contains predicate on the "patient_flag_display_name" field.
func PatientFlagDisplayNameContains(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldContains(FieldPatientFlagDisplayName, v))
}

// PatientFlagDisplayNameHasPrefix applies the HasPrefix predicate on the "patient_flag_display_name" field.
func PatientFlagDisplayNameHasPrefix(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldHasPrefix(FieldPatientFlagDisplayName, v))
}

// PatientFlagDisplayNameHasSuffix applies the HasSuffix predicate on the "patient_flag_display_name" field.
func PatientFlagDisplayNameHasSuffix(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldHasSuffix(FieldPatientFlagDisplayName, v))
}

// PatientFlagDisplayNameIsNil applies the IsNil predicate on the "patient_flag_display_name" field.
func PatientFlagDisplayNameIsNil() predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldIsNull(FieldPatientFlagDisplayName))
}

// PatientFlagDisplayNameNotNil applies the NotNil predicate on the "patient_flag_display_name" field.
func PatientFlagDisplayNameNotNil() predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldNotNull(FieldPatientFlagDisplayName))
}

// PatientFlagDisplayNameEqualFold applies the EqualFold predicate on the "patient_flag_display_name" field.
func PatientFlagDisplayNameEqualFold(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldEqualFold(FieldPatientFlagDisplayName, v))
}

// PatientFlagDisplayNameContainsFold applies the ContainsFold predicate on the "patient_flag_display_name" field.
func PatientFlagDisplayNameContainsFold(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldContainsFold(FieldPatientFlagDisplayName, v))
}

// PatientFlagDescriptionEQ applies the EQ predicate on the "patient_flag_description" field.
func PatientFlagDescriptionEQ(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldEQ(FieldPatientFlagDescription, v))
}

// PatientFlagDescriptionNEQ applies the NEQ predicate on the "patient_flag_description" field.
func PatientFlagDescriptionNEQ(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldNEQ(FieldPatientFlagDescription, v))
}

// PatientFlagDescriptionIn applies the In predicate on the "patient_flag_description" field.
func PatientFlagDescriptionIn(vs ...string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldIn(FieldPatientFlagDescription, vs...))
}

// PatientFlagDescriptionNotIn applies the NotIn predicate on the "patient_flag_description" field.
func PatientFlagDescriptionNotIn(vs ...string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldNotIn(FieldPatientFlagDescription, vs...))
}

// PatientFlagDescriptionGT applies the GT predicate on the "patient_flag_description" field.
func PatientFlagDescriptionGT(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldGT(FieldPatientFlagDescription, v))
}

// PatientFlagDescriptionGTE applies the GTE predicate on the "patient_flag_description" field.
func PatientFlagDescriptionGTE(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldGTE(FieldPatientFlagDescription, v))
}

// PatientFlagDescriptionLT applies the LT predicate on the "patient_flag_description" field.
func PatientFlagDescriptionLT(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldLT(FieldPatientFlagDescription, v))
}

// PatientFlagDescriptionLTE applies the LTE predicate on the "patient_flag_description" field.
func PatientFlagDescriptionLTE(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldLTE(FieldPatientFlagDescription, v))
}

// PatientFlagDescriptionContains applies the Contains predicate on the "patient_flag_description" field.
func PatientFlagDescriptionContains(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldContains(FieldPatientFlagDescription, v))
}

// PatientFlagDescriptionHasPrefix applies the HasPrefix predicate on the "patient_flag_description" field.
func PatientFlagDescriptionHasPrefix(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldHasPrefix(FieldPatientFlagDescription, v))
}

// PatientFlagDescriptionHasSuffix applies the HasSuffix predicate on the "patient_flag_description" field.
func PatientFlagDescriptionHasSuffix(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldHasSuffix(FieldPatientFlagDescription, v))
}

// PatientFlagDescriptionIsNil applies the IsNil predicate on the "patient_flag_description" field.
func PatientFlagDescriptionIsNil() predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldIsNull(FieldPatientFlagDescription))
}

// PatientFlagDescriptionNotNil applies the NotNil predicate on the "patient_flag_description" field.
func PatientFlagDescriptionNotNil() predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldNotNull(FieldPatientFlagDescription))
}

// PatientFlagDescriptionEqualFold applies the EqualFold predicate on the "patient_flag_description" field.
func PatientFlagDescriptionEqualFold(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldEqualFold(FieldPatientFlagDescription, v))
}

// PatientFlagDescriptionContainsFold applies the ContainsFold predicate on the "patient_flag_description" field.
func PatientFlagDescriptionContainsFold(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldContainsFold(FieldPatientFlagDescription, v))
}

// PatientFlagIsActiveEQ applies the EQ predicate on the "patient_flag_is_active" field.
func PatientFlagIsActiveEQ(v bool) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldEQ(FieldPatientFlagIsActive, v))
}

// PatientFlagIsActiveNEQ applies the NEQ predicate on the "patient_flag_is_active" field.
func PatientFlagIsActiveNEQ(v bool) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldNEQ(FieldPatientFlagIsActive, v))
}

// PatientFlagCreatedAtEQ applies the EQ predicate on the "patient_flag_created_at" field.
func PatientFlagCreatedAtEQ(v time.Time) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldEQ(FieldPatientFlagCreatedAt, v))
}

// PatientFlagCreatedAtNEQ applies the NEQ predicate on the "patient_flag_created_at" field.
func PatientFlagCreatedAtNEQ(v time.Time) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldNEQ(FieldPatientFlagCreatedAt, v))
}

// PatientFlagCreatedAtIn applies the In predicate on the "patient_flag_created_at" field.
func PatientFlagCreatedAtIn(vs ...time.Time) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldIn(FieldPatientFlagCreatedAt, vs...))
}

// PatientFlagCreatedAtNotIn applies the NotIn predicate on the "patient_flag_created_at" field.
func PatientFlagCreatedAtNotIn(vs ...time.Time) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldNotIn(FieldPatientFlagCreatedAt, vs...))
}

// PatientFlagCreatedAtGT applies the GT predicate on the "patient_flag_created_at" field.
func PatientFlagCreatedAtGT(v time.Time) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldGT(FieldPatientFlagCreatedAt, v))
}

// PatientFlagCreatedAtGTE applies the GTE predicate on the "patient_flag_created_at" field.
func PatientFlagCreatedAtGTE(v time.Time) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldGTE(FieldPatientFlagCreatedAt, v))
}

// PatientFlagCreatedAtLT applies the LT predicate on the "patient_flag_created_at" field.
func PatientFlagCreatedAtLT(v time.Time) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldLT(FieldPatientFlagCreatedAt, v))
}

// PatientFlagCreatedAtLTE applies the LTE predicate on the "patient_flag_created_at" field.
func PatientFlagCreatedAtLTE(v time.Time) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldLTE(FieldPatientFlagCreatedAt, v))
}

// PatientFlagColorEQ applies the EQ predicate on the "patient_flag_color" field.
func PatientFlagColorEQ(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldEQ(FieldPatientFlagColor, v))
}

// PatientFlagColorNEQ applies the NEQ predicate on the "patient_flag_color" field.
func PatientFlagColorNEQ(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldNEQ(FieldPatientFlagColor, v))
}

// PatientFlagColorIn applies the In predicate on the "patient_flag_color" field.
func PatientFlagColorIn(vs ...string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldIn(FieldPatientFlagColor, vs...))
}

// PatientFlagColorNotIn applies the NotIn predicate on the "patient_flag_color" field.
func PatientFlagColorNotIn(vs ...string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldNotIn(FieldPatientFlagColor, vs...))
}

// PatientFlagColorGT applies the GT predicate on the "patient_flag_color" field.
func PatientFlagColorGT(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldGT(FieldPatientFlagColor, v))
}

// PatientFlagColorGTE applies the GTE predicate on the "patient_flag_color" field.
func PatientFlagColorGTE(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldGTE(FieldPatientFlagColor, v))
}

// PatientFlagColorLT applies the LT predicate on the "patient_flag_color" field.
func PatientFlagColorLT(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldLT(FieldPatientFlagColor, v))
}

// PatientFlagColorLTE applies the LTE predicate on the "patient_flag_color" field.
func PatientFlagColorLTE(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldLTE(FieldPatientFlagColor, v))
}

// PatientFlagColorContains applies the Contains predicate on the "patient_flag_color" field.
func PatientFlagColorContains(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldContains(FieldPatientFlagColor, v))
}

// PatientFlagColorHasPrefix applies the HasPrefix predicate on the "patient_flag_color" field.
func PatientFlagColorHasPrefix(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldHasPrefix(FieldPatientFlagColor, v))
}

// PatientFlagColorHasSuffix applies the HasSuffix predicate on the "patient_flag_color" field.
func PatientFlagColorHasSuffix(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldHasSuffix(FieldPatientFlagColor, v))
}

// PatientFlagColorIsNil applies the IsNil predicate on the "patient_flag_color" field.
func PatientFlagColorIsNil() predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldIsNull(FieldPatientFlagColor))
}

// PatientFlagColorNotNil applies the NotNil predicate on the "patient_flag_color" field.
func PatientFlagColorNotNil() predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldNotNull(FieldPatientFlagColor))
}

// PatientFlagColorEqualFold applies the EqualFold predicate on the "patient_flag_color" field.
func PatientFlagColorEqualFold(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldEqualFold(FieldPatientFlagColor, v))
}

// PatientFlagColorContainsFold applies the ContainsFold predicate on the "patient_flag_color" field.
func PatientFlagColorContainsFold(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldContainsFold(FieldPatientFlagColor, v))
}

// PatientFlagedByEQ applies the EQ predicate on the "patient_flaged_by" field.
func PatientFlagedByEQ(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldEQ(FieldPatientFlagedBy, v))
}

// PatientFlagedByNEQ applies the NEQ predicate on the "patient_flaged_by" field.
func PatientFlagedByNEQ(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldNEQ(FieldPatientFlagedBy, v))
}

// PatientFlagedByIn applies the In predicate on the "patient_flaged_by" field.
func PatientFlagedByIn(vs ...string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldIn(FieldPatientFlagedBy, vs...))
}

// PatientFlagedByNotIn applies the NotIn predicate on the "patient_flaged_by" field.
func PatientFlagedByNotIn(vs ...string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldNotIn(FieldPatientFlagedBy, vs...))
}

// PatientFlagedByGT applies the GT predicate on the "patient_flaged_by" field.
func PatientFlagedByGT(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldGT(FieldPatientFlagedBy, v))
}

// PatientFlagedByGTE applies the GTE predicate on the "patient_flaged_by" field.
func PatientFlagedByGTE(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldGTE(FieldPatientFlagedBy, v))
}

// PatientFlagedByLT applies the LT predicate on the "patient_flaged_by" field.
func PatientFlagedByLT(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldLT(FieldPatientFlagedBy, v))
}

// PatientFlagedByLTE applies the LTE predicate on the "patient_flaged_by" field.
func PatientFlagedByLTE(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldLTE(FieldPatientFlagedBy, v))
}

// PatientFlagedByContains applies the Contains predicate on the "patient_flaged_by" field.
func PatientFlagedByContains(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldContains(FieldPatientFlagedBy, v))
}

// PatientFlagedByHasPrefix applies the HasPrefix predicate on the "patient_flaged_by" field.
func PatientFlagedByHasPrefix(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldHasPrefix(FieldPatientFlagedBy, v))
}

// PatientFlagedByHasSuffix applies the HasSuffix predicate on the "patient_flaged_by" field.
func PatientFlagedByHasSuffix(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldHasSuffix(FieldPatientFlagedBy, v))
}

// PatientFlagedByEqualFold applies the EqualFold predicate on the "patient_flaged_by" field.
func PatientFlagedByEqualFold(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldEqualFold(FieldPatientFlagedBy, v))
}

// PatientFlagedByContainsFold applies the ContainsFold predicate on the "patient_flaged_by" field.
func PatientFlagedByContainsFold(v string) predicate.PatientFlag {
	return predicate.PatientFlag(sql.FieldContainsFold(FieldPatientFlagedBy, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.PatientFlag) predicate.PatientFlag {
	return predicate.PatientFlag(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.PatientFlag) predicate.PatientFlag {
	return predicate.PatientFlag(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.PatientFlag) predicate.PatientFlag {
	return predicate.PatientFlag(sql.NotPredicates(p))
}
