// Code generated by ent, DO NOT EDIT.

package userinvitationrecord

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the userinvitationrecord type in the database.
	Label = "user_invitation_record"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCustomerID holds the string denoting the customer_id field in the database.
	FieldCustomerID = "customer_id"
	// FieldInvitationLink holds the string denoting the invitation_link field in the database.
	FieldInvitationLink = "invitation_link"
	// Table holds the table name of the userinvitationrecord in the database.
	Table = "user_invitation_records"
)

// Columns holds all SQL columns for userinvitationrecord fields.
var Columns = []string{
	FieldID,
	FieldCustomerID,
	FieldInvitationLink,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// InvitationLinkValidator is a validator for the "invitation_link" field. It is called by the builders before save.
	InvitationLinkValidator func(string) error
	// IDValidator is a validator for the "id" field. It is called by the builders before save.
	IDValidator func(int) error
)

// OrderOption defines the ordering options for the UserInvitationRecord queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByCustomerID orders the results by the customer_id field.
func ByCustomerID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCustomerID, opts...).ToFunc()
}

// ByInvitationLink orders the results by the invitation_link field.
func ByInvitationLink(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldInvitationLink, opts...).ToFunc()
}
