// Code generated by ent, DO NOT EDIT.

package ent

import (
	"context"
	"coresamples/ent/address"
	"coresamples/ent/clinic"
	"coresamples/ent/contact"
	"coresamples/ent/customer"
	"coresamples/ent/orderflag"
	"coresamples/ent/orderinfo"
	"coresamples/ent/sample"
	"coresamples/ent/test"
	"errors"
	"fmt"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"entgo.io/ent/schema/field"
)

// OrderInfoCreate is the builder for creating a OrderInfo entity.
type OrderInfoCreate struct {
	config
	mutation *OrderInfoMutation
	hooks    []Hook
	conflict []sql.ConflictOption
}

// SetOrderTitle sets the "order_title" field.
func (oic *OrderInfoCreate) SetOrderTitle(s string) *OrderInfoCreate {
	oic.mutation.SetOrderTitle(s)
	return oic
}

// SetNillableOrderTitle sets the "order_title" field if the given value is not nil.
func (oic *OrderInfoCreate) SetNillableOrderTitle(s *string) *OrderInfoCreate {
	if s != nil {
		oic.SetOrderTitle(*s)
	}
	return oic
}

// SetOrderType sets the "order_type" field.
func (oic *OrderInfoCreate) SetOrderType(s string) *OrderInfoCreate {
	oic.mutation.SetOrderType(s)
	return oic
}

// SetNillableOrderType sets the "order_type" field if the given value is not nil.
func (oic *OrderInfoCreate) SetNillableOrderType(s *string) *OrderInfoCreate {
	if s != nil {
		oic.SetOrderType(*s)
	}
	return oic
}

// SetOrderDescription sets the "order_description" field.
func (oic *OrderInfoCreate) SetOrderDescription(s string) *OrderInfoCreate {
	oic.mutation.SetOrderDescription(s)
	return oic
}

// SetNillableOrderDescription sets the "order_description" field if the given value is not nil.
func (oic *OrderInfoCreate) SetNillableOrderDescription(s *string) *OrderInfoCreate {
	if s != nil {
		oic.SetOrderDescription(*s)
	}
	return oic
}

// SetOrderConfirmationNumber sets the "order_confirmation_number" field.
func (oic *OrderInfoCreate) SetOrderConfirmationNumber(s string) *OrderInfoCreate {
	oic.mutation.SetOrderConfirmationNumber(s)
	return oic
}

// SetClinicID sets the "clinic_id" field.
func (oic *OrderInfoCreate) SetClinicID(i int) *OrderInfoCreate {
	oic.mutation.SetClinicID(i)
	return oic
}

// SetNillableClinicID sets the "clinic_id" field if the given value is not nil.
func (oic *OrderInfoCreate) SetNillableClinicID(i *int) *OrderInfoCreate {
	if i != nil {
		oic.SetClinicID(*i)
	}
	return oic
}

// SetCustomerID sets the "customer_id" field.
func (oic *OrderInfoCreate) SetCustomerID(i int) *OrderInfoCreate {
	oic.mutation.SetCustomerID(i)
	return oic
}

// SetNillableCustomerID sets the "customer_id" field if the given value is not nil.
func (oic *OrderInfoCreate) SetNillableCustomerID(i *int) *OrderInfoCreate {
	if i != nil {
		oic.SetCustomerID(*i)
	}
	return oic
}

// SetOrderCreateTime sets the "order_create_time" field.
func (oic *OrderInfoCreate) SetOrderCreateTime(t time.Time) *OrderInfoCreate {
	oic.mutation.SetOrderCreateTime(t)
	return oic
}

// SetNillableOrderCreateTime sets the "order_create_time" field if the given value is not nil.
func (oic *OrderInfoCreate) SetNillableOrderCreateTime(t *time.Time) *OrderInfoCreate {
	if t != nil {
		oic.SetOrderCreateTime(*t)
	}
	return oic
}

// SetOrderServiceTime sets the "order_service_time" field.
func (oic *OrderInfoCreate) SetOrderServiceTime(t time.Time) *OrderInfoCreate {
	oic.mutation.SetOrderServiceTime(t)
	return oic
}

// SetNillableOrderServiceTime sets the "order_service_time" field if the given value is not nil.
func (oic *OrderInfoCreate) SetNillableOrderServiceTime(t *time.Time) *OrderInfoCreate {
	if t != nil {
		oic.SetOrderServiceTime(*t)
	}
	return oic
}

// SetOrderProcessTime sets the "order_process_time" field.
func (oic *OrderInfoCreate) SetOrderProcessTime(t time.Time) *OrderInfoCreate {
	oic.mutation.SetOrderProcessTime(t)
	return oic
}

// SetNillableOrderProcessTime sets the "order_process_time" field if the given value is not nil.
func (oic *OrderInfoCreate) SetNillableOrderProcessTime(t *time.Time) *OrderInfoCreate {
	if t != nil {
		oic.SetOrderProcessTime(*t)
	}
	return oic
}

// SetOrderRedrawTime sets the "order_redraw_time" field.
func (oic *OrderInfoCreate) SetOrderRedrawTime(t time.Time) *OrderInfoCreate {
	oic.mutation.SetOrderRedrawTime(t)
	return oic
}

// SetNillableOrderRedrawTime sets the "order_redraw_time" field if the given value is not nil.
func (oic *OrderInfoCreate) SetNillableOrderRedrawTime(t *time.Time) *OrderInfoCreate {
	if t != nil {
		oic.SetOrderRedrawTime(*t)
	}
	return oic
}

// SetOrderCancelTime sets the "order_cancel_time" field.
func (oic *OrderInfoCreate) SetOrderCancelTime(t time.Time) *OrderInfoCreate {
	oic.mutation.SetOrderCancelTime(t)
	return oic
}

// SetNillableOrderCancelTime sets the "order_cancel_time" field if the given value is not nil.
func (oic *OrderInfoCreate) SetNillableOrderCancelTime(t *time.Time) *OrderInfoCreate {
	if t != nil {
		oic.SetOrderCancelTime(*t)
	}
	return oic
}

// SetIsActive sets the "isActive" field.
func (oic *OrderInfoCreate) SetIsActive(b bool) *OrderInfoCreate {
	oic.mutation.SetIsActive(b)
	return oic
}

// SetNillableIsActive sets the "isActive" field if the given value is not nil.
func (oic *OrderInfoCreate) SetNillableIsActive(b *bool) *OrderInfoCreate {
	if b != nil {
		oic.SetIsActive(*b)
	}
	return oic
}

// SetHasOrderSetting sets the "has_order_setting" field.
func (oic *OrderInfoCreate) SetHasOrderSetting(b bool) *OrderInfoCreate {
	oic.mutation.SetHasOrderSetting(b)
	return oic
}

// SetNillableHasOrderSetting sets the "has_order_setting" field if the given value is not nil.
func (oic *OrderInfoCreate) SetNillableHasOrderSetting(b *bool) *OrderInfoCreate {
	if b != nil {
		oic.SetHasOrderSetting(*b)
	}
	return oic
}

// SetOrderCanceled sets the "order_canceled" field.
func (oic *OrderInfoCreate) SetOrderCanceled(b bool) *OrderInfoCreate {
	oic.mutation.SetOrderCanceled(b)
	return oic
}

// SetNillableOrderCanceled sets the "order_canceled" field if the given value is not nil.
func (oic *OrderInfoCreate) SetNillableOrderCanceled(b *bool) *OrderInfoCreate {
	if b != nil {
		oic.SetOrderCanceled(*b)
	}
	return oic
}

// SetOrderFlagged sets the "order_flagged" field.
func (oic *OrderInfoCreate) SetOrderFlagged(b bool) *OrderInfoCreate {
	oic.mutation.SetOrderFlagged(b)
	return oic
}

// SetNillableOrderFlagged sets the "order_flagged" field if the given value is not nil.
func (oic *OrderInfoCreate) SetNillableOrderFlagged(b *bool) *OrderInfoCreate {
	if b != nil {
		oic.SetOrderFlagged(*b)
	}
	return oic
}

// SetOrderStatus sets the "order_status" field.
func (oic *OrderInfoCreate) SetOrderStatus(s string) *OrderInfoCreate {
	oic.mutation.SetOrderStatus(s)
	return oic
}

// SetNillableOrderStatus sets the "order_status" field if the given value is not nil.
func (oic *OrderInfoCreate) SetNillableOrderStatus(s *string) *OrderInfoCreate {
	if s != nil {
		oic.SetOrderStatus(*s)
	}
	return oic
}

// SetOrderMajorStatus sets the "order_major_status" field.
func (oic *OrderInfoCreate) SetOrderMajorStatus(s string) *OrderInfoCreate {
	oic.mutation.SetOrderMajorStatus(s)
	return oic
}

// SetNillableOrderMajorStatus sets the "order_major_status" field if the given value is not nil.
func (oic *OrderInfoCreate) SetNillableOrderMajorStatus(s *string) *OrderInfoCreate {
	if s != nil {
		oic.SetOrderMajorStatus(*s)
	}
	return oic
}

// SetOrderKitStatus sets the "order_kit_status" field.
func (oic *OrderInfoCreate) SetOrderKitStatus(s string) *OrderInfoCreate {
	oic.mutation.SetOrderKitStatus(s)
	return oic
}

// SetNillableOrderKitStatus sets the "order_kit_status" field if the given value is not nil.
func (oic *OrderInfoCreate) SetNillableOrderKitStatus(s *string) *OrderInfoCreate {
	if s != nil {
		oic.SetOrderKitStatus(*s)
	}
	return oic
}

// SetOrderReportStatus sets the "order_report_status" field.
func (oic *OrderInfoCreate) SetOrderReportStatus(s string) *OrderInfoCreate {
	oic.mutation.SetOrderReportStatus(s)
	return oic
}

// SetNillableOrderReportStatus sets the "order_report_status" field if the given value is not nil.
func (oic *OrderInfoCreate) SetNillableOrderReportStatus(s *string) *OrderInfoCreate {
	if s != nil {
		oic.SetOrderReportStatus(*s)
	}
	return oic
}

// SetOrderTnpIssueStatus sets the "order_tnp_issue_status" field.
func (oic *OrderInfoCreate) SetOrderTnpIssueStatus(s string) *OrderInfoCreate {
	oic.mutation.SetOrderTnpIssueStatus(s)
	return oic
}

// SetNillableOrderTnpIssueStatus sets the "order_tnp_issue_status" field if the given value is not nil.
func (oic *OrderInfoCreate) SetNillableOrderTnpIssueStatus(s *string) *OrderInfoCreate {
	if s != nil {
		oic.SetOrderTnpIssueStatus(*s)
	}
	return oic
}

// SetOrderBillingIssueStatus sets the "order_billing_issue_status" field.
func (oic *OrderInfoCreate) SetOrderBillingIssueStatus(s string) *OrderInfoCreate {
	oic.mutation.SetOrderBillingIssueStatus(s)
	return oic
}

// SetNillableOrderBillingIssueStatus sets the "order_billing_issue_status" field if the given value is not nil.
func (oic *OrderInfoCreate) SetNillableOrderBillingIssueStatus(s *string) *OrderInfoCreate {
	if s != nil {
		oic.SetOrderBillingIssueStatus(*s)
	}
	return oic
}

// SetOrderMissingInfoIssueStatus sets the "order_missing_info_issue_status" field.
func (oic *OrderInfoCreate) SetOrderMissingInfoIssueStatus(s string) *OrderInfoCreate {
	oic.mutation.SetOrderMissingInfoIssueStatus(s)
	return oic
}

// SetNillableOrderMissingInfoIssueStatus sets the "order_missing_info_issue_status" field if the given value is not nil.
func (oic *OrderInfoCreate) SetNillableOrderMissingInfoIssueStatus(s *string) *OrderInfoCreate {
	if s != nil {
		oic.SetOrderMissingInfoIssueStatus(*s)
	}
	return oic
}

// SetOrderIncompleteQuestionnaireIssueStatus sets the "order_incomplete_questionnaire_issue_status" field.
func (oic *OrderInfoCreate) SetOrderIncompleteQuestionnaireIssueStatus(s string) *OrderInfoCreate {
	oic.mutation.SetOrderIncompleteQuestionnaireIssueStatus(s)
	return oic
}

// SetNillableOrderIncompleteQuestionnaireIssueStatus sets the "order_incomplete_questionnaire_issue_status" field if the given value is not nil.
func (oic *OrderInfoCreate) SetNillableOrderIncompleteQuestionnaireIssueStatus(s *string) *OrderInfoCreate {
	if s != nil {
		oic.SetOrderIncompleteQuestionnaireIssueStatus(*s)
	}
	return oic
}

// SetOrderNyWaiveFormIssueStatus sets the "order_ny_waive_form_issue_status" field.
func (oic *OrderInfoCreate) SetOrderNyWaiveFormIssueStatus(s string) *OrderInfoCreate {
	oic.mutation.SetOrderNyWaiveFormIssueStatus(s)
	return oic
}

// SetNillableOrderNyWaiveFormIssueStatus sets the "order_ny_waive_form_issue_status" field if the given value is not nil.
func (oic *OrderInfoCreate) SetNillableOrderNyWaiveFormIssueStatus(s *string) *OrderInfoCreate {
	if s != nil {
		oic.SetOrderNyWaiveFormIssueStatus(*s)
	}
	return oic
}

// SetOrderLabIssueStatus sets the "order_lab_issue_status" field.
func (oic *OrderInfoCreate) SetOrderLabIssueStatus(s string) *OrderInfoCreate {
	oic.mutation.SetOrderLabIssueStatus(s)
	return oic
}

// SetNillableOrderLabIssueStatus sets the "order_lab_issue_status" field if the given value is not nil.
func (oic *OrderInfoCreate) SetNillableOrderLabIssueStatus(s *string) *OrderInfoCreate {
	if s != nil {
		oic.SetOrderLabIssueStatus(*s)
	}
	return oic
}

// SetOrderProcessingTime sets the "order_processing_time" field.
func (oic *OrderInfoCreate) SetOrderProcessingTime(t time.Time) *OrderInfoCreate {
	oic.mutation.SetOrderProcessingTime(t)
	return oic
}

// SetNillableOrderProcessingTime sets the "order_processing_time" field if the given value is not nil.
func (oic *OrderInfoCreate) SetNillableOrderProcessingTime(t *time.Time) *OrderInfoCreate {
	if t != nil {
		oic.SetOrderProcessingTime(*t)
	}
	return oic
}

// SetOrderMinorStatus sets the "order_minor_status" field.
func (oic *OrderInfoCreate) SetOrderMinorStatus(s string) *OrderInfoCreate {
	oic.mutation.SetOrderMinorStatus(s)
	return oic
}

// SetNillableOrderMinorStatus sets the "order_minor_status" field if the given value is not nil.
func (oic *OrderInfoCreate) SetNillableOrderMinorStatus(s *string) *OrderInfoCreate {
	if s != nil {
		oic.SetOrderMinorStatus(*s)
	}
	return oic
}

// SetPatientFirstName sets the "patient_first_name" field.
func (oic *OrderInfoCreate) SetPatientFirstName(s string) *OrderInfoCreate {
	oic.mutation.SetPatientFirstName(s)
	return oic
}

// SetNillablePatientFirstName sets the "patient_first_name" field if the given value is not nil.
func (oic *OrderInfoCreate) SetNillablePatientFirstName(s *string) *OrderInfoCreate {
	if s != nil {
		oic.SetPatientFirstName(*s)
	}
	return oic
}

// SetPatientLastName sets the "patient_last_name" field.
func (oic *OrderInfoCreate) SetPatientLastName(s string) *OrderInfoCreate {
	oic.mutation.SetPatientLastName(s)
	return oic
}

// SetNillablePatientLastName sets the "patient_last_name" field if the given value is not nil.
func (oic *OrderInfoCreate) SetNillablePatientLastName(s *string) *OrderInfoCreate {
	if s != nil {
		oic.SetPatientLastName(*s)
	}
	return oic
}

// SetOrderSource sets the "order_source" field.
func (oic *OrderInfoCreate) SetOrderSource(s string) *OrderInfoCreate {
	oic.mutation.SetOrderSource(s)
	return oic
}

// SetNillableOrderSource sets the "order_source" field if the given value is not nil.
func (oic *OrderInfoCreate) SetNillableOrderSource(s *string) *OrderInfoCreate {
	if s != nil {
		oic.SetOrderSource(*s)
	}
	return oic
}

// SetOrderChargeMethod sets the "order_charge_method" field.
func (oic *OrderInfoCreate) SetOrderChargeMethod(s string) *OrderInfoCreate {
	oic.mutation.SetOrderChargeMethod(s)
	return oic
}

// SetNillableOrderChargeMethod sets the "order_charge_method" field if the given value is not nil.
func (oic *OrderInfoCreate) SetNillableOrderChargeMethod(s *string) *OrderInfoCreate {
	if s != nil {
		oic.SetOrderChargeMethod(*s)
	}
	return oic
}

// SetOrderPlacingType sets the "order_placing_type" field.
func (oic *OrderInfoCreate) SetOrderPlacingType(s string) *OrderInfoCreate {
	oic.mutation.SetOrderPlacingType(s)
	return oic
}

// SetNillableOrderPlacingType sets the "order_placing_type" field if the given value is not nil.
func (oic *OrderInfoCreate) SetNillableOrderPlacingType(s *string) *OrderInfoCreate {
	if s != nil {
		oic.SetOrderPlacingType(*s)
	}
	return oic
}

// SetBillingOrderID sets the "billing_order_id" field.
func (oic *OrderInfoCreate) SetBillingOrderID(s string) *OrderInfoCreate {
	oic.mutation.SetBillingOrderID(s)
	return oic
}

// SetNillableBillingOrderID sets the "billing_order_id" field if the given value is not nil.
func (oic *OrderInfoCreate) SetNillableBillingOrderID(s *string) *OrderInfoCreate {
	if s != nil {
		oic.SetBillingOrderID(*s)
	}
	return oic
}

// SetContactID sets the "contact_id" field.
func (oic *OrderInfoCreate) SetContactID(i int) *OrderInfoCreate {
	oic.mutation.SetContactID(i)
	return oic
}

// SetNillableContactID sets the "contact_id" field if the given value is not nil.
func (oic *OrderInfoCreate) SetNillableContactID(i *int) *OrderInfoCreate {
	if i != nil {
		oic.SetContactID(*i)
	}
	return oic
}

// SetAddressID sets the "address_id" field.
func (oic *OrderInfoCreate) SetAddressID(i int) *OrderInfoCreate {
	oic.mutation.SetAddressID(i)
	return oic
}

// SetNillableAddressID sets the "address_id" field if the given value is not nil.
func (oic *OrderInfoCreate) SetNillableAddressID(i *int) *OrderInfoCreate {
	if i != nil {
		oic.SetAddressID(*i)
	}
	return oic
}

// SetID sets the "id" field.
func (oic *OrderInfoCreate) SetID(i int) *OrderInfoCreate {
	oic.mutation.SetID(i)
	return oic
}

// AddTestIDs adds the "tests" edge to the Test entity by IDs.
func (oic *OrderInfoCreate) AddTestIDs(ids ...int) *OrderInfoCreate {
	oic.mutation.AddTestIDs(ids...)
	return oic
}

// AddTests adds the "tests" edges to the Test entity.
func (oic *OrderInfoCreate) AddTests(t ...*Test) *OrderInfoCreate {
	ids := make([]int, len(t))
	for i := range t {
		ids[i] = t[i].ID
	}
	return oic.AddTestIDs(ids...)
}

// AddOrderFlagIDs adds the "order_flags" edge to the OrderFlag entity by IDs.
func (oic *OrderInfoCreate) AddOrderFlagIDs(ids ...int) *OrderInfoCreate {
	oic.mutation.AddOrderFlagIDs(ids...)
	return oic
}

// AddOrderFlags adds the "order_flags" edges to the OrderFlag entity.
func (oic *OrderInfoCreate) AddOrderFlags(o ...*OrderFlag) *OrderInfoCreate {
	ids := make([]int, len(o))
	for i := range o {
		ids[i] = o[i].ID
	}
	return oic.AddOrderFlagIDs(ids...)
}

// SetSampleID sets the "sample" edge to the Sample entity by ID.
func (oic *OrderInfoCreate) SetSampleID(id int) *OrderInfoCreate {
	oic.mutation.SetSampleID(id)
	return oic
}

// SetNillableSampleID sets the "sample" edge to the Sample entity by ID if the given value is not nil.
func (oic *OrderInfoCreate) SetNillableSampleID(id *int) *OrderInfoCreate {
	if id != nil {
		oic = oic.SetSampleID(*id)
	}
	return oic
}

// SetSample sets the "sample" edge to the Sample entity.
func (oic *OrderInfoCreate) SetSample(s *Sample) *OrderInfoCreate {
	return oic.SetSampleID(s.ID)
}

// SetContact sets the "contact" edge to the Contact entity.
func (oic *OrderInfoCreate) SetContact(c *Contact) *OrderInfoCreate {
	return oic.SetContactID(c.ID)
}

// SetAddress sets the "address" edge to the Address entity.
func (oic *OrderInfoCreate) SetAddress(a *Address) *OrderInfoCreate {
	return oic.SetAddressID(a.ID)
}

// SetClinic sets the "clinic" edge to the Clinic entity.
func (oic *OrderInfoCreate) SetClinic(c *Clinic) *OrderInfoCreate {
	return oic.SetClinicID(c.ID)
}

// SetCustomerInfoID sets the "customer_info" edge to the Customer entity by ID.
func (oic *OrderInfoCreate) SetCustomerInfoID(id int) *OrderInfoCreate {
	oic.mutation.SetCustomerInfoID(id)
	return oic
}

// SetNillableCustomerInfoID sets the "customer_info" edge to the Customer entity by ID if the given value is not nil.
func (oic *OrderInfoCreate) SetNillableCustomerInfoID(id *int) *OrderInfoCreate {
	if id != nil {
		oic = oic.SetCustomerInfoID(*id)
	}
	return oic
}

// SetCustomerInfo sets the "customer_info" edge to the Customer entity.
func (oic *OrderInfoCreate) SetCustomerInfo(c *Customer) *OrderInfoCreate {
	return oic.SetCustomerInfoID(c.ID)
}

// Mutation returns the OrderInfoMutation object of the builder.
func (oic *OrderInfoCreate) Mutation() *OrderInfoMutation {
	return oic.mutation
}

// Save creates the OrderInfo in the database.
func (oic *OrderInfoCreate) Save(ctx context.Context) (*OrderInfo, error) {
	oic.defaults()
	return withHooks(ctx, oic.sqlSave, oic.mutation, oic.hooks)
}

// SaveX calls Save and panics if Save returns an error.
func (oic *OrderInfoCreate) SaveX(ctx context.Context) *OrderInfo {
	v, err := oic.Save(ctx)
	if err != nil {
		panic(err)
	}
	return v
}

// Exec executes the query.
func (oic *OrderInfoCreate) Exec(ctx context.Context) error {
	_, err := oic.Save(ctx)
	return err
}

// ExecX is like Exec, but panics if an error occurs.
func (oic *OrderInfoCreate) ExecX(ctx context.Context) {
	if err := oic.Exec(ctx); err != nil {
		panic(err)
	}
}

// defaults sets the default values of the builder before save.
func (oic *OrderInfoCreate) defaults() {
	if _, ok := oic.mutation.OrderTitle(); !ok {
		v := orderinfo.DefaultOrderTitle
		oic.mutation.SetOrderTitle(v)
	}
	if _, ok := oic.mutation.OrderType(); !ok {
		v := orderinfo.DefaultOrderType
		oic.mutation.SetOrderType(v)
	}
	if _, ok := oic.mutation.OrderDescription(); !ok {
		v := orderinfo.DefaultOrderDescription
		oic.mutation.SetOrderDescription(v)
	}
	if _, ok := oic.mutation.OrderCreateTime(); !ok {
		v := orderinfo.DefaultOrderCreateTime()
		oic.mutation.SetOrderCreateTime(v)
	}
	if _, ok := oic.mutation.OrderServiceTime(); !ok {
		v := orderinfo.DefaultOrderServiceTime()
		oic.mutation.SetOrderServiceTime(v)
	}
	if _, ok := oic.mutation.OrderProcessTime(); !ok {
		v := orderinfo.DefaultOrderProcessTime()
		oic.mutation.SetOrderProcessTime(v)
	}
	if _, ok := oic.mutation.OrderRedrawTime(); !ok {
		v := orderinfo.DefaultOrderRedrawTime()
		oic.mutation.SetOrderRedrawTime(v)
	}
	if _, ok := oic.mutation.OrderCancelTime(); !ok {
		v := orderinfo.DefaultOrderCancelTime()
		oic.mutation.SetOrderCancelTime(v)
	}
	if _, ok := oic.mutation.IsActive(); !ok {
		v := orderinfo.DefaultIsActive
		oic.mutation.SetIsActive(v)
	}
	if _, ok := oic.mutation.HasOrderSetting(); !ok {
		v := orderinfo.DefaultHasOrderSetting
		oic.mutation.SetHasOrderSetting(v)
	}
	if _, ok := oic.mutation.OrderCanceled(); !ok {
		v := orderinfo.DefaultOrderCanceled
		oic.mutation.SetOrderCanceled(v)
	}
	if _, ok := oic.mutation.OrderFlagged(); !ok {
		v := orderinfo.DefaultOrderFlagged
		oic.mutation.SetOrderFlagged(v)
	}
	if _, ok := oic.mutation.OrderStatus(); !ok {
		v := orderinfo.DefaultOrderStatus
		oic.mutation.SetOrderStatus(v)
	}
	if _, ok := oic.mutation.OrderMajorStatus(); !ok {
		v := orderinfo.DefaultOrderMajorStatus
		oic.mutation.SetOrderMajorStatus(v)
	}
	if _, ok := oic.mutation.OrderKitStatus(); !ok {
		v := orderinfo.DefaultOrderKitStatus
		oic.mutation.SetOrderKitStatus(v)
	}
	if _, ok := oic.mutation.OrderReportStatus(); !ok {
		v := orderinfo.DefaultOrderReportStatus
		oic.mutation.SetOrderReportStatus(v)
	}
	if _, ok := oic.mutation.OrderTnpIssueStatus(); !ok {
		v := orderinfo.DefaultOrderTnpIssueStatus
		oic.mutation.SetOrderTnpIssueStatus(v)
	}
	if _, ok := oic.mutation.OrderBillingIssueStatus(); !ok {
		v := orderinfo.DefaultOrderBillingIssueStatus
		oic.mutation.SetOrderBillingIssueStatus(v)
	}
	if _, ok := oic.mutation.OrderMissingInfoIssueStatus(); !ok {
		v := orderinfo.DefaultOrderMissingInfoIssueStatus
		oic.mutation.SetOrderMissingInfoIssueStatus(v)
	}
	if _, ok := oic.mutation.OrderIncompleteQuestionnaireIssueStatus(); !ok {
		v := orderinfo.DefaultOrderIncompleteQuestionnaireIssueStatus
		oic.mutation.SetOrderIncompleteQuestionnaireIssueStatus(v)
	}
	if _, ok := oic.mutation.OrderNyWaiveFormIssueStatus(); !ok {
		v := orderinfo.DefaultOrderNyWaiveFormIssueStatus
		oic.mutation.SetOrderNyWaiveFormIssueStatus(v)
	}
	if _, ok := oic.mutation.OrderLabIssueStatus(); !ok {
		v := orderinfo.DefaultOrderLabIssueStatus
		oic.mutation.SetOrderLabIssueStatus(v)
	}
	if _, ok := oic.mutation.OrderSource(); !ok {
		v := orderinfo.DefaultOrderSource
		oic.mutation.SetOrderSource(v)
	}
	if _, ok := oic.mutation.OrderPlacingType(); !ok {
		v := orderinfo.DefaultOrderPlacingType
		oic.mutation.SetOrderPlacingType(v)
	}
}

// check runs all checks and user-defined validators on the builder.
func (oic *OrderInfoCreate) check() error {
	if _, ok := oic.mutation.OrderTitle(); !ok {
		return &ValidationError{Name: "order_title", err: errors.New(`ent: missing required field "OrderInfo.order_title"`)}
	}
	if _, ok := oic.mutation.OrderType(); !ok {
		return &ValidationError{Name: "order_type", err: errors.New(`ent: missing required field "OrderInfo.order_type"`)}
	}
	if _, ok := oic.mutation.OrderDescription(); !ok {
		return &ValidationError{Name: "order_description", err: errors.New(`ent: missing required field "OrderInfo.order_description"`)}
	}
	if _, ok := oic.mutation.OrderConfirmationNumber(); !ok {
		return &ValidationError{Name: "order_confirmation_number", err: errors.New(`ent: missing required field "OrderInfo.order_confirmation_number"`)}
	}
	if _, ok := oic.mutation.OrderCreateTime(); !ok {
		return &ValidationError{Name: "order_create_time", err: errors.New(`ent: missing required field "OrderInfo.order_create_time"`)}
	}
	if _, ok := oic.mutation.IsActive(); !ok {
		return &ValidationError{Name: "isActive", err: errors.New(`ent: missing required field "OrderInfo.isActive"`)}
	}
	if _, ok := oic.mutation.HasOrderSetting(); !ok {
		return &ValidationError{Name: "has_order_setting", err: errors.New(`ent: missing required field "OrderInfo.has_order_setting"`)}
	}
	if _, ok := oic.mutation.OrderCanceled(); !ok {
		return &ValidationError{Name: "order_canceled", err: errors.New(`ent: missing required field "OrderInfo.order_canceled"`)}
	}
	if _, ok := oic.mutation.OrderFlagged(); !ok {
		return &ValidationError{Name: "order_flagged", err: errors.New(`ent: missing required field "OrderInfo.order_flagged"`)}
	}
	return nil
}

func (oic *OrderInfoCreate) sqlSave(ctx context.Context) (*OrderInfo, error) {
	if err := oic.check(); err != nil {
		return nil, err
	}
	_node, _spec := oic.createSpec()
	if err := sqlgraph.CreateNode(ctx, oic.driver, _spec); err != nil {
		if sqlgraph.IsConstraintError(err) {
			err = &ConstraintError{msg: err.Error(), wrap: err}
		}
		return nil, err
	}
	if _spec.ID.Value != _node.ID {
		id := _spec.ID.Value.(int64)
		_node.ID = int(id)
	}
	oic.mutation.id = &_node.ID
	oic.mutation.done = true
	return _node, nil
}

func (oic *OrderInfoCreate) createSpec() (*OrderInfo, *sqlgraph.CreateSpec) {
	var (
		_node = &OrderInfo{config: oic.config}
		_spec = sqlgraph.NewCreateSpec(orderinfo.Table, sqlgraph.NewFieldSpec(orderinfo.FieldID, field.TypeInt))
	)
	_spec.OnConflict = oic.conflict
	if id, ok := oic.mutation.ID(); ok {
		_node.ID = id
		_spec.ID.Value = id
	}
	if value, ok := oic.mutation.OrderTitle(); ok {
		_spec.SetField(orderinfo.FieldOrderTitle, field.TypeString, value)
		_node.OrderTitle = value
	}
	if value, ok := oic.mutation.OrderType(); ok {
		_spec.SetField(orderinfo.FieldOrderType, field.TypeString, value)
		_node.OrderType = value
	}
	if value, ok := oic.mutation.OrderDescription(); ok {
		_spec.SetField(orderinfo.FieldOrderDescription, field.TypeString, value)
		_node.OrderDescription = value
	}
	if value, ok := oic.mutation.OrderConfirmationNumber(); ok {
		_spec.SetField(orderinfo.FieldOrderConfirmationNumber, field.TypeString, value)
		_node.OrderConfirmationNumber = value
	}
	if value, ok := oic.mutation.OrderCreateTime(); ok {
		_spec.SetField(orderinfo.FieldOrderCreateTime, field.TypeTime, value)
		_node.OrderCreateTime = value
	}
	if value, ok := oic.mutation.OrderServiceTime(); ok {
		_spec.SetField(orderinfo.FieldOrderServiceTime, field.TypeTime, value)
		_node.OrderServiceTime = value
	}
	if value, ok := oic.mutation.OrderProcessTime(); ok {
		_spec.SetField(orderinfo.FieldOrderProcessTime, field.TypeTime, value)
		_node.OrderProcessTime = value
	}
	if value, ok := oic.mutation.OrderRedrawTime(); ok {
		_spec.SetField(orderinfo.FieldOrderRedrawTime, field.TypeTime, value)
		_node.OrderRedrawTime = value
	}
	if value, ok := oic.mutation.OrderCancelTime(); ok {
		_spec.SetField(orderinfo.FieldOrderCancelTime, field.TypeTime, value)
		_node.OrderCancelTime = value
	}
	if value, ok := oic.mutation.IsActive(); ok {
		_spec.SetField(orderinfo.FieldIsActive, field.TypeBool, value)
		_node.IsActive = value
	}
	if value, ok := oic.mutation.HasOrderSetting(); ok {
		_spec.SetField(orderinfo.FieldHasOrderSetting, field.TypeBool, value)
		_node.HasOrderSetting = value
	}
	if value, ok := oic.mutation.OrderCanceled(); ok {
		_spec.SetField(orderinfo.FieldOrderCanceled, field.TypeBool, value)
		_node.OrderCanceled = value
	}
	if value, ok := oic.mutation.OrderFlagged(); ok {
		_spec.SetField(orderinfo.FieldOrderFlagged, field.TypeBool, value)
		_node.OrderFlagged = value
	}
	if value, ok := oic.mutation.OrderStatus(); ok {
		_spec.SetField(orderinfo.FieldOrderStatus, field.TypeString, value)
		_node.OrderStatus = value
	}
	if value, ok := oic.mutation.OrderMajorStatus(); ok {
		_spec.SetField(orderinfo.FieldOrderMajorStatus, field.TypeString, value)
		_node.OrderMajorStatus = value
	}
	if value, ok := oic.mutation.OrderKitStatus(); ok {
		_spec.SetField(orderinfo.FieldOrderKitStatus, field.TypeString, value)
		_node.OrderKitStatus = value
	}
	if value, ok := oic.mutation.OrderReportStatus(); ok {
		_spec.SetField(orderinfo.FieldOrderReportStatus, field.TypeString, value)
		_node.OrderReportStatus = value
	}
	if value, ok := oic.mutation.OrderTnpIssueStatus(); ok {
		_spec.SetField(orderinfo.FieldOrderTnpIssueStatus, field.TypeString, value)
		_node.OrderTnpIssueStatus = value
	}
	if value, ok := oic.mutation.OrderBillingIssueStatus(); ok {
		_spec.SetField(orderinfo.FieldOrderBillingIssueStatus, field.TypeString, value)
		_node.OrderBillingIssueStatus = value
	}
	if value, ok := oic.mutation.OrderMissingInfoIssueStatus(); ok {
		_spec.SetField(orderinfo.FieldOrderMissingInfoIssueStatus, field.TypeString, value)
		_node.OrderMissingInfoIssueStatus = value
	}
	if value, ok := oic.mutation.OrderIncompleteQuestionnaireIssueStatus(); ok {
		_spec.SetField(orderinfo.FieldOrderIncompleteQuestionnaireIssueStatus, field.TypeString, value)
		_node.OrderIncompleteQuestionnaireIssueStatus = value
	}
	if value, ok := oic.mutation.OrderNyWaiveFormIssueStatus(); ok {
		_spec.SetField(orderinfo.FieldOrderNyWaiveFormIssueStatus, field.TypeString, value)
		_node.OrderNyWaiveFormIssueStatus = value
	}
	if value, ok := oic.mutation.OrderLabIssueStatus(); ok {
		_spec.SetField(orderinfo.FieldOrderLabIssueStatus, field.TypeString, value)
		_node.OrderLabIssueStatus = value
	}
	if value, ok := oic.mutation.OrderProcessingTime(); ok {
		_spec.SetField(orderinfo.FieldOrderProcessingTime, field.TypeTime, value)
		_node.OrderProcessingTime = value
	}
	if value, ok := oic.mutation.OrderMinorStatus(); ok {
		_spec.SetField(orderinfo.FieldOrderMinorStatus, field.TypeString, value)
		_node.OrderMinorStatus = value
	}
	if value, ok := oic.mutation.PatientFirstName(); ok {
		_spec.SetField(orderinfo.FieldPatientFirstName, field.TypeString, value)
		_node.PatientFirstName = value
	}
	if value, ok := oic.mutation.PatientLastName(); ok {
		_spec.SetField(orderinfo.FieldPatientLastName, field.TypeString, value)
		_node.PatientLastName = value
	}
	if value, ok := oic.mutation.OrderSource(); ok {
		_spec.SetField(orderinfo.FieldOrderSource, field.TypeString, value)
		_node.OrderSource = value
	}
	if value, ok := oic.mutation.OrderChargeMethod(); ok {
		_spec.SetField(orderinfo.FieldOrderChargeMethod, field.TypeString, value)
		_node.OrderChargeMethod = value
	}
	if value, ok := oic.mutation.OrderPlacingType(); ok {
		_spec.SetField(orderinfo.FieldOrderPlacingType, field.TypeString, value)
		_node.OrderPlacingType = value
	}
	if value, ok := oic.mutation.BillingOrderID(); ok {
		_spec.SetField(orderinfo.FieldBillingOrderID, field.TypeString, value)
		_node.BillingOrderID = value
	}
	if nodes := oic.mutation.TestsIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.M2M,
			Inverse: false,
			Table:   orderinfo.TestsTable,
			Columns: orderinfo.TestsPrimaryKey,
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(test.FieldID, field.TypeInt),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges = append(_spec.Edges, edge)
	}
	if nodes := oic.mutation.OrderFlagsIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.M2M,
			Inverse: true,
			Table:   orderinfo.OrderFlagsTable,
			Columns: orderinfo.OrderFlagsPrimaryKey,
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(orderflag.FieldID, field.TypeInt),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges = append(_spec.Edges, edge)
	}
	if nodes := oic.mutation.SampleIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2O,
			Inverse: false,
			Table:   orderinfo.SampleTable,
			Columns: []string{orderinfo.SampleColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(sample.FieldID, field.TypeInt),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges = append(_spec.Edges, edge)
	}
	if nodes := oic.mutation.ContactIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.M2O,
			Inverse: true,
			Table:   orderinfo.ContactTable,
			Columns: []string{orderinfo.ContactColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(contact.FieldID, field.TypeInt),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_node.ContactID = nodes[0]
		_spec.Edges = append(_spec.Edges, edge)
	}
	if nodes := oic.mutation.AddressIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.M2O,
			Inverse: true,
			Table:   orderinfo.AddressTable,
			Columns: []string{orderinfo.AddressColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(address.FieldID, field.TypeInt),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_node.AddressID = nodes[0]
		_spec.Edges = append(_spec.Edges, edge)
	}
	if nodes := oic.mutation.ClinicIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.M2O,
			Inverse: true,
			Table:   orderinfo.ClinicTable,
			Columns: []string{orderinfo.ClinicColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(clinic.FieldID, field.TypeInt),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_node.ClinicID = nodes[0]
		_spec.Edges = append(_spec.Edges, edge)
	}
	if nodes := oic.mutation.CustomerInfoIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.M2O,
			Inverse: true,
			Table:   orderinfo.CustomerInfoTable,
			Columns: []string{orderinfo.CustomerInfoColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(customer.FieldID, field.TypeInt),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_node.CustomerID = nodes[0]
		_spec.Edges = append(_spec.Edges, edge)
	}
	return _node, _spec
}

// OnConflict allows configuring the `ON CONFLICT` / `ON DUPLICATE KEY` clause
// of the `INSERT` statement. For example:
//
//	client.OrderInfo.Create().
//		SetOrderTitle(v).
//		OnConflict(
//			// Update the row with the new values
//			// the was proposed for insertion.
//			sql.ResolveWithNewValues(),
//		).
//		// Override some of the fields with custom
//		// update values.
//		Update(func(u *ent.OrderInfoUpsert) {
//			SetOrderTitle(v+v).
//		}).
//		Exec(ctx)
func (oic *OrderInfoCreate) OnConflict(opts ...sql.ConflictOption) *OrderInfoUpsertOne {
	oic.conflict = opts
	return &OrderInfoUpsertOne{
		create: oic,
	}
}

// OnConflictColumns calls `OnConflict` and configures the columns
// as conflict target. Using this option is equivalent to using:
//
//	client.OrderInfo.Create().
//		OnConflict(sql.ConflictColumns(columns...)).
//		Exec(ctx)
func (oic *OrderInfoCreate) OnConflictColumns(columns ...string) *OrderInfoUpsertOne {
	oic.conflict = append(oic.conflict, sql.ConflictColumns(columns...))
	return &OrderInfoUpsertOne{
		create: oic,
	}
}

type (
	// OrderInfoUpsertOne is the builder for "upsert"-ing
	//  one OrderInfo node.
	OrderInfoUpsertOne struct {
		create *OrderInfoCreate
	}

	// OrderInfoUpsert is the "OnConflict" setter.
	OrderInfoUpsert struct {
		*sql.UpdateSet
	}
)

// SetOrderTitle sets the "order_title" field.
func (u *OrderInfoUpsert) SetOrderTitle(v string) *OrderInfoUpsert {
	u.Set(orderinfo.FieldOrderTitle, v)
	return u
}

// UpdateOrderTitle sets the "order_title" field to the value that was provided on create.
func (u *OrderInfoUpsert) UpdateOrderTitle() *OrderInfoUpsert {
	u.SetExcluded(orderinfo.FieldOrderTitle)
	return u
}

// SetOrderType sets the "order_type" field.
func (u *OrderInfoUpsert) SetOrderType(v string) *OrderInfoUpsert {
	u.Set(orderinfo.FieldOrderType, v)
	return u
}

// UpdateOrderType sets the "order_type" field to the value that was provided on create.
func (u *OrderInfoUpsert) UpdateOrderType() *OrderInfoUpsert {
	u.SetExcluded(orderinfo.FieldOrderType)
	return u
}

// SetOrderDescription sets the "order_description" field.
func (u *OrderInfoUpsert) SetOrderDescription(v string) *OrderInfoUpsert {
	u.Set(orderinfo.FieldOrderDescription, v)
	return u
}

// UpdateOrderDescription sets the "order_description" field to the value that was provided on create.
func (u *OrderInfoUpsert) UpdateOrderDescription() *OrderInfoUpsert {
	u.SetExcluded(orderinfo.FieldOrderDescription)
	return u
}

// SetOrderConfirmationNumber sets the "order_confirmation_number" field.
func (u *OrderInfoUpsert) SetOrderConfirmationNumber(v string) *OrderInfoUpsert {
	u.Set(orderinfo.FieldOrderConfirmationNumber, v)
	return u
}

// UpdateOrderConfirmationNumber sets the "order_confirmation_number" field to the value that was provided on create.
func (u *OrderInfoUpsert) UpdateOrderConfirmationNumber() *OrderInfoUpsert {
	u.SetExcluded(orderinfo.FieldOrderConfirmationNumber)
	return u
}

// SetClinicID sets the "clinic_id" field.
func (u *OrderInfoUpsert) SetClinicID(v int) *OrderInfoUpsert {
	u.Set(orderinfo.FieldClinicID, v)
	return u
}

// UpdateClinicID sets the "clinic_id" field to the value that was provided on create.
func (u *OrderInfoUpsert) UpdateClinicID() *OrderInfoUpsert {
	u.SetExcluded(orderinfo.FieldClinicID)
	return u
}

// ClearClinicID clears the value of the "clinic_id" field.
func (u *OrderInfoUpsert) ClearClinicID() *OrderInfoUpsert {
	u.SetNull(orderinfo.FieldClinicID)
	return u
}

// SetCustomerID sets the "customer_id" field.
func (u *OrderInfoUpsert) SetCustomerID(v int) *OrderInfoUpsert {
	u.Set(orderinfo.FieldCustomerID, v)
	return u
}

// UpdateCustomerID sets the "customer_id" field to the value that was provided on create.
func (u *OrderInfoUpsert) UpdateCustomerID() *OrderInfoUpsert {
	u.SetExcluded(orderinfo.FieldCustomerID)
	return u
}

// ClearCustomerID clears the value of the "customer_id" field.
func (u *OrderInfoUpsert) ClearCustomerID() *OrderInfoUpsert {
	u.SetNull(orderinfo.FieldCustomerID)
	return u
}

// SetOrderCreateTime sets the "order_create_time" field.
func (u *OrderInfoUpsert) SetOrderCreateTime(v time.Time) *OrderInfoUpsert {
	u.Set(orderinfo.FieldOrderCreateTime, v)
	return u
}

// UpdateOrderCreateTime sets the "order_create_time" field to the value that was provided on create.
func (u *OrderInfoUpsert) UpdateOrderCreateTime() *OrderInfoUpsert {
	u.SetExcluded(orderinfo.FieldOrderCreateTime)
	return u
}

// SetOrderServiceTime sets the "order_service_time" field.
func (u *OrderInfoUpsert) SetOrderServiceTime(v time.Time) *OrderInfoUpsert {
	u.Set(orderinfo.FieldOrderServiceTime, v)
	return u
}

// UpdateOrderServiceTime sets the "order_service_time" field to the value that was provided on create.
func (u *OrderInfoUpsert) UpdateOrderServiceTime() *OrderInfoUpsert {
	u.SetExcluded(orderinfo.FieldOrderServiceTime)
	return u
}

// ClearOrderServiceTime clears the value of the "order_service_time" field.
func (u *OrderInfoUpsert) ClearOrderServiceTime() *OrderInfoUpsert {
	u.SetNull(orderinfo.FieldOrderServiceTime)
	return u
}

// SetOrderProcessTime sets the "order_process_time" field.
func (u *OrderInfoUpsert) SetOrderProcessTime(v time.Time) *OrderInfoUpsert {
	u.Set(orderinfo.FieldOrderProcessTime, v)
	return u
}

// UpdateOrderProcessTime sets the "order_process_time" field to the value that was provided on create.
func (u *OrderInfoUpsert) UpdateOrderProcessTime() *OrderInfoUpsert {
	u.SetExcluded(orderinfo.FieldOrderProcessTime)
	return u
}

// ClearOrderProcessTime clears the value of the "order_process_time" field.
func (u *OrderInfoUpsert) ClearOrderProcessTime() *OrderInfoUpsert {
	u.SetNull(orderinfo.FieldOrderProcessTime)
	return u
}

// SetOrderRedrawTime sets the "order_redraw_time" field.
func (u *OrderInfoUpsert) SetOrderRedrawTime(v time.Time) *OrderInfoUpsert {
	u.Set(orderinfo.FieldOrderRedrawTime, v)
	return u
}

// UpdateOrderRedrawTime sets the "order_redraw_time" field to the value that was provided on create.
func (u *OrderInfoUpsert) UpdateOrderRedrawTime() *OrderInfoUpsert {
	u.SetExcluded(orderinfo.FieldOrderRedrawTime)
	return u
}

// ClearOrderRedrawTime clears the value of the "order_redraw_time" field.
func (u *OrderInfoUpsert) ClearOrderRedrawTime() *OrderInfoUpsert {
	u.SetNull(orderinfo.FieldOrderRedrawTime)
	return u
}

// SetOrderCancelTime sets the "order_cancel_time" field.
func (u *OrderInfoUpsert) SetOrderCancelTime(v time.Time) *OrderInfoUpsert {
	u.Set(orderinfo.FieldOrderCancelTime, v)
	return u
}

// UpdateOrderCancelTime sets the "order_cancel_time" field to the value that was provided on create.
func (u *OrderInfoUpsert) UpdateOrderCancelTime() *OrderInfoUpsert {
	u.SetExcluded(orderinfo.FieldOrderCancelTime)
	return u
}

// ClearOrderCancelTime clears the value of the "order_cancel_time" field.
func (u *OrderInfoUpsert) ClearOrderCancelTime() *OrderInfoUpsert {
	u.SetNull(orderinfo.FieldOrderCancelTime)
	return u
}

// SetIsActive sets the "isActive" field.
func (u *OrderInfoUpsert) SetIsActive(v bool) *OrderInfoUpsert {
	u.Set(orderinfo.FieldIsActive, v)
	return u
}

// UpdateIsActive sets the "isActive" field to the value that was provided on create.
func (u *OrderInfoUpsert) UpdateIsActive() *OrderInfoUpsert {
	u.SetExcluded(orderinfo.FieldIsActive)
	return u
}

// SetHasOrderSetting sets the "has_order_setting" field.
func (u *OrderInfoUpsert) SetHasOrderSetting(v bool) *OrderInfoUpsert {
	u.Set(orderinfo.FieldHasOrderSetting, v)
	return u
}

// UpdateHasOrderSetting sets the "has_order_setting" field to the value that was provided on create.
func (u *OrderInfoUpsert) UpdateHasOrderSetting() *OrderInfoUpsert {
	u.SetExcluded(orderinfo.FieldHasOrderSetting)
	return u
}

// SetOrderCanceled sets the "order_canceled" field.
func (u *OrderInfoUpsert) SetOrderCanceled(v bool) *OrderInfoUpsert {
	u.Set(orderinfo.FieldOrderCanceled, v)
	return u
}

// UpdateOrderCanceled sets the "order_canceled" field to the value that was provided on create.
func (u *OrderInfoUpsert) UpdateOrderCanceled() *OrderInfoUpsert {
	u.SetExcluded(orderinfo.FieldOrderCanceled)
	return u
}

// SetOrderFlagged sets the "order_flagged" field.
func (u *OrderInfoUpsert) SetOrderFlagged(v bool) *OrderInfoUpsert {
	u.Set(orderinfo.FieldOrderFlagged, v)
	return u
}

// UpdateOrderFlagged sets the "order_flagged" field to the value that was provided on create.
func (u *OrderInfoUpsert) UpdateOrderFlagged() *OrderInfoUpsert {
	u.SetExcluded(orderinfo.FieldOrderFlagged)
	return u
}

// SetOrderStatus sets the "order_status" field.
func (u *OrderInfoUpsert) SetOrderStatus(v string) *OrderInfoUpsert {
	u.Set(orderinfo.FieldOrderStatus, v)
	return u
}

// UpdateOrderStatus sets the "order_status" field to the value that was provided on create.
func (u *OrderInfoUpsert) UpdateOrderStatus() *OrderInfoUpsert {
	u.SetExcluded(orderinfo.FieldOrderStatus)
	return u
}

// ClearOrderStatus clears the value of the "order_status" field.
func (u *OrderInfoUpsert) ClearOrderStatus() *OrderInfoUpsert {
	u.SetNull(orderinfo.FieldOrderStatus)
	return u
}

// SetOrderMajorStatus sets the "order_major_status" field.
func (u *OrderInfoUpsert) SetOrderMajorStatus(v string) *OrderInfoUpsert {
	u.Set(orderinfo.FieldOrderMajorStatus, v)
	return u
}

// UpdateOrderMajorStatus sets the "order_major_status" field to the value that was provided on create.
func (u *OrderInfoUpsert) UpdateOrderMajorStatus() *OrderInfoUpsert {
	u.SetExcluded(orderinfo.FieldOrderMajorStatus)
	return u
}

// ClearOrderMajorStatus clears the value of the "order_major_status" field.
func (u *OrderInfoUpsert) ClearOrderMajorStatus() *OrderInfoUpsert {
	u.SetNull(orderinfo.FieldOrderMajorStatus)
	return u
}

// SetOrderKitStatus sets the "order_kit_status" field.
func (u *OrderInfoUpsert) SetOrderKitStatus(v string) *OrderInfoUpsert {
	u.Set(orderinfo.FieldOrderKitStatus, v)
	return u
}

// UpdateOrderKitStatus sets the "order_kit_status" field to the value that was provided on create.
func (u *OrderInfoUpsert) UpdateOrderKitStatus() *OrderInfoUpsert {
	u.SetExcluded(orderinfo.FieldOrderKitStatus)
	return u
}

// ClearOrderKitStatus clears the value of the "order_kit_status" field.
func (u *OrderInfoUpsert) ClearOrderKitStatus() *OrderInfoUpsert {
	u.SetNull(orderinfo.FieldOrderKitStatus)
	return u
}

// SetOrderReportStatus sets the "order_report_status" field.
func (u *OrderInfoUpsert) SetOrderReportStatus(v string) *OrderInfoUpsert {
	u.Set(orderinfo.FieldOrderReportStatus, v)
	return u
}

// UpdateOrderReportStatus sets the "order_report_status" field to the value that was provided on create.
func (u *OrderInfoUpsert) UpdateOrderReportStatus() *OrderInfoUpsert {
	u.SetExcluded(orderinfo.FieldOrderReportStatus)
	return u
}

// ClearOrderReportStatus clears the value of the "order_report_status" field.
func (u *OrderInfoUpsert) ClearOrderReportStatus() *OrderInfoUpsert {
	u.SetNull(orderinfo.FieldOrderReportStatus)
	return u
}

// SetOrderTnpIssueStatus sets the "order_tnp_issue_status" field.
func (u *OrderInfoUpsert) SetOrderTnpIssueStatus(v string) *OrderInfoUpsert {
	u.Set(orderinfo.FieldOrderTnpIssueStatus, v)
	return u
}

// UpdateOrderTnpIssueStatus sets the "order_tnp_issue_status" field to the value that was provided on create.
func (u *OrderInfoUpsert) UpdateOrderTnpIssueStatus() *OrderInfoUpsert {
	u.SetExcluded(orderinfo.FieldOrderTnpIssueStatus)
	return u
}

// ClearOrderTnpIssueStatus clears the value of the "order_tnp_issue_status" field.
func (u *OrderInfoUpsert) ClearOrderTnpIssueStatus() *OrderInfoUpsert {
	u.SetNull(orderinfo.FieldOrderTnpIssueStatus)
	return u
}

// SetOrderBillingIssueStatus sets the "order_billing_issue_status" field.
func (u *OrderInfoUpsert) SetOrderBillingIssueStatus(v string) *OrderInfoUpsert {
	u.Set(orderinfo.FieldOrderBillingIssueStatus, v)
	return u
}

// UpdateOrderBillingIssueStatus sets the "order_billing_issue_status" field to the value that was provided on create.
func (u *OrderInfoUpsert) UpdateOrderBillingIssueStatus() *OrderInfoUpsert {
	u.SetExcluded(orderinfo.FieldOrderBillingIssueStatus)
	return u
}

// ClearOrderBillingIssueStatus clears the value of the "order_billing_issue_status" field.
func (u *OrderInfoUpsert) ClearOrderBillingIssueStatus() *OrderInfoUpsert {
	u.SetNull(orderinfo.FieldOrderBillingIssueStatus)
	return u
}

// SetOrderMissingInfoIssueStatus sets the "order_missing_info_issue_status" field.
func (u *OrderInfoUpsert) SetOrderMissingInfoIssueStatus(v string) *OrderInfoUpsert {
	u.Set(orderinfo.FieldOrderMissingInfoIssueStatus, v)
	return u
}

// UpdateOrderMissingInfoIssueStatus sets the "order_missing_info_issue_status" field to the value that was provided on create.
func (u *OrderInfoUpsert) UpdateOrderMissingInfoIssueStatus() *OrderInfoUpsert {
	u.SetExcluded(orderinfo.FieldOrderMissingInfoIssueStatus)
	return u
}

// ClearOrderMissingInfoIssueStatus clears the value of the "order_missing_info_issue_status" field.
func (u *OrderInfoUpsert) ClearOrderMissingInfoIssueStatus() *OrderInfoUpsert {
	u.SetNull(orderinfo.FieldOrderMissingInfoIssueStatus)
	return u
}

// SetOrderIncompleteQuestionnaireIssueStatus sets the "order_incomplete_questionnaire_issue_status" field.
func (u *OrderInfoUpsert) SetOrderIncompleteQuestionnaireIssueStatus(v string) *OrderInfoUpsert {
	u.Set(orderinfo.FieldOrderIncompleteQuestionnaireIssueStatus, v)
	return u
}

// UpdateOrderIncompleteQuestionnaireIssueStatus sets the "order_incomplete_questionnaire_issue_status" field to the value that was provided on create.
func (u *OrderInfoUpsert) UpdateOrderIncompleteQuestionnaireIssueStatus() *OrderInfoUpsert {
	u.SetExcluded(orderinfo.FieldOrderIncompleteQuestionnaireIssueStatus)
	return u
}

// ClearOrderIncompleteQuestionnaireIssueStatus clears the value of the "order_incomplete_questionnaire_issue_status" field.
func (u *OrderInfoUpsert) ClearOrderIncompleteQuestionnaireIssueStatus() *OrderInfoUpsert {
	u.SetNull(orderinfo.FieldOrderIncompleteQuestionnaireIssueStatus)
	return u
}

// SetOrderNyWaiveFormIssueStatus sets the "order_ny_waive_form_issue_status" field.
func (u *OrderInfoUpsert) SetOrderNyWaiveFormIssueStatus(v string) *OrderInfoUpsert {
	u.Set(orderinfo.FieldOrderNyWaiveFormIssueStatus, v)
	return u
}

// UpdateOrderNyWaiveFormIssueStatus sets the "order_ny_waive_form_issue_status" field to the value that was provided on create.
func (u *OrderInfoUpsert) UpdateOrderNyWaiveFormIssueStatus() *OrderInfoUpsert {
	u.SetExcluded(orderinfo.FieldOrderNyWaiveFormIssueStatus)
	return u
}

// ClearOrderNyWaiveFormIssueStatus clears the value of the "order_ny_waive_form_issue_status" field.
func (u *OrderInfoUpsert) ClearOrderNyWaiveFormIssueStatus() *OrderInfoUpsert {
	u.SetNull(orderinfo.FieldOrderNyWaiveFormIssueStatus)
	return u
}

// SetOrderLabIssueStatus sets the "order_lab_issue_status" field.
func (u *OrderInfoUpsert) SetOrderLabIssueStatus(v string) *OrderInfoUpsert {
	u.Set(orderinfo.FieldOrderLabIssueStatus, v)
	return u
}

// UpdateOrderLabIssueStatus sets the "order_lab_issue_status" field to the value that was provided on create.
func (u *OrderInfoUpsert) UpdateOrderLabIssueStatus() *OrderInfoUpsert {
	u.SetExcluded(orderinfo.FieldOrderLabIssueStatus)
	return u
}

// ClearOrderLabIssueStatus clears the value of the "order_lab_issue_status" field.
func (u *OrderInfoUpsert) ClearOrderLabIssueStatus() *OrderInfoUpsert {
	u.SetNull(orderinfo.FieldOrderLabIssueStatus)
	return u
}

// SetOrderProcessingTime sets the "order_processing_time" field.
func (u *OrderInfoUpsert) SetOrderProcessingTime(v time.Time) *OrderInfoUpsert {
	u.Set(orderinfo.FieldOrderProcessingTime, v)
	return u
}

// UpdateOrderProcessingTime sets the "order_processing_time" field to the value that was provided on create.
func (u *OrderInfoUpsert) UpdateOrderProcessingTime() *OrderInfoUpsert {
	u.SetExcluded(orderinfo.FieldOrderProcessingTime)
	return u
}

// ClearOrderProcessingTime clears the value of the "order_processing_time" field.
func (u *OrderInfoUpsert) ClearOrderProcessingTime() *OrderInfoUpsert {
	u.SetNull(orderinfo.FieldOrderProcessingTime)
	return u
}

// SetOrderMinorStatus sets the "order_minor_status" field.
func (u *OrderInfoUpsert) SetOrderMinorStatus(v string) *OrderInfoUpsert {
	u.Set(orderinfo.FieldOrderMinorStatus, v)
	return u
}

// UpdateOrderMinorStatus sets the "order_minor_status" field to the value that was provided on create.
func (u *OrderInfoUpsert) UpdateOrderMinorStatus() *OrderInfoUpsert {
	u.SetExcluded(orderinfo.FieldOrderMinorStatus)
	return u
}

// ClearOrderMinorStatus clears the value of the "order_minor_status" field.
func (u *OrderInfoUpsert) ClearOrderMinorStatus() *OrderInfoUpsert {
	u.SetNull(orderinfo.FieldOrderMinorStatus)
	return u
}

// SetPatientFirstName sets the "patient_first_name" field.
func (u *OrderInfoUpsert) SetPatientFirstName(v string) *OrderInfoUpsert {
	u.Set(orderinfo.FieldPatientFirstName, v)
	return u
}

// UpdatePatientFirstName sets the "patient_first_name" field to the value that was provided on create.
func (u *OrderInfoUpsert) UpdatePatientFirstName() *OrderInfoUpsert {
	u.SetExcluded(orderinfo.FieldPatientFirstName)
	return u
}

// ClearPatientFirstName clears the value of the "patient_first_name" field.
func (u *OrderInfoUpsert) ClearPatientFirstName() *OrderInfoUpsert {
	u.SetNull(orderinfo.FieldPatientFirstName)
	return u
}

// SetPatientLastName sets the "patient_last_name" field.
func (u *OrderInfoUpsert) SetPatientLastName(v string) *OrderInfoUpsert {
	u.Set(orderinfo.FieldPatientLastName, v)
	return u
}

// UpdatePatientLastName sets the "patient_last_name" field to the value that was provided on create.
func (u *OrderInfoUpsert) UpdatePatientLastName() *OrderInfoUpsert {
	u.SetExcluded(orderinfo.FieldPatientLastName)
	return u
}

// ClearPatientLastName clears the value of the "patient_last_name" field.
func (u *OrderInfoUpsert) ClearPatientLastName() *OrderInfoUpsert {
	u.SetNull(orderinfo.FieldPatientLastName)
	return u
}

// SetOrderSource sets the "order_source" field.
func (u *OrderInfoUpsert) SetOrderSource(v string) *OrderInfoUpsert {
	u.Set(orderinfo.FieldOrderSource, v)
	return u
}

// UpdateOrderSource sets the "order_source" field to the value that was provided on create.
func (u *OrderInfoUpsert) UpdateOrderSource() *OrderInfoUpsert {
	u.SetExcluded(orderinfo.FieldOrderSource)
	return u
}

// ClearOrderSource clears the value of the "order_source" field.
func (u *OrderInfoUpsert) ClearOrderSource() *OrderInfoUpsert {
	u.SetNull(orderinfo.FieldOrderSource)
	return u
}

// SetOrderChargeMethod sets the "order_charge_method" field.
func (u *OrderInfoUpsert) SetOrderChargeMethod(v string) *OrderInfoUpsert {
	u.Set(orderinfo.FieldOrderChargeMethod, v)
	return u
}

// UpdateOrderChargeMethod sets the "order_charge_method" field to the value that was provided on create.
func (u *OrderInfoUpsert) UpdateOrderChargeMethod() *OrderInfoUpsert {
	u.SetExcluded(orderinfo.FieldOrderChargeMethod)
	return u
}

// ClearOrderChargeMethod clears the value of the "order_charge_method" field.
func (u *OrderInfoUpsert) ClearOrderChargeMethod() *OrderInfoUpsert {
	u.SetNull(orderinfo.FieldOrderChargeMethod)
	return u
}

// SetOrderPlacingType sets the "order_placing_type" field.
func (u *OrderInfoUpsert) SetOrderPlacingType(v string) *OrderInfoUpsert {
	u.Set(orderinfo.FieldOrderPlacingType, v)
	return u
}

// UpdateOrderPlacingType sets the "order_placing_type" field to the value that was provided on create.
func (u *OrderInfoUpsert) UpdateOrderPlacingType() *OrderInfoUpsert {
	u.SetExcluded(orderinfo.FieldOrderPlacingType)
	return u
}

// ClearOrderPlacingType clears the value of the "order_placing_type" field.
func (u *OrderInfoUpsert) ClearOrderPlacingType() *OrderInfoUpsert {
	u.SetNull(orderinfo.FieldOrderPlacingType)
	return u
}

// SetBillingOrderID sets the "billing_order_id" field.
func (u *OrderInfoUpsert) SetBillingOrderID(v string) *OrderInfoUpsert {
	u.Set(orderinfo.FieldBillingOrderID, v)
	return u
}

// UpdateBillingOrderID sets the "billing_order_id" field to the value that was provided on create.
func (u *OrderInfoUpsert) UpdateBillingOrderID() *OrderInfoUpsert {
	u.SetExcluded(orderinfo.FieldBillingOrderID)
	return u
}

// ClearBillingOrderID clears the value of the "billing_order_id" field.
func (u *OrderInfoUpsert) ClearBillingOrderID() *OrderInfoUpsert {
	u.SetNull(orderinfo.FieldBillingOrderID)
	return u
}

// SetContactID sets the "contact_id" field.
func (u *OrderInfoUpsert) SetContactID(v int) *OrderInfoUpsert {
	u.Set(orderinfo.FieldContactID, v)
	return u
}

// UpdateContactID sets the "contact_id" field to the value that was provided on create.
func (u *OrderInfoUpsert) UpdateContactID() *OrderInfoUpsert {
	u.SetExcluded(orderinfo.FieldContactID)
	return u
}

// ClearContactID clears the value of the "contact_id" field.
func (u *OrderInfoUpsert) ClearContactID() *OrderInfoUpsert {
	u.SetNull(orderinfo.FieldContactID)
	return u
}

// SetAddressID sets the "address_id" field.
func (u *OrderInfoUpsert) SetAddressID(v int) *OrderInfoUpsert {
	u.Set(orderinfo.FieldAddressID, v)
	return u
}

// UpdateAddressID sets the "address_id" field to the value that was provided on create.
func (u *OrderInfoUpsert) UpdateAddressID() *OrderInfoUpsert {
	u.SetExcluded(orderinfo.FieldAddressID)
	return u
}

// ClearAddressID clears the value of the "address_id" field.
func (u *OrderInfoUpsert) ClearAddressID() *OrderInfoUpsert {
	u.SetNull(orderinfo.FieldAddressID)
	return u
}

// UpdateNewValues updates the mutable fields using the new values that were set on create except the ID field.
// Using this option is equivalent to using:
//
//	client.OrderInfo.Create().
//		OnConflict(
//			sql.ResolveWithNewValues(),
//			sql.ResolveWith(func(u *sql.UpdateSet) {
//				u.SetIgnore(orderinfo.FieldID)
//			}),
//		).
//		Exec(ctx)
func (u *OrderInfoUpsertOne) UpdateNewValues() *OrderInfoUpsertOne {
	u.create.conflict = append(u.create.conflict, sql.ResolveWithNewValues())
	u.create.conflict = append(u.create.conflict, sql.ResolveWith(func(s *sql.UpdateSet) {
		if _, exists := u.create.mutation.ID(); exists {
			s.SetIgnore(orderinfo.FieldID)
		}
	}))
	return u
}

// Ignore sets each column to itself in case of conflict.
// Using this option is equivalent to using:
//
//	client.OrderInfo.Create().
//	    OnConflict(sql.ResolveWithIgnore()).
//	    Exec(ctx)
func (u *OrderInfoUpsertOne) Ignore() *OrderInfoUpsertOne {
	u.create.conflict = append(u.create.conflict, sql.ResolveWithIgnore())
	return u
}

// DoNothing configures the conflict_action to `DO NOTHING`.
// Supported only by SQLite and PostgreSQL.
func (u *OrderInfoUpsertOne) DoNothing() *OrderInfoUpsertOne {
	u.create.conflict = append(u.create.conflict, sql.DoNothing())
	return u
}

// Update allows overriding fields `UPDATE` values. See the OrderInfoCreate.OnConflict
// documentation for more info.
func (u *OrderInfoUpsertOne) Update(set func(*OrderInfoUpsert)) *OrderInfoUpsertOne {
	u.create.conflict = append(u.create.conflict, sql.ResolveWith(func(update *sql.UpdateSet) {
		set(&OrderInfoUpsert{UpdateSet: update})
	}))
	return u
}

// SetOrderTitle sets the "order_title" field.
func (u *OrderInfoUpsertOne) SetOrderTitle(v string) *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderTitle(v)
	})
}

// UpdateOrderTitle sets the "order_title" field to the value that was provided on create.
func (u *OrderInfoUpsertOne) UpdateOrderTitle() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderTitle()
	})
}

// SetOrderType sets the "order_type" field.
func (u *OrderInfoUpsertOne) SetOrderType(v string) *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderType(v)
	})
}

// UpdateOrderType sets the "order_type" field to the value that was provided on create.
func (u *OrderInfoUpsertOne) UpdateOrderType() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderType()
	})
}

// SetOrderDescription sets the "order_description" field.
func (u *OrderInfoUpsertOne) SetOrderDescription(v string) *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderDescription(v)
	})
}

// UpdateOrderDescription sets the "order_description" field to the value that was provided on create.
func (u *OrderInfoUpsertOne) UpdateOrderDescription() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderDescription()
	})
}

// SetOrderConfirmationNumber sets the "order_confirmation_number" field.
func (u *OrderInfoUpsertOne) SetOrderConfirmationNumber(v string) *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderConfirmationNumber(v)
	})
}

// UpdateOrderConfirmationNumber sets the "order_confirmation_number" field to the value that was provided on create.
func (u *OrderInfoUpsertOne) UpdateOrderConfirmationNumber() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderConfirmationNumber()
	})
}

// SetClinicID sets the "clinic_id" field.
func (u *OrderInfoUpsertOne) SetClinicID(v int) *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetClinicID(v)
	})
}

// UpdateClinicID sets the "clinic_id" field to the value that was provided on create.
func (u *OrderInfoUpsertOne) UpdateClinicID() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateClinicID()
	})
}

// ClearClinicID clears the value of the "clinic_id" field.
func (u *OrderInfoUpsertOne) ClearClinicID() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearClinicID()
	})
}

// SetCustomerID sets the "customer_id" field.
func (u *OrderInfoUpsertOne) SetCustomerID(v int) *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetCustomerID(v)
	})
}

// UpdateCustomerID sets the "customer_id" field to the value that was provided on create.
func (u *OrderInfoUpsertOne) UpdateCustomerID() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateCustomerID()
	})
}

// ClearCustomerID clears the value of the "customer_id" field.
func (u *OrderInfoUpsertOne) ClearCustomerID() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearCustomerID()
	})
}

// SetOrderCreateTime sets the "order_create_time" field.
func (u *OrderInfoUpsertOne) SetOrderCreateTime(v time.Time) *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderCreateTime(v)
	})
}

// UpdateOrderCreateTime sets the "order_create_time" field to the value that was provided on create.
func (u *OrderInfoUpsertOne) UpdateOrderCreateTime() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderCreateTime()
	})
}

// SetOrderServiceTime sets the "order_service_time" field.
func (u *OrderInfoUpsertOne) SetOrderServiceTime(v time.Time) *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderServiceTime(v)
	})
}

// UpdateOrderServiceTime sets the "order_service_time" field to the value that was provided on create.
func (u *OrderInfoUpsertOne) UpdateOrderServiceTime() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderServiceTime()
	})
}

// ClearOrderServiceTime clears the value of the "order_service_time" field.
func (u *OrderInfoUpsertOne) ClearOrderServiceTime() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearOrderServiceTime()
	})
}

// SetOrderProcessTime sets the "order_process_time" field.
func (u *OrderInfoUpsertOne) SetOrderProcessTime(v time.Time) *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderProcessTime(v)
	})
}

// UpdateOrderProcessTime sets the "order_process_time" field to the value that was provided on create.
func (u *OrderInfoUpsertOne) UpdateOrderProcessTime() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderProcessTime()
	})
}

// ClearOrderProcessTime clears the value of the "order_process_time" field.
func (u *OrderInfoUpsertOne) ClearOrderProcessTime() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearOrderProcessTime()
	})
}

// SetOrderRedrawTime sets the "order_redraw_time" field.
func (u *OrderInfoUpsertOne) SetOrderRedrawTime(v time.Time) *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderRedrawTime(v)
	})
}

// UpdateOrderRedrawTime sets the "order_redraw_time" field to the value that was provided on create.
func (u *OrderInfoUpsertOne) UpdateOrderRedrawTime() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderRedrawTime()
	})
}

// ClearOrderRedrawTime clears the value of the "order_redraw_time" field.
func (u *OrderInfoUpsertOne) ClearOrderRedrawTime() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearOrderRedrawTime()
	})
}

// SetOrderCancelTime sets the "order_cancel_time" field.
func (u *OrderInfoUpsertOne) SetOrderCancelTime(v time.Time) *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderCancelTime(v)
	})
}

// UpdateOrderCancelTime sets the "order_cancel_time" field to the value that was provided on create.
func (u *OrderInfoUpsertOne) UpdateOrderCancelTime() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderCancelTime()
	})
}

// ClearOrderCancelTime clears the value of the "order_cancel_time" field.
func (u *OrderInfoUpsertOne) ClearOrderCancelTime() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearOrderCancelTime()
	})
}

// SetIsActive sets the "isActive" field.
func (u *OrderInfoUpsertOne) SetIsActive(v bool) *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetIsActive(v)
	})
}

// UpdateIsActive sets the "isActive" field to the value that was provided on create.
func (u *OrderInfoUpsertOne) UpdateIsActive() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateIsActive()
	})
}

// SetHasOrderSetting sets the "has_order_setting" field.
func (u *OrderInfoUpsertOne) SetHasOrderSetting(v bool) *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetHasOrderSetting(v)
	})
}

// UpdateHasOrderSetting sets the "has_order_setting" field to the value that was provided on create.
func (u *OrderInfoUpsertOne) UpdateHasOrderSetting() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateHasOrderSetting()
	})
}

// SetOrderCanceled sets the "order_canceled" field.
func (u *OrderInfoUpsertOne) SetOrderCanceled(v bool) *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderCanceled(v)
	})
}

// UpdateOrderCanceled sets the "order_canceled" field to the value that was provided on create.
func (u *OrderInfoUpsertOne) UpdateOrderCanceled() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderCanceled()
	})
}

// SetOrderFlagged sets the "order_flagged" field.
func (u *OrderInfoUpsertOne) SetOrderFlagged(v bool) *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderFlagged(v)
	})
}

// UpdateOrderFlagged sets the "order_flagged" field to the value that was provided on create.
func (u *OrderInfoUpsertOne) UpdateOrderFlagged() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderFlagged()
	})
}

// SetOrderStatus sets the "order_status" field.
func (u *OrderInfoUpsertOne) SetOrderStatus(v string) *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderStatus(v)
	})
}

// UpdateOrderStatus sets the "order_status" field to the value that was provided on create.
func (u *OrderInfoUpsertOne) UpdateOrderStatus() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderStatus()
	})
}

// ClearOrderStatus clears the value of the "order_status" field.
func (u *OrderInfoUpsertOne) ClearOrderStatus() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearOrderStatus()
	})
}

// SetOrderMajorStatus sets the "order_major_status" field.
func (u *OrderInfoUpsertOne) SetOrderMajorStatus(v string) *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderMajorStatus(v)
	})
}

// UpdateOrderMajorStatus sets the "order_major_status" field to the value that was provided on create.
func (u *OrderInfoUpsertOne) UpdateOrderMajorStatus() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderMajorStatus()
	})
}

// ClearOrderMajorStatus clears the value of the "order_major_status" field.
func (u *OrderInfoUpsertOne) ClearOrderMajorStatus() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearOrderMajorStatus()
	})
}

// SetOrderKitStatus sets the "order_kit_status" field.
func (u *OrderInfoUpsertOne) SetOrderKitStatus(v string) *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderKitStatus(v)
	})
}

// UpdateOrderKitStatus sets the "order_kit_status" field to the value that was provided on create.
func (u *OrderInfoUpsertOne) UpdateOrderKitStatus() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderKitStatus()
	})
}

// ClearOrderKitStatus clears the value of the "order_kit_status" field.
func (u *OrderInfoUpsertOne) ClearOrderKitStatus() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearOrderKitStatus()
	})
}

// SetOrderReportStatus sets the "order_report_status" field.
func (u *OrderInfoUpsertOne) SetOrderReportStatus(v string) *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderReportStatus(v)
	})
}

// UpdateOrderReportStatus sets the "order_report_status" field to the value that was provided on create.
func (u *OrderInfoUpsertOne) UpdateOrderReportStatus() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderReportStatus()
	})
}

// ClearOrderReportStatus clears the value of the "order_report_status" field.
func (u *OrderInfoUpsertOne) ClearOrderReportStatus() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearOrderReportStatus()
	})
}

// SetOrderTnpIssueStatus sets the "order_tnp_issue_status" field.
func (u *OrderInfoUpsertOne) SetOrderTnpIssueStatus(v string) *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderTnpIssueStatus(v)
	})
}

// UpdateOrderTnpIssueStatus sets the "order_tnp_issue_status" field to the value that was provided on create.
func (u *OrderInfoUpsertOne) UpdateOrderTnpIssueStatus() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderTnpIssueStatus()
	})
}

// ClearOrderTnpIssueStatus clears the value of the "order_tnp_issue_status" field.
func (u *OrderInfoUpsertOne) ClearOrderTnpIssueStatus() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearOrderTnpIssueStatus()
	})
}

// SetOrderBillingIssueStatus sets the "order_billing_issue_status" field.
func (u *OrderInfoUpsertOne) SetOrderBillingIssueStatus(v string) *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderBillingIssueStatus(v)
	})
}

// UpdateOrderBillingIssueStatus sets the "order_billing_issue_status" field to the value that was provided on create.
func (u *OrderInfoUpsertOne) UpdateOrderBillingIssueStatus() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderBillingIssueStatus()
	})
}

// ClearOrderBillingIssueStatus clears the value of the "order_billing_issue_status" field.
func (u *OrderInfoUpsertOne) ClearOrderBillingIssueStatus() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearOrderBillingIssueStatus()
	})
}

// SetOrderMissingInfoIssueStatus sets the "order_missing_info_issue_status" field.
func (u *OrderInfoUpsertOne) SetOrderMissingInfoIssueStatus(v string) *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderMissingInfoIssueStatus(v)
	})
}

// UpdateOrderMissingInfoIssueStatus sets the "order_missing_info_issue_status" field to the value that was provided on create.
func (u *OrderInfoUpsertOne) UpdateOrderMissingInfoIssueStatus() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderMissingInfoIssueStatus()
	})
}

// ClearOrderMissingInfoIssueStatus clears the value of the "order_missing_info_issue_status" field.
func (u *OrderInfoUpsertOne) ClearOrderMissingInfoIssueStatus() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearOrderMissingInfoIssueStatus()
	})
}

// SetOrderIncompleteQuestionnaireIssueStatus sets the "order_incomplete_questionnaire_issue_status" field.
func (u *OrderInfoUpsertOne) SetOrderIncompleteQuestionnaireIssueStatus(v string) *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderIncompleteQuestionnaireIssueStatus(v)
	})
}

// UpdateOrderIncompleteQuestionnaireIssueStatus sets the "order_incomplete_questionnaire_issue_status" field to the value that was provided on create.
func (u *OrderInfoUpsertOne) UpdateOrderIncompleteQuestionnaireIssueStatus() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderIncompleteQuestionnaireIssueStatus()
	})
}

// ClearOrderIncompleteQuestionnaireIssueStatus clears the value of the "order_incomplete_questionnaire_issue_status" field.
func (u *OrderInfoUpsertOne) ClearOrderIncompleteQuestionnaireIssueStatus() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearOrderIncompleteQuestionnaireIssueStatus()
	})
}

// SetOrderNyWaiveFormIssueStatus sets the "order_ny_waive_form_issue_status" field.
func (u *OrderInfoUpsertOne) SetOrderNyWaiveFormIssueStatus(v string) *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderNyWaiveFormIssueStatus(v)
	})
}

// UpdateOrderNyWaiveFormIssueStatus sets the "order_ny_waive_form_issue_status" field to the value that was provided on create.
func (u *OrderInfoUpsertOne) UpdateOrderNyWaiveFormIssueStatus() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderNyWaiveFormIssueStatus()
	})
}

// ClearOrderNyWaiveFormIssueStatus clears the value of the "order_ny_waive_form_issue_status" field.
func (u *OrderInfoUpsertOne) ClearOrderNyWaiveFormIssueStatus() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearOrderNyWaiveFormIssueStatus()
	})
}

// SetOrderLabIssueStatus sets the "order_lab_issue_status" field.
func (u *OrderInfoUpsertOne) SetOrderLabIssueStatus(v string) *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderLabIssueStatus(v)
	})
}

// UpdateOrderLabIssueStatus sets the "order_lab_issue_status" field to the value that was provided on create.
func (u *OrderInfoUpsertOne) UpdateOrderLabIssueStatus() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderLabIssueStatus()
	})
}

// ClearOrderLabIssueStatus clears the value of the "order_lab_issue_status" field.
func (u *OrderInfoUpsertOne) ClearOrderLabIssueStatus() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearOrderLabIssueStatus()
	})
}

// SetOrderProcessingTime sets the "order_processing_time" field.
func (u *OrderInfoUpsertOne) SetOrderProcessingTime(v time.Time) *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderProcessingTime(v)
	})
}

// UpdateOrderProcessingTime sets the "order_processing_time" field to the value that was provided on create.
func (u *OrderInfoUpsertOne) UpdateOrderProcessingTime() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderProcessingTime()
	})
}

// ClearOrderProcessingTime clears the value of the "order_processing_time" field.
func (u *OrderInfoUpsertOne) ClearOrderProcessingTime() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearOrderProcessingTime()
	})
}

// SetOrderMinorStatus sets the "order_minor_status" field.
func (u *OrderInfoUpsertOne) SetOrderMinorStatus(v string) *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderMinorStatus(v)
	})
}

// UpdateOrderMinorStatus sets the "order_minor_status" field to the value that was provided on create.
func (u *OrderInfoUpsertOne) UpdateOrderMinorStatus() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderMinorStatus()
	})
}

// ClearOrderMinorStatus clears the value of the "order_minor_status" field.
func (u *OrderInfoUpsertOne) ClearOrderMinorStatus() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearOrderMinorStatus()
	})
}

// SetPatientFirstName sets the "patient_first_name" field.
func (u *OrderInfoUpsertOne) SetPatientFirstName(v string) *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetPatientFirstName(v)
	})
}

// UpdatePatientFirstName sets the "patient_first_name" field to the value that was provided on create.
func (u *OrderInfoUpsertOne) UpdatePatientFirstName() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdatePatientFirstName()
	})
}

// ClearPatientFirstName clears the value of the "patient_first_name" field.
func (u *OrderInfoUpsertOne) ClearPatientFirstName() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearPatientFirstName()
	})
}

// SetPatientLastName sets the "patient_last_name" field.
func (u *OrderInfoUpsertOne) SetPatientLastName(v string) *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetPatientLastName(v)
	})
}

// UpdatePatientLastName sets the "patient_last_name" field to the value that was provided on create.
func (u *OrderInfoUpsertOne) UpdatePatientLastName() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdatePatientLastName()
	})
}

// ClearPatientLastName clears the value of the "patient_last_name" field.
func (u *OrderInfoUpsertOne) ClearPatientLastName() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearPatientLastName()
	})
}

// SetOrderSource sets the "order_source" field.
func (u *OrderInfoUpsertOne) SetOrderSource(v string) *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderSource(v)
	})
}

// UpdateOrderSource sets the "order_source" field to the value that was provided on create.
func (u *OrderInfoUpsertOne) UpdateOrderSource() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderSource()
	})
}

// ClearOrderSource clears the value of the "order_source" field.
func (u *OrderInfoUpsertOne) ClearOrderSource() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearOrderSource()
	})
}

// SetOrderChargeMethod sets the "order_charge_method" field.
func (u *OrderInfoUpsertOne) SetOrderChargeMethod(v string) *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderChargeMethod(v)
	})
}

// UpdateOrderChargeMethod sets the "order_charge_method" field to the value that was provided on create.
func (u *OrderInfoUpsertOne) UpdateOrderChargeMethod() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderChargeMethod()
	})
}

// ClearOrderChargeMethod clears the value of the "order_charge_method" field.
func (u *OrderInfoUpsertOne) ClearOrderChargeMethod() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearOrderChargeMethod()
	})
}

// SetOrderPlacingType sets the "order_placing_type" field.
func (u *OrderInfoUpsertOne) SetOrderPlacingType(v string) *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderPlacingType(v)
	})
}

// UpdateOrderPlacingType sets the "order_placing_type" field to the value that was provided on create.
func (u *OrderInfoUpsertOne) UpdateOrderPlacingType() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderPlacingType()
	})
}

// ClearOrderPlacingType clears the value of the "order_placing_type" field.
func (u *OrderInfoUpsertOne) ClearOrderPlacingType() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearOrderPlacingType()
	})
}

// SetBillingOrderID sets the "billing_order_id" field.
func (u *OrderInfoUpsertOne) SetBillingOrderID(v string) *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetBillingOrderID(v)
	})
}

// UpdateBillingOrderID sets the "billing_order_id" field to the value that was provided on create.
func (u *OrderInfoUpsertOne) UpdateBillingOrderID() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateBillingOrderID()
	})
}

// ClearBillingOrderID clears the value of the "billing_order_id" field.
func (u *OrderInfoUpsertOne) ClearBillingOrderID() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearBillingOrderID()
	})
}

// SetContactID sets the "contact_id" field.
func (u *OrderInfoUpsertOne) SetContactID(v int) *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetContactID(v)
	})
}

// UpdateContactID sets the "contact_id" field to the value that was provided on create.
func (u *OrderInfoUpsertOne) UpdateContactID() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateContactID()
	})
}

// ClearContactID clears the value of the "contact_id" field.
func (u *OrderInfoUpsertOne) ClearContactID() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearContactID()
	})
}

// SetAddressID sets the "address_id" field.
func (u *OrderInfoUpsertOne) SetAddressID(v int) *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetAddressID(v)
	})
}

// UpdateAddressID sets the "address_id" field to the value that was provided on create.
func (u *OrderInfoUpsertOne) UpdateAddressID() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateAddressID()
	})
}

// ClearAddressID clears the value of the "address_id" field.
func (u *OrderInfoUpsertOne) ClearAddressID() *OrderInfoUpsertOne {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearAddressID()
	})
}

// Exec executes the query.
func (u *OrderInfoUpsertOne) Exec(ctx context.Context) error {
	if len(u.create.conflict) == 0 {
		return errors.New("ent: missing options for OrderInfoCreate.OnConflict")
	}
	return u.create.Exec(ctx)
}

// ExecX is like Exec, but panics if an error occurs.
func (u *OrderInfoUpsertOne) ExecX(ctx context.Context) {
	if err := u.create.Exec(ctx); err != nil {
		panic(err)
	}
}

// Exec executes the UPSERT query and returns the inserted/updated ID.
func (u *OrderInfoUpsertOne) ID(ctx context.Context) (id int, err error) {
	node, err := u.create.Save(ctx)
	if err != nil {
		return id, err
	}
	return node.ID, nil
}

// IDX is like ID, but panics if an error occurs.
func (u *OrderInfoUpsertOne) IDX(ctx context.Context) int {
	id, err := u.ID(ctx)
	if err != nil {
		panic(err)
	}
	return id
}

// OrderInfoCreateBulk is the builder for creating many OrderInfo entities in bulk.
type OrderInfoCreateBulk struct {
	config
	err      error
	builders []*OrderInfoCreate
	conflict []sql.ConflictOption
}

// Save creates the OrderInfo entities in the database.
func (oicb *OrderInfoCreateBulk) Save(ctx context.Context) ([]*OrderInfo, error) {
	if oicb.err != nil {
		return nil, oicb.err
	}
	specs := make([]*sqlgraph.CreateSpec, len(oicb.builders))
	nodes := make([]*OrderInfo, len(oicb.builders))
	mutators := make([]Mutator, len(oicb.builders))
	for i := range oicb.builders {
		func(i int, root context.Context) {
			builder := oicb.builders[i]
			builder.defaults()
			var mut Mutator = MutateFunc(func(ctx context.Context, m Mutation) (Value, error) {
				mutation, ok := m.(*OrderInfoMutation)
				if !ok {
					return nil, fmt.Errorf("unexpected mutation type %T", m)
				}
				if err := builder.check(); err != nil {
					return nil, err
				}
				builder.mutation = mutation
				var err error
				nodes[i], specs[i] = builder.createSpec()
				if i < len(mutators)-1 {
					_, err = mutators[i+1].Mutate(root, oicb.builders[i+1].mutation)
				} else {
					spec := &sqlgraph.BatchCreateSpec{Nodes: specs}
					spec.OnConflict = oicb.conflict
					// Invoke the actual operation on the latest mutation in the chain.
					if err = sqlgraph.BatchCreate(ctx, oicb.driver, spec); err != nil {
						if sqlgraph.IsConstraintError(err) {
							err = &ConstraintError{msg: err.Error(), wrap: err}
						}
					}
				}
				if err != nil {
					return nil, err
				}
				mutation.id = &nodes[i].ID
				if specs[i].ID.Value != nil && nodes[i].ID == 0 {
					id := specs[i].ID.Value.(int64)
					nodes[i].ID = int(id)
				}
				mutation.done = true
				return nodes[i], nil
			})
			for i := len(builder.hooks) - 1; i >= 0; i-- {
				mut = builder.hooks[i](mut)
			}
			mutators[i] = mut
		}(i, ctx)
	}
	if len(mutators) > 0 {
		if _, err := mutators[0].Mutate(ctx, oicb.builders[0].mutation); err != nil {
			return nil, err
		}
	}
	return nodes, nil
}

// SaveX is like Save, but panics if an error occurs.
func (oicb *OrderInfoCreateBulk) SaveX(ctx context.Context) []*OrderInfo {
	v, err := oicb.Save(ctx)
	if err != nil {
		panic(err)
	}
	return v
}

// Exec executes the query.
func (oicb *OrderInfoCreateBulk) Exec(ctx context.Context) error {
	_, err := oicb.Save(ctx)
	return err
}

// ExecX is like Exec, but panics if an error occurs.
func (oicb *OrderInfoCreateBulk) ExecX(ctx context.Context) {
	if err := oicb.Exec(ctx); err != nil {
		panic(err)
	}
}

// OnConflict allows configuring the `ON CONFLICT` / `ON DUPLICATE KEY` clause
// of the `INSERT` statement. For example:
//
//	client.OrderInfo.CreateBulk(builders...).
//		OnConflict(
//			// Update the row with the new values
//			// the was proposed for insertion.
//			sql.ResolveWithNewValues(),
//		).
//		// Override some of the fields with custom
//		// update values.
//		Update(func(u *ent.OrderInfoUpsert) {
//			SetOrderTitle(v+v).
//		}).
//		Exec(ctx)
func (oicb *OrderInfoCreateBulk) OnConflict(opts ...sql.ConflictOption) *OrderInfoUpsertBulk {
	oicb.conflict = opts
	return &OrderInfoUpsertBulk{
		create: oicb,
	}
}

// OnConflictColumns calls `OnConflict` and configures the columns
// as conflict target. Using this option is equivalent to using:
//
//	client.OrderInfo.Create().
//		OnConflict(sql.ConflictColumns(columns...)).
//		Exec(ctx)
func (oicb *OrderInfoCreateBulk) OnConflictColumns(columns ...string) *OrderInfoUpsertBulk {
	oicb.conflict = append(oicb.conflict, sql.ConflictColumns(columns...))
	return &OrderInfoUpsertBulk{
		create: oicb,
	}
}

// OrderInfoUpsertBulk is the builder for "upsert"-ing
// a bulk of OrderInfo nodes.
type OrderInfoUpsertBulk struct {
	create *OrderInfoCreateBulk
}

// UpdateNewValues updates the mutable fields using the new values that
// were set on create. Using this option is equivalent to using:
//
//	client.OrderInfo.Create().
//		OnConflict(
//			sql.ResolveWithNewValues(),
//			sql.ResolveWith(func(u *sql.UpdateSet) {
//				u.SetIgnore(orderinfo.FieldID)
//			}),
//		).
//		Exec(ctx)
func (u *OrderInfoUpsertBulk) UpdateNewValues() *OrderInfoUpsertBulk {
	u.create.conflict = append(u.create.conflict, sql.ResolveWithNewValues())
	u.create.conflict = append(u.create.conflict, sql.ResolveWith(func(s *sql.UpdateSet) {
		for _, b := range u.create.builders {
			if _, exists := b.mutation.ID(); exists {
				s.SetIgnore(orderinfo.FieldID)
			}
		}
	}))
	return u
}

// Ignore sets each column to itself in case of conflict.
// Using this option is equivalent to using:
//
//	client.OrderInfo.Create().
//		OnConflict(sql.ResolveWithIgnore()).
//		Exec(ctx)
func (u *OrderInfoUpsertBulk) Ignore() *OrderInfoUpsertBulk {
	u.create.conflict = append(u.create.conflict, sql.ResolveWithIgnore())
	return u
}

// DoNothing configures the conflict_action to `DO NOTHING`.
// Supported only by SQLite and PostgreSQL.
func (u *OrderInfoUpsertBulk) DoNothing() *OrderInfoUpsertBulk {
	u.create.conflict = append(u.create.conflict, sql.DoNothing())
	return u
}

// Update allows overriding fields `UPDATE` values. See the OrderInfoCreateBulk.OnConflict
// documentation for more info.
func (u *OrderInfoUpsertBulk) Update(set func(*OrderInfoUpsert)) *OrderInfoUpsertBulk {
	u.create.conflict = append(u.create.conflict, sql.ResolveWith(func(update *sql.UpdateSet) {
		set(&OrderInfoUpsert{UpdateSet: update})
	}))
	return u
}

// SetOrderTitle sets the "order_title" field.
func (u *OrderInfoUpsertBulk) SetOrderTitle(v string) *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderTitle(v)
	})
}

// UpdateOrderTitle sets the "order_title" field to the value that was provided on create.
func (u *OrderInfoUpsertBulk) UpdateOrderTitle() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderTitle()
	})
}

// SetOrderType sets the "order_type" field.
func (u *OrderInfoUpsertBulk) SetOrderType(v string) *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderType(v)
	})
}

// UpdateOrderType sets the "order_type" field to the value that was provided on create.
func (u *OrderInfoUpsertBulk) UpdateOrderType() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderType()
	})
}

// SetOrderDescription sets the "order_description" field.
func (u *OrderInfoUpsertBulk) SetOrderDescription(v string) *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderDescription(v)
	})
}

// UpdateOrderDescription sets the "order_description" field to the value that was provided on create.
func (u *OrderInfoUpsertBulk) UpdateOrderDescription() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderDescription()
	})
}

// SetOrderConfirmationNumber sets the "order_confirmation_number" field.
func (u *OrderInfoUpsertBulk) SetOrderConfirmationNumber(v string) *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderConfirmationNumber(v)
	})
}

// UpdateOrderConfirmationNumber sets the "order_confirmation_number" field to the value that was provided on create.
func (u *OrderInfoUpsertBulk) UpdateOrderConfirmationNumber() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderConfirmationNumber()
	})
}

// SetClinicID sets the "clinic_id" field.
func (u *OrderInfoUpsertBulk) SetClinicID(v int) *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetClinicID(v)
	})
}

// UpdateClinicID sets the "clinic_id" field to the value that was provided on create.
func (u *OrderInfoUpsertBulk) UpdateClinicID() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateClinicID()
	})
}

// ClearClinicID clears the value of the "clinic_id" field.
func (u *OrderInfoUpsertBulk) ClearClinicID() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearClinicID()
	})
}

// SetCustomerID sets the "customer_id" field.
func (u *OrderInfoUpsertBulk) SetCustomerID(v int) *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetCustomerID(v)
	})
}

// UpdateCustomerID sets the "customer_id" field to the value that was provided on create.
func (u *OrderInfoUpsertBulk) UpdateCustomerID() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateCustomerID()
	})
}

// ClearCustomerID clears the value of the "customer_id" field.
func (u *OrderInfoUpsertBulk) ClearCustomerID() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearCustomerID()
	})
}

// SetOrderCreateTime sets the "order_create_time" field.
func (u *OrderInfoUpsertBulk) SetOrderCreateTime(v time.Time) *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderCreateTime(v)
	})
}

// UpdateOrderCreateTime sets the "order_create_time" field to the value that was provided on create.
func (u *OrderInfoUpsertBulk) UpdateOrderCreateTime() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderCreateTime()
	})
}

// SetOrderServiceTime sets the "order_service_time" field.
func (u *OrderInfoUpsertBulk) SetOrderServiceTime(v time.Time) *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderServiceTime(v)
	})
}

// UpdateOrderServiceTime sets the "order_service_time" field to the value that was provided on create.
func (u *OrderInfoUpsertBulk) UpdateOrderServiceTime() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderServiceTime()
	})
}

// ClearOrderServiceTime clears the value of the "order_service_time" field.
func (u *OrderInfoUpsertBulk) ClearOrderServiceTime() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearOrderServiceTime()
	})
}

// SetOrderProcessTime sets the "order_process_time" field.
func (u *OrderInfoUpsertBulk) SetOrderProcessTime(v time.Time) *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderProcessTime(v)
	})
}

// UpdateOrderProcessTime sets the "order_process_time" field to the value that was provided on create.
func (u *OrderInfoUpsertBulk) UpdateOrderProcessTime() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderProcessTime()
	})
}

// ClearOrderProcessTime clears the value of the "order_process_time" field.
func (u *OrderInfoUpsertBulk) ClearOrderProcessTime() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearOrderProcessTime()
	})
}

// SetOrderRedrawTime sets the "order_redraw_time" field.
func (u *OrderInfoUpsertBulk) SetOrderRedrawTime(v time.Time) *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderRedrawTime(v)
	})
}

// UpdateOrderRedrawTime sets the "order_redraw_time" field to the value that was provided on create.
func (u *OrderInfoUpsertBulk) UpdateOrderRedrawTime() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderRedrawTime()
	})
}

// ClearOrderRedrawTime clears the value of the "order_redraw_time" field.
func (u *OrderInfoUpsertBulk) ClearOrderRedrawTime() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearOrderRedrawTime()
	})
}

// SetOrderCancelTime sets the "order_cancel_time" field.
func (u *OrderInfoUpsertBulk) SetOrderCancelTime(v time.Time) *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderCancelTime(v)
	})
}

// UpdateOrderCancelTime sets the "order_cancel_time" field to the value that was provided on create.
func (u *OrderInfoUpsertBulk) UpdateOrderCancelTime() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderCancelTime()
	})
}

// ClearOrderCancelTime clears the value of the "order_cancel_time" field.
func (u *OrderInfoUpsertBulk) ClearOrderCancelTime() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearOrderCancelTime()
	})
}

// SetIsActive sets the "isActive" field.
func (u *OrderInfoUpsertBulk) SetIsActive(v bool) *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetIsActive(v)
	})
}

// UpdateIsActive sets the "isActive" field to the value that was provided on create.
func (u *OrderInfoUpsertBulk) UpdateIsActive() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateIsActive()
	})
}

// SetHasOrderSetting sets the "has_order_setting" field.
func (u *OrderInfoUpsertBulk) SetHasOrderSetting(v bool) *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetHasOrderSetting(v)
	})
}

// UpdateHasOrderSetting sets the "has_order_setting" field to the value that was provided on create.
func (u *OrderInfoUpsertBulk) UpdateHasOrderSetting() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateHasOrderSetting()
	})
}

// SetOrderCanceled sets the "order_canceled" field.
func (u *OrderInfoUpsertBulk) SetOrderCanceled(v bool) *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderCanceled(v)
	})
}

// UpdateOrderCanceled sets the "order_canceled" field to the value that was provided on create.
func (u *OrderInfoUpsertBulk) UpdateOrderCanceled() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderCanceled()
	})
}

// SetOrderFlagged sets the "order_flagged" field.
func (u *OrderInfoUpsertBulk) SetOrderFlagged(v bool) *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderFlagged(v)
	})
}

// UpdateOrderFlagged sets the "order_flagged" field to the value that was provided on create.
func (u *OrderInfoUpsertBulk) UpdateOrderFlagged() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderFlagged()
	})
}

// SetOrderStatus sets the "order_status" field.
func (u *OrderInfoUpsertBulk) SetOrderStatus(v string) *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderStatus(v)
	})
}

// UpdateOrderStatus sets the "order_status" field to the value that was provided on create.
func (u *OrderInfoUpsertBulk) UpdateOrderStatus() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderStatus()
	})
}

// ClearOrderStatus clears the value of the "order_status" field.
func (u *OrderInfoUpsertBulk) ClearOrderStatus() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearOrderStatus()
	})
}

// SetOrderMajorStatus sets the "order_major_status" field.
func (u *OrderInfoUpsertBulk) SetOrderMajorStatus(v string) *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderMajorStatus(v)
	})
}

// UpdateOrderMajorStatus sets the "order_major_status" field to the value that was provided on create.
func (u *OrderInfoUpsertBulk) UpdateOrderMajorStatus() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderMajorStatus()
	})
}

// ClearOrderMajorStatus clears the value of the "order_major_status" field.
func (u *OrderInfoUpsertBulk) ClearOrderMajorStatus() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearOrderMajorStatus()
	})
}

// SetOrderKitStatus sets the "order_kit_status" field.
func (u *OrderInfoUpsertBulk) SetOrderKitStatus(v string) *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderKitStatus(v)
	})
}

// UpdateOrderKitStatus sets the "order_kit_status" field to the value that was provided on create.
func (u *OrderInfoUpsertBulk) UpdateOrderKitStatus() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderKitStatus()
	})
}

// ClearOrderKitStatus clears the value of the "order_kit_status" field.
func (u *OrderInfoUpsertBulk) ClearOrderKitStatus() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearOrderKitStatus()
	})
}

// SetOrderReportStatus sets the "order_report_status" field.
func (u *OrderInfoUpsertBulk) SetOrderReportStatus(v string) *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderReportStatus(v)
	})
}

// UpdateOrderReportStatus sets the "order_report_status" field to the value that was provided on create.
func (u *OrderInfoUpsertBulk) UpdateOrderReportStatus() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderReportStatus()
	})
}

// ClearOrderReportStatus clears the value of the "order_report_status" field.
func (u *OrderInfoUpsertBulk) ClearOrderReportStatus() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearOrderReportStatus()
	})
}

// SetOrderTnpIssueStatus sets the "order_tnp_issue_status" field.
func (u *OrderInfoUpsertBulk) SetOrderTnpIssueStatus(v string) *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderTnpIssueStatus(v)
	})
}

// UpdateOrderTnpIssueStatus sets the "order_tnp_issue_status" field to the value that was provided on create.
func (u *OrderInfoUpsertBulk) UpdateOrderTnpIssueStatus() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderTnpIssueStatus()
	})
}

// ClearOrderTnpIssueStatus clears the value of the "order_tnp_issue_status" field.
func (u *OrderInfoUpsertBulk) ClearOrderTnpIssueStatus() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearOrderTnpIssueStatus()
	})
}

// SetOrderBillingIssueStatus sets the "order_billing_issue_status" field.
func (u *OrderInfoUpsertBulk) SetOrderBillingIssueStatus(v string) *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderBillingIssueStatus(v)
	})
}

// UpdateOrderBillingIssueStatus sets the "order_billing_issue_status" field to the value that was provided on create.
func (u *OrderInfoUpsertBulk) UpdateOrderBillingIssueStatus() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderBillingIssueStatus()
	})
}

// ClearOrderBillingIssueStatus clears the value of the "order_billing_issue_status" field.
func (u *OrderInfoUpsertBulk) ClearOrderBillingIssueStatus() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearOrderBillingIssueStatus()
	})
}

// SetOrderMissingInfoIssueStatus sets the "order_missing_info_issue_status" field.
func (u *OrderInfoUpsertBulk) SetOrderMissingInfoIssueStatus(v string) *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderMissingInfoIssueStatus(v)
	})
}

// UpdateOrderMissingInfoIssueStatus sets the "order_missing_info_issue_status" field to the value that was provided on create.
func (u *OrderInfoUpsertBulk) UpdateOrderMissingInfoIssueStatus() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderMissingInfoIssueStatus()
	})
}

// ClearOrderMissingInfoIssueStatus clears the value of the "order_missing_info_issue_status" field.
func (u *OrderInfoUpsertBulk) ClearOrderMissingInfoIssueStatus() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearOrderMissingInfoIssueStatus()
	})
}

// SetOrderIncompleteQuestionnaireIssueStatus sets the "order_incomplete_questionnaire_issue_status" field.
func (u *OrderInfoUpsertBulk) SetOrderIncompleteQuestionnaireIssueStatus(v string) *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderIncompleteQuestionnaireIssueStatus(v)
	})
}

// UpdateOrderIncompleteQuestionnaireIssueStatus sets the "order_incomplete_questionnaire_issue_status" field to the value that was provided on create.
func (u *OrderInfoUpsertBulk) UpdateOrderIncompleteQuestionnaireIssueStatus() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderIncompleteQuestionnaireIssueStatus()
	})
}

// ClearOrderIncompleteQuestionnaireIssueStatus clears the value of the "order_incomplete_questionnaire_issue_status" field.
func (u *OrderInfoUpsertBulk) ClearOrderIncompleteQuestionnaireIssueStatus() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearOrderIncompleteQuestionnaireIssueStatus()
	})
}

// SetOrderNyWaiveFormIssueStatus sets the "order_ny_waive_form_issue_status" field.
func (u *OrderInfoUpsertBulk) SetOrderNyWaiveFormIssueStatus(v string) *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderNyWaiveFormIssueStatus(v)
	})
}

// UpdateOrderNyWaiveFormIssueStatus sets the "order_ny_waive_form_issue_status" field to the value that was provided on create.
func (u *OrderInfoUpsertBulk) UpdateOrderNyWaiveFormIssueStatus() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderNyWaiveFormIssueStatus()
	})
}

// ClearOrderNyWaiveFormIssueStatus clears the value of the "order_ny_waive_form_issue_status" field.
func (u *OrderInfoUpsertBulk) ClearOrderNyWaiveFormIssueStatus() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearOrderNyWaiveFormIssueStatus()
	})
}

// SetOrderLabIssueStatus sets the "order_lab_issue_status" field.
func (u *OrderInfoUpsertBulk) SetOrderLabIssueStatus(v string) *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderLabIssueStatus(v)
	})
}

// UpdateOrderLabIssueStatus sets the "order_lab_issue_status" field to the value that was provided on create.
func (u *OrderInfoUpsertBulk) UpdateOrderLabIssueStatus() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderLabIssueStatus()
	})
}

// ClearOrderLabIssueStatus clears the value of the "order_lab_issue_status" field.
func (u *OrderInfoUpsertBulk) ClearOrderLabIssueStatus() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearOrderLabIssueStatus()
	})
}

// SetOrderProcessingTime sets the "order_processing_time" field.
func (u *OrderInfoUpsertBulk) SetOrderProcessingTime(v time.Time) *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderProcessingTime(v)
	})
}

// UpdateOrderProcessingTime sets the "order_processing_time" field to the value that was provided on create.
func (u *OrderInfoUpsertBulk) UpdateOrderProcessingTime() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderProcessingTime()
	})
}

// ClearOrderProcessingTime clears the value of the "order_processing_time" field.
func (u *OrderInfoUpsertBulk) ClearOrderProcessingTime() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearOrderProcessingTime()
	})
}

// SetOrderMinorStatus sets the "order_minor_status" field.
func (u *OrderInfoUpsertBulk) SetOrderMinorStatus(v string) *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderMinorStatus(v)
	})
}

// UpdateOrderMinorStatus sets the "order_minor_status" field to the value that was provided on create.
func (u *OrderInfoUpsertBulk) UpdateOrderMinorStatus() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderMinorStatus()
	})
}

// ClearOrderMinorStatus clears the value of the "order_minor_status" field.
func (u *OrderInfoUpsertBulk) ClearOrderMinorStatus() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearOrderMinorStatus()
	})
}

// SetPatientFirstName sets the "patient_first_name" field.
func (u *OrderInfoUpsertBulk) SetPatientFirstName(v string) *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetPatientFirstName(v)
	})
}

// UpdatePatientFirstName sets the "patient_first_name" field to the value that was provided on create.
func (u *OrderInfoUpsertBulk) UpdatePatientFirstName() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdatePatientFirstName()
	})
}

// ClearPatientFirstName clears the value of the "patient_first_name" field.
func (u *OrderInfoUpsertBulk) ClearPatientFirstName() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearPatientFirstName()
	})
}

// SetPatientLastName sets the "patient_last_name" field.
func (u *OrderInfoUpsertBulk) SetPatientLastName(v string) *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetPatientLastName(v)
	})
}

// UpdatePatientLastName sets the "patient_last_name" field to the value that was provided on create.
func (u *OrderInfoUpsertBulk) UpdatePatientLastName() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdatePatientLastName()
	})
}

// ClearPatientLastName clears the value of the "patient_last_name" field.
func (u *OrderInfoUpsertBulk) ClearPatientLastName() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearPatientLastName()
	})
}

// SetOrderSource sets the "order_source" field.
func (u *OrderInfoUpsertBulk) SetOrderSource(v string) *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderSource(v)
	})
}

// UpdateOrderSource sets the "order_source" field to the value that was provided on create.
func (u *OrderInfoUpsertBulk) UpdateOrderSource() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderSource()
	})
}

// ClearOrderSource clears the value of the "order_source" field.
func (u *OrderInfoUpsertBulk) ClearOrderSource() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearOrderSource()
	})
}

// SetOrderChargeMethod sets the "order_charge_method" field.
func (u *OrderInfoUpsertBulk) SetOrderChargeMethod(v string) *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderChargeMethod(v)
	})
}

// UpdateOrderChargeMethod sets the "order_charge_method" field to the value that was provided on create.
func (u *OrderInfoUpsertBulk) UpdateOrderChargeMethod() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderChargeMethod()
	})
}

// ClearOrderChargeMethod clears the value of the "order_charge_method" field.
func (u *OrderInfoUpsertBulk) ClearOrderChargeMethod() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearOrderChargeMethod()
	})
}

// SetOrderPlacingType sets the "order_placing_type" field.
func (u *OrderInfoUpsertBulk) SetOrderPlacingType(v string) *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetOrderPlacingType(v)
	})
}

// UpdateOrderPlacingType sets the "order_placing_type" field to the value that was provided on create.
func (u *OrderInfoUpsertBulk) UpdateOrderPlacingType() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateOrderPlacingType()
	})
}

// ClearOrderPlacingType clears the value of the "order_placing_type" field.
func (u *OrderInfoUpsertBulk) ClearOrderPlacingType() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearOrderPlacingType()
	})
}

// SetBillingOrderID sets the "billing_order_id" field.
func (u *OrderInfoUpsertBulk) SetBillingOrderID(v string) *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetBillingOrderID(v)
	})
}

// UpdateBillingOrderID sets the "billing_order_id" field to the value that was provided on create.
func (u *OrderInfoUpsertBulk) UpdateBillingOrderID() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateBillingOrderID()
	})
}

// ClearBillingOrderID clears the value of the "billing_order_id" field.
func (u *OrderInfoUpsertBulk) ClearBillingOrderID() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearBillingOrderID()
	})
}

// SetContactID sets the "contact_id" field.
func (u *OrderInfoUpsertBulk) SetContactID(v int) *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetContactID(v)
	})
}

// UpdateContactID sets the "contact_id" field to the value that was provided on create.
func (u *OrderInfoUpsertBulk) UpdateContactID() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateContactID()
	})
}

// ClearContactID clears the value of the "contact_id" field.
func (u *OrderInfoUpsertBulk) ClearContactID() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearContactID()
	})
}

// SetAddressID sets the "address_id" field.
func (u *OrderInfoUpsertBulk) SetAddressID(v int) *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.SetAddressID(v)
	})
}

// UpdateAddressID sets the "address_id" field to the value that was provided on create.
func (u *OrderInfoUpsertBulk) UpdateAddressID() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.UpdateAddressID()
	})
}

// ClearAddressID clears the value of the "address_id" field.
func (u *OrderInfoUpsertBulk) ClearAddressID() *OrderInfoUpsertBulk {
	return u.Update(func(s *OrderInfoUpsert) {
		s.ClearAddressID()
	})
}

// Exec executes the query.
func (u *OrderInfoUpsertBulk) Exec(ctx context.Context) error {
	if u.create.err != nil {
		return u.create.err
	}
	for i, b := range u.create.builders {
		if len(b.conflict) != 0 {
			return fmt.Errorf("ent: OnConflict was set for builder %d. Set it on the OrderInfoCreateBulk instead", i)
		}
	}
	if len(u.create.conflict) == 0 {
		return errors.New("ent: missing options for OrderInfoCreateBulk.OnConflict")
	}
	return u.create.Exec(ctx)
}

// ExecX is like Exec, but panics if an error occurs.
func (u *OrderInfoUpsertBulk) ExecX(ctx context.Context) {
	if err := u.create.Exec(ctx); err != nil {
		panic(err)
	}
}
