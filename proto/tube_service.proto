syntax = "proto3";

package coresamples_service;

option go_package = "./proto;coresamples_service";

service TubeService {
  rpc GetRequiredTubeVolume(RequiredTubeVolumeRequest) returns (RequiredTubeVolumeResponse) {}
  rpc GetTestsByBloodType(BloodType) returns (TestIDs) {}
  rpc GetTube (TubeID) returns (Tube){}
  rpc GetTubeTests(TubeID) returns (TubeTests) {}
}

message RequiredTubeVolumeRequest {
   repeated int32 test_ids = 1;
}

message BloodType {
  bool blood = 1;
}

message TestIDs {
  repeated int32 test_ids = 1;
}

message TubeInfo {
  int32 sort_order = 1;
  string tube_instructions = 2;
  string tube_name = 3;
  string shipping_box = 4;
  string transfer_tubes_to_send = 5;
  bool blood_type = 6;
}

message RequiredTubeVolumeResponse {
  map<string, int32> number_of_tubes = 1;
  map<string, string> volume_required = 2; // represent float volume as string to preserve precision
  map<string, int32> number_of_DBS_blood_tubes = 3;
  map<string, int32> actual_number_of_tubes = 4;
  map<string, string> actual_volume_required = 5;
  string message = 6;
  map<string, int32> tube_order = 7;
  map<string, TubeInfo> tube_information = 8;
}

message TubeTests{
  repeated TubeSingleTest tests = 1;
}

message TubeSingleTest{
  int32 test_id = 1;
  string test_names = 2;
  string test_codes = 3;
  string test_instrument = 4;
  string test_type = 5;
  string test_assay_name = 6;
  string test_duplicate_assay_name = 7;
  string test_group_name = 8;
}

message TubeID{
  string tube_id = 1;
}
message Tube{
  string tube_id = 1;
  int32 sample_id = 2;
  string tube_storage = 3;
  string tube_receive_time = 4;
  string tube_collection_time = 5;
  int32 tube_stability = 6;
  bool isActive = 7;
  int32 turnaround_time = 8;
  repeated TubeType tube_types = 9;
}

message TubeType{
  string tube_type = 1;
  string tube_type_symbol = 2;
}