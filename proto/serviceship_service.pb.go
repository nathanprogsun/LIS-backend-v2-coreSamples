// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.1
// source: proto/serviceship_service.proto

package coresamples_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateMembershipRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description     string    `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Fee             []float32 `protobuf:"fixed32,3,rep,packed,name=fee,proto3" json:"fee,omitempty"`
	BillingCycles   []int32   `protobuf:"varint,4,rep,packed,name=billing_cycles,json=billingCycles,proto3" json:"billing_cycles,omitempty"`
	CreditRate      float32   `protobuf:"fixed32,5,opt,name=credit_rate,json=creditRate,proto3" json:"credit_rate,omitempty"`
	RepeatBonus     float32   `protobuf:"fixed32,6,opt,name=repeat_bonus,json=repeatBonus,proto3" json:"repeat_bonus,omitempty"`
	SingleService   bool      `protobuf:"varint,7,opt,name=single_service,json=singleService,proto3" json:"single_service,omitempty"`
	CallerAccountId int64     `protobuf:"varint,8,opt,name=caller_account_id,json=callerAccountId,proto3" json:"caller_account_id,omitempty"` // unused right now
}

func (x *CreateMembershipRequest) Reset() {
	*x = CreateMembershipRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_serviceship_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMembershipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMembershipRequest) ProtoMessage() {}

func (x *CreateMembershipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_serviceship_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMembershipRequest.ProtoReflect.Descriptor instead.
func (*CreateMembershipRequest) Descriptor() ([]byte, []int) {
	return file_proto_serviceship_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateMembershipRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateMembershipRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateMembershipRequest) GetFee() []float32 {
	if x != nil {
		return x.Fee
	}
	return nil
}

func (x *CreateMembershipRequest) GetBillingCycles() []int32 {
	if x != nil {
		return x.BillingCycles
	}
	return nil
}

func (x *CreateMembershipRequest) GetCreditRate() float32 {
	if x != nil {
		return x.CreditRate
	}
	return 0
}

func (x *CreateMembershipRequest) GetRepeatBonus() float32 {
	if x != nil {
		return x.RepeatBonus
	}
	return 0
}

func (x *CreateMembershipRequest) GetSingleService() bool {
	if x != nil {
		return x.SingleService
	}
	return false
}

func (x *CreateMembershipRequest) GetCallerAccountId() int64 {
	if x != nil {
		return x.CallerAccountId
	}
	return 0
}

type SubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId       int64  `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	SubscriberName  string `protobuf:"bytes,2,opt,name=subscriber_name,json=subscriberName,proto3" json:"subscriber_name,omitempty"`
	Email           string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	BillingPlanId   int32  `protobuf:"varint,4,opt,name=billing_plan_id,json=billingPlanId,proto3" json:"billing_plan_id,omitempty"`
	Platform        string `protobuf:"bytes,5,opt,name=platform,proto3" json:"platform,omitempty"`
	PaymentToken    string `protobuf:"bytes,6,opt,name=payment_token,json=paymentToken,proto3" json:"payment_token,omitempty"`
	CustomerToken   string `protobuf:"bytes,7,opt,name=customer_token,json=customerToken,proto3" json:"customer_token,omitempty"`
	PaymentMethodId int64  `protobuf:"varint,8,opt,name=payment_method_id,json=paymentMethodId,proto3" json:"payment_method_id,omitempty"`
	AccountType     string `protobuf:"bytes,9,opt,name=account_type,json=accountType,proto3" json:"account_type,omitempty"`
	KeepActive      bool   `protobuf:"varint,10,opt,name=keep_active,json=keepActive,proto3" json:"keep_active,omitempty"`
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_serviceship_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_serviceship_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_proto_serviceship_service_proto_rawDescGZIP(), []int{1}
}

func (x *SubscribeRequest) GetAccountId() int64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *SubscribeRequest) GetSubscriberName() string {
	if x != nil {
		return x.SubscriberName
	}
	return ""
}

func (x *SubscribeRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SubscribeRequest) GetBillingPlanId() int32 {
	if x != nil {
		return x.BillingPlanId
	}
	return 0
}

func (x *SubscribeRequest) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *SubscribeRequest) GetPaymentToken() string {
	if x != nil {
		return x.PaymentToken
	}
	return ""
}

func (x *SubscribeRequest) GetCustomerToken() string {
	if x != nil {
		return x.CustomerToken
	}
	return ""
}

func (x *SubscribeRequest) GetPaymentMethodId() int64 {
	if x != nil {
		return x.PaymentMethodId
	}
	return 0
}

func (x *SubscribeRequest) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

func (x *SubscribeRequest) GetKeepActive() bool {
	if x != nil {
		return x.KeepActive
	}
	return false
}

type GetAccountSubscriptionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId       int64  `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	IncludeOutdated bool   `protobuf:"varint,2,opt,name=include_outdated,json=includeOutdated,proto3" json:"include_outdated,omitempty"`
	AccountType     string `protobuf:"bytes,3,opt,name=account_type,json=accountType,proto3" json:"account_type,omitempty"`
}

func (x *GetAccountSubscriptionsRequest) Reset() {
	*x = GetAccountSubscriptionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_serviceship_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountSubscriptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountSubscriptionsRequest) ProtoMessage() {}

func (x *GetAccountSubscriptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_serviceship_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountSubscriptionsRequest.ProtoReflect.Descriptor instead.
func (*GetAccountSubscriptionsRequest) Descriptor() ([]byte, []int) {
	return file_proto_serviceship_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetAccountSubscriptionsRequest) GetAccountId() int64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *GetAccountSubscriptionsRequest) GetIncludeOutdated() bool {
	if x != nil {
		return x.IncludeOutdated
	}
	return false
}

func (x *GetAccountSubscriptionsRequest) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

type AccountSubscriptionsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subscriptions []*AccountSubscription `protobuf:"bytes,1,rep,name=subscriptions,proto3" json:"subscriptions,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AccountSubscriptionsInfo) Reset() {
	*x = AccountSubscriptionsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_serviceship_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountSubscriptionsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountSubscriptionsInfo) ProtoMessage() {}

func (x *AccountSubscriptionsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_serviceship_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountSubscriptionsInfo.ProtoReflect.Descriptor instead.
func (*AccountSubscriptionsInfo) Descriptor() ([]byte, []int) {
	return file_proto_serviceship_service_proto_rawDescGZIP(), []int{3}
}

func (x *AccountSubscriptionsInfo) GetSubscriptions() []*AccountSubscription {
	if x != nil {
		return x.Subscriptions
	}
	return nil
}

func (x *AccountSubscriptionsInfo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type AccountSubscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AccountId      int64  `protobuf:"varint,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	SubscriberName string `protobuf:"bytes,3,opt,name=subscriber_name,json=subscriberName,proto3" json:"subscriber_name,omitempty"`
	Email          string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	StartTime      int64  `protobuf:"varint,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime        int64  `protobuf:"varint,6,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	AccountType    string `protobuf:"bytes,7,opt,name=account_type,json=accountType,proto3" json:"account_type,omitempty"`
}

func (x *AccountSubscription) Reset() {
	*x = AccountSubscription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_serviceship_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountSubscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountSubscription) ProtoMessage() {}

func (x *AccountSubscription) ProtoReflect() protoreflect.Message {
	mi := &file_proto_serviceship_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountSubscription.ProtoReflect.Descriptor instead.
func (*AccountSubscription) Descriptor() ([]byte, []int) {
	return file_proto_serviceship_service_proto_rawDescGZIP(), []int{4}
}

func (x *AccountSubscription) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AccountSubscription) GetAccountId() int64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *AccountSubscription) GetSubscriberName() string {
	if x != nil {
		return x.SubscriberName
	}
	return ""
}

func (x *AccountSubscription) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AccountSubscription) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *AccountSubscription) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *AccountSubscription) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

type GetChargingSubscriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionId int32 `protobuf:"varint,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
}

func (x *GetChargingSubscriptionRequest) Reset() {
	*x = GetChargingSubscriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_serviceship_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChargingSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChargingSubscriptionRequest) ProtoMessage() {}

func (x *GetChargingSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_serviceship_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChargingSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*GetChargingSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_proto_serviceship_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetChargingSubscriptionRequest) GetSubscriptionId() int32 {
	if x != nil {
		return x.SubscriptionId
	}
	return 0
}

type ChargingSubscriptionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChargingSubscription *ChargingSubscription `protobuf:"bytes,1,opt,name=charging_subscription,json=chargingSubscription,proto3" json:"charging_subscription,omitempty"`
	Message              string                `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ChargingSubscriptionInfo) Reset() {
	*x = ChargingSubscriptionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_serviceship_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChargingSubscriptionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChargingSubscriptionInfo) ProtoMessage() {}

func (x *ChargingSubscriptionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_serviceship_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChargingSubscriptionInfo.ProtoReflect.Descriptor instead.
func (*ChargingSubscriptionInfo) Descriptor() ([]byte, []int) {
	return file_proto_serviceship_service_proto_rawDescGZIP(), []int{6}
}

func (x *ChargingSubscriptionInfo) GetChargingSubscription() *ChargingSubscription {
	if x != nil {
		return x.ChargingSubscription
	}
	return nil
}

func (x *ChargingSubscriptionInfo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ChargingSubscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AccountId     int64          `protobuf:"varint,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`      // account_id
	AccountType   string         `protobuf:"bytes,3,opt,name=account_type,json=accountType,proto3" json:"account_type,omitempty"` // always "clinic"
	Amount        float32        `protobuf:"fixed32,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Status        int32          `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`                                   // 0: inactive, 1: active
	Currency      string         `protobuf:"bytes,6,opt,name=currency,proto3" json:"currency,omitempty"`                                // "usd"
	ChargeType    string         `protobuf:"bytes,7,opt,name=charge_type,json=chargeType,proto3" json:"charge_type,omitempty"`          // always "subscription"
	ChargeTypeId  int32          `protobuf:"varint,8,opt,name=charge_type_id,json=chargeTypeId,proto3" json:"charge_type_id,omitempty"` // subscription id
	StartAt       string         `protobuf:"bytes,9,opt,name=start_at,json=startAt,proto3" json:"start_at,omitempty"`                   // "2024-04-30T22:52:29Z"
	EndAt         string         `protobuf:"bytes,10,opt,name=end_at,json=endAt,proto3" json:"end_at,omitempty"`
	CreatedAt     string         `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string         `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	LastRun       string         `protobuf:"bytes,13,opt,name=last_run,json=lastRun,proto3" json:"last_run,omitempty"`
	NextRun       string         `protobuf:"bytes,14,opt,name=next_run,json=nextRun,proto3" json:"next_run,omitempty"`
	Frequency     string         `protobuf:"bytes,15,opt,name=frequency,proto3" json:"frequency,omitempty"` // "monthly"
	Interval      int32          `protobuf:"varint,16,opt,name=interval,proto3" json:"interval,omitempty"`  // 1, 6, 12
	PaymentMethod *PaymentMethod `protobuf:"bytes,17,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method,omitempty"`
}

func (x *ChargingSubscription) Reset() {
	*x = ChargingSubscription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_serviceship_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChargingSubscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChargingSubscription) ProtoMessage() {}

func (x *ChargingSubscription) ProtoReflect() protoreflect.Message {
	mi := &file_proto_serviceship_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChargingSubscription.ProtoReflect.Descriptor instead.
func (*ChargingSubscription) Descriptor() ([]byte, []int) {
	return file_proto_serviceship_service_proto_rawDescGZIP(), []int{7}
}

func (x *ChargingSubscription) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ChargingSubscription) GetAccountId() int64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *ChargingSubscription) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

func (x *ChargingSubscription) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ChargingSubscription) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ChargingSubscription) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *ChargingSubscription) GetChargeType() string {
	if x != nil {
		return x.ChargeType
	}
	return ""
}

func (x *ChargingSubscription) GetChargeTypeId() int32 {
	if x != nil {
		return x.ChargeTypeId
	}
	return 0
}

func (x *ChargingSubscription) GetStartAt() string {
	if x != nil {
		return x.StartAt
	}
	return ""
}

func (x *ChargingSubscription) GetEndAt() string {
	if x != nil {
		return x.EndAt
	}
	return ""
}

func (x *ChargingSubscription) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ChargingSubscription) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *ChargingSubscription) GetLastRun() string {
	if x != nil {
		return x.LastRun
	}
	return ""
}

func (x *ChargingSubscription) GetNextRun() string {
	if x != nil {
		return x.NextRun
	}
	return ""
}

func (x *ChargingSubscription) GetFrequency() string {
	if x != nil {
		return x.Frequency
	}
	return ""
}

func (x *ChargingSubscription) GetInterval() int32 {
	if x != nil {
		return x.Interval
	}
	return 0
}

func (x *ChargingSubscription) GetPaymentMethod() *PaymentMethod {
	if x != nil {
		return x.PaymentMethod
	}
	return nil
}

type PaymentMethod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AccountId     int64  `protobuf:"varint,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	AccountType   string `protobuf:"bytes,3,opt,name=account_type,json=accountType,proto3" json:"account_type,omitempty"`
	Type          string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	TokenPlatform string `protobuf:"bytes,5,opt,name=token_platform,json=tokenPlatform,proto3" json:"token_platform,omitempty"`
	PaymentToken  string `protobuf:"bytes,6,opt,name=payment_token,json=paymentToken,proto3" json:"payment_token,omitempty"`
	CardType      string `protobuf:"bytes,7,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`
	ExpiryDate    string `protobuf:"bytes,9,opt,name=expiry_date,json=expiryDate,proto3" json:"expiry_date,omitempty"`
	LastFour      string `protobuf:"bytes,10,opt,name=last_four,json=lastFour,proto3" json:"last_four,omitempty"`
}

func (x *PaymentMethod) Reset() {
	*x = PaymentMethod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_serviceship_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentMethod) ProtoMessage() {}

func (x *PaymentMethod) ProtoReflect() protoreflect.Message {
	mi := &file_proto_serviceship_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentMethod.ProtoReflect.Descriptor instead.
func (*PaymentMethod) Descriptor() ([]byte, []int) {
	return file_proto_serviceship_service_proto_rawDescGZIP(), []int{8}
}

func (x *PaymentMethod) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PaymentMethod) GetAccountId() int64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *PaymentMethod) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

func (x *PaymentMethod) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PaymentMethod) GetTokenPlatform() string {
	if x != nil {
		return x.TokenPlatform
	}
	return ""
}

func (x *PaymentMethod) GetPaymentToken() string {
	if x != nil {
		return x.PaymentToken
	}
	return ""
}

func (x *PaymentMethod) GetCardType() string {
	if x != nil {
		return x.CardType
	}
	return ""
}

func (x *PaymentMethod) GetExpiryDate() string {
	if x != nil {
		return x.ExpiryDate
	}
	return ""
}

func (x *PaymentMethod) GetLastFour() string {
	if x != nil {
		return x.LastFour
	}
	return ""
}

type MembershipsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Memberships []*Membership `protobuf:"bytes,1,rep,name=memberships,proto3" json:"memberships,omitempty"`
	Message     string        `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *MembershipsInfo) Reset() {
	*x = MembershipsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_serviceship_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MembershipsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MembershipsInfo) ProtoMessage() {}

func (x *MembershipsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_serviceship_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MembershipsInfo.ProtoReflect.Descriptor instead.
func (*MembershipsInfo) Descriptor() ([]byte, []int) {
	return file_proto_serviceship_service_proto_rawDescGZIP(), []int{9}
}

func (x *MembershipsInfo) GetMemberships() []*Membership {
	if x != nil {
		return x.Memberships
	}
	return nil
}

func (x *MembershipsInfo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Membership struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description     string  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	SingleService   bool    `protobuf:"varint,4,opt,name=single_service,json=singleService,proto3" json:"single_service,omitempty"`
	CreditRate      float32 `protobuf:"fixed32,5,opt,name=credit_rate,json=creditRate,proto3" json:"credit_rate,omitempty"`
	RepeatBonusRate float32 `protobuf:"fixed32,6,opt,name=repeat_bonus_rate,json=repeatBonusRate,proto3" json:"repeat_bonus_rate,omitempty"`
}

func (x *Membership) Reset() {
	*x = Membership{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_serviceship_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Membership) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Membership) ProtoMessage() {}

func (x *Membership) ProtoReflect() protoreflect.Message {
	mi := &file_proto_serviceship_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Membership.ProtoReflect.Descriptor instead.
func (*Membership) Descriptor() ([]byte, []int) {
	return file_proto_serviceship_service_proto_rawDescGZIP(), []int{10}
}

func (x *Membership) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Membership) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Membership) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Membership) GetSingleService() bool {
	if x != nil {
		return x.SingleService
	}
	return false
}

func (x *Membership) GetCreditRate() float32 {
	if x != nil {
		return x.CreditRate
	}
	return 0
}

func (x *Membership) GetRepeatBonusRate() float32 {
	if x != nil {
		return x.RepeatBonusRate
	}
	return 0
}

type ServiceshipID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceshipId int32 `protobuf:"varint,1,opt,name=serviceship_id,json=serviceshipId,proto3" json:"serviceship_id,omitempty"`
}

func (x *ServiceshipID) Reset() {
	*x = ServiceshipID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_serviceship_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceshipID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceshipID) ProtoMessage() {}

func (x *ServiceshipID) ProtoReflect() protoreflect.Message {
	mi := &file_proto_serviceship_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceshipID.ProtoReflect.Descriptor instead.
func (*ServiceshipID) Descriptor() ([]byte, []int) {
	return file_proto_serviceship_service_proto_rawDescGZIP(), []int{11}
}

func (x *ServiceshipID) GetServiceshipId() int32 {
	if x != nil {
		return x.ServiceshipId
	}
	return 0
}

type MembershipInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Membership *Membership `protobuf:"bytes,1,opt,name=membership,proto3" json:"membership,omitempty"`
	Message    string      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *MembershipInfo) Reset() {
	*x = MembershipInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_serviceship_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MembershipInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MembershipInfo) ProtoMessage() {}

func (x *MembershipInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_serviceship_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MembershipInfo.ProtoReflect.Descriptor instead.
func (*MembershipInfo) Descriptor() ([]byte, []int) {
	return file_proto_serviceship_service_proto_rawDescGZIP(), []int{12}
}

func (x *MembershipInfo) GetMembership() *Membership {
	if x != nil {
		return x.Membership
	}
	return nil
}

func (x *MembershipInfo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type AddBillingPlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceshipId int32   `protobuf:"varint,1,opt,name=serviceship_id,json=serviceshipId,proto3" json:"serviceship_id,omitempty"`
	Fee           float32 `protobuf:"fixed32,2,opt,name=fee,proto3" json:"fee,omitempty"`
	BillingCycle  int32   `protobuf:"varint,3,opt,name=billing_cycle,json=billingCycle,proto3" json:"billing_cycle,omitempty"`
	Interval      string  `protobuf:"bytes,4,opt,name=interval,proto3" json:"interval,omitempty"` // monthly or daily
}

func (x *AddBillingPlanRequest) Reset() {
	*x = AddBillingPlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_serviceship_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBillingPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBillingPlanRequest) ProtoMessage() {}

func (x *AddBillingPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_serviceship_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBillingPlanRequest.ProtoReflect.Descriptor instead.
func (*AddBillingPlanRequest) Descriptor() ([]byte, []int) {
	return file_proto_serviceship_service_proto_rawDescGZIP(), []int{13}
}

func (x *AddBillingPlanRequest) GetServiceshipId() int32 {
	if x != nil {
		return x.ServiceshipId
	}
	return 0
}

func (x *AddBillingPlanRequest) GetFee() float32 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *AddBillingPlanRequest) GetBillingCycle() int32 {
	if x != nil {
		return x.BillingCycle
	}
	return 0
}

func (x *AddBillingPlanRequest) GetInterval() string {
	if x != nil {
		return x.Interval
	}
	return ""
}

type CreateBillingPlanSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceshipId int32     `protobuf:"varint,1,opt,name=serviceship_id,json=serviceshipId,proto3" json:"serviceship_id,omitempty"`
	Fee           []float32 `protobuf:"fixed32,2,rep,packed,name=fee,proto3" json:"fee,omitempty"`
	BillingCycles []int32   `protobuf:"varint,3,rep,packed,name=billing_cycles,json=billingCycles,proto3" json:"billing_cycles,omitempty"`
	Intervals     []string  `protobuf:"bytes,4,rep,name=intervals,proto3" json:"intervals,omitempty"` // monthly or daily
	Effective     int64     `protobuf:"varint,5,opt,name=effective,proto3" json:"effective,omitempty"`
}

func (x *CreateBillingPlanSetRequest) Reset() {
	*x = CreateBillingPlanSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_serviceship_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBillingPlanSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBillingPlanSetRequest) ProtoMessage() {}

func (x *CreateBillingPlanSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_serviceship_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBillingPlanSetRequest.ProtoReflect.Descriptor instead.
func (*CreateBillingPlanSetRequest) Descriptor() ([]byte, []int) {
	return file_proto_serviceship_service_proto_rawDescGZIP(), []int{14}
}

func (x *CreateBillingPlanSetRequest) GetServiceshipId() int32 {
	if x != nil {
		return x.ServiceshipId
	}
	return 0
}

func (x *CreateBillingPlanSetRequest) GetFee() []float32 {
	if x != nil {
		return x.Fee
	}
	return nil
}

func (x *CreateBillingPlanSetRequest) GetBillingCycles() []int32 {
	if x != nil {
		return x.BillingCycles
	}
	return nil
}

func (x *CreateBillingPlanSetRequest) GetIntervals() []string {
	if x != nil {
		return x.Intervals
	}
	return nil
}

func (x *CreateBillingPlanSetRequest) GetEffective() int64 {
	if x != nil {
		return x.Effective
	}
	return 0
}

type MembershipBillingPlansInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BillingPlans []*MembershipBillingPlan `protobuf:"bytes,1,rep,name=billing_plans,json=billingPlans,proto3" json:"billing_plans,omitempty"`
	Message      string                   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *MembershipBillingPlansInfo) Reset() {
	*x = MembershipBillingPlansInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_serviceship_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MembershipBillingPlansInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MembershipBillingPlansInfo) ProtoMessage() {}

func (x *MembershipBillingPlansInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_serviceship_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MembershipBillingPlansInfo.ProtoReflect.Descriptor instead.
func (*MembershipBillingPlansInfo) Descriptor() ([]byte, []int) {
	return file_proto_serviceship_service_proto_rawDescGZIP(), []int{15}
}

func (x *MembershipBillingPlansInfo) GetBillingPlans() []*MembershipBillingPlan {
	if x != nil {
		return x.BillingPlans
	}
	return nil
}

func (x *MembershipBillingPlansInfo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type MembershipBillingPlan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Fee           float32 `protobuf:"fixed32,2,opt,name=fee,proto3" json:"fee,omitempty"`
	BillingCycle  int32   `protobuf:"varint,3,opt,name=billing_cycle,json=billingCycle,proto3" json:"billing_cycle,omitempty"`
	EffectiveTime int64   `protobuf:"varint,4,opt,name=effective_time,json=effectiveTime,proto3" json:"effective_time,omitempty"`
}

func (x *MembershipBillingPlan) Reset() {
	*x = MembershipBillingPlan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_serviceship_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MembershipBillingPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MembershipBillingPlan) ProtoMessage() {}

func (x *MembershipBillingPlan) ProtoReflect() protoreflect.Message {
	mi := &file_proto_serviceship_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MembershipBillingPlan.ProtoReflect.Descriptor instead.
func (*MembershipBillingPlan) Descriptor() ([]byte, []int) {
	return file_proto_serviceship_service_proto_rawDescGZIP(), []int{16}
}

func (x *MembershipBillingPlan) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MembershipBillingPlan) GetFee() float32 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *MembershipBillingPlan) GetBillingCycle() int32 {
	if x != nil {
		return x.BillingCycle
	}
	return 0
}

func (x *MembershipBillingPlan) GetEffectiveTime() int64 {
	if x != nil {
		return x.EffectiveTime
	}
	return 0
}

type BillingPlanID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *BillingPlanID) Reset() {
	*x = BillingPlanID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_serviceship_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BillingPlanID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillingPlanID) ProtoMessage() {}

func (x *BillingPlanID) ProtoReflect() protoreflect.Message {
	mi := &file_proto_serviceship_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillingPlanID.ProtoReflect.Descriptor instead.
func (*BillingPlanID) Descriptor() ([]byte, []int) {
	return file_proto_serviceship_service_proto_rawDescGZIP(), []int{17}
}

func (x *BillingPlanID) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type SubscriptionID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SubscriptionID) Reset() {
	*x = SubscriptionID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_serviceship_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscriptionID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionID) ProtoMessage() {}

func (x *SubscriptionID) ProtoReflect() protoreflect.Message {
	mi := &file_proto_serviceship_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionID.ProtoReflect.Descriptor instead.
func (*SubscriptionID) Descriptor() ([]byte, []int) {
	return file_proto_serviceship_service_proto_rawDescGZIP(), []int{18}
}

func (x *SubscriptionID) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type MembershipBillingPlanInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BillingPlan *MembershipBillingPlan `protobuf:"bytes,1,opt,name=billing_plan,json=billingPlan,proto3" json:"billing_plan,omitempty"`
	Message     string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *MembershipBillingPlanInfo) Reset() {
	*x = MembershipBillingPlanInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_serviceship_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MembershipBillingPlanInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MembershipBillingPlanInfo) ProtoMessage() {}

func (x *MembershipBillingPlanInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_serviceship_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MembershipBillingPlanInfo.ProtoReflect.Descriptor instead.
func (*MembershipBillingPlanInfo) Descriptor() ([]byte, []int) {
	return file_proto_serviceship_service_proto_rawDescGZIP(), []int{19}
}

func (x *MembershipBillingPlanInfo) GetBillingPlan() *MembershipBillingPlan {
	if x != nil {
		return x.BillingPlan
	}
	return nil
}

func (x *MembershipBillingPlanInfo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type AccountID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *AccountID) Reset() {
	*x = AccountID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_serviceship_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountID) ProtoMessage() {}

func (x *AccountID) ProtoReflect() protoreflect.Message {
	mi := &file_proto_serviceship_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountID.ProtoReflect.Descriptor instead.
func (*AccountID) Descriptor() ([]byte, []int) {
	return file_proto_serviceship_service_proto_rawDescGZIP(), []int{20}
}

func (x *AccountID) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AccountID) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type PaymentMethodsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentMethods []*PaymentMethod `protobuf:"bytes,1,rep,name=payment_methods,json=paymentMethods,proto3" json:"payment_methods,omitempty"`
	Message        string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PaymentMethodsInfo) Reset() {
	*x = PaymentMethodsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_serviceship_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentMethodsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentMethodsInfo) ProtoMessage() {}

func (x *PaymentMethodsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_serviceship_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentMethodsInfo.ProtoReflect.Descriptor instead.
func (*PaymentMethodsInfo) Descriptor() ([]byte, []int) {
	return file_proto_serviceship_service_proto_rawDescGZIP(), []int{21}
}

func (x *PaymentMethodsInfo) GetPaymentMethods() []*PaymentMethod {
	if x != nil {
		return x.PaymentMethods
	}
	return nil
}

func (x *PaymentMethodsInfo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CreatePaymentMethodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId     int64  `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Platform      string `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform,omitempty"`
	PaymentToken  string `protobuf:"bytes,3,opt,name=payment_token,json=paymentToken,proto3" json:"payment_token,omitempty"`
	CardType      string `protobuf:"bytes,4,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`
	ExpiryDate    string `protobuf:"bytes,5,opt,name=expiry_date,json=expiryDate,proto3" json:"expiry_date,omitempty"`
	LastFour      string `protobuf:"bytes,6,opt,name=last_four,json=lastFour,proto3" json:"last_four,omitempty"`
	CustomerToken string `protobuf:"bytes,7,opt,name=customer_token,json=customerToken,proto3" json:"customer_token,omitempty"`
	AccountType   string `protobuf:"bytes,8,opt,name=account_type,json=accountType,proto3" json:"account_type,omitempty"`
}

func (x *CreatePaymentMethodRequest) Reset() {
	*x = CreatePaymentMethodRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_serviceship_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePaymentMethodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePaymentMethodRequest) ProtoMessage() {}

func (x *CreatePaymentMethodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_serviceship_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePaymentMethodRequest.ProtoReflect.Descriptor instead.
func (*CreatePaymentMethodRequest) Descriptor() ([]byte, []int) {
	return file_proto_serviceship_service_proto_rawDescGZIP(), []int{22}
}

func (x *CreatePaymentMethodRequest) GetAccountId() int64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *CreatePaymentMethodRequest) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *CreatePaymentMethodRequest) GetPaymentToken() string {
	if x != nil {
		return x.PaymentToken
	}
	return ""
}

func (x *CreatePaymentMethodRequest) GetCardType() string {
	if x != nil {
		return x.CardType
	}
	return ""
}

func (x *CreatePaymentMethodRequest) GetExpiryDate() string {
	if x != nil {
		return x.ExpiryDate
	}
	return ""
}

func (x *CreatePaymentMethodRequest) GetLastFour() string {
	if x != nil {
		return x.LastFour
	}
	return ""
}

func (x *CreatePaymentMethodRequest) GetCustomerToken() string {
	if x != nil {
		return x.CustomerToken
	}
	return ""
}

func (x *CreatePaymentMethodRequest) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

type UpdateSubscriptionPaymentMethod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionId int32 `protobuf:"varint,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	PaymentId      int64 `protobuf:"varint,2,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
}

func (x *UpdateSubscriptionPaymentMethod) Reset() {
	*x = UpdateSubscriptionPaymentMethod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_serviceship_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSubscriptionPaymentMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubscriptionPaymentMethod) ProtoMessage() {}

func (x *UpdateSubscriptionPaymentMethod) ProtoReflect() protoreflect.Message {
	mi := &file_proto_serviceship_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubscriptionPaymentMethod.ProtoReflect.Descriptor instead.
func (*UpdateSubscriptionPaymentMethod) Descriptor() ([]byte, []int) {
	return file_proto_serviceship_service_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateSubscriptionPaymentMethod) GetSubscriptionId() int32 {
	if x != nil {
		return x.SubscriptionId
	}
	return 0
}

func (x *UpdateSubscriptionPaymentMethod) GetPaymentId() int64 {
	if x != nil {
		return x.PaymentId
	}
	return 0
}

type CreatePaymentMethodResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentMethodId int64  `protobuf:"varint,1,opt,name=payment_method_id,json=paymentMethodId,proto3" json:"payment_method_id,omitempty"`
	Message         string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CreatePaymentMethodResponse) Reset() {
	*x = CreatePaymentMethodResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_serviceship_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePaymentMethodResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePaymentMethodResponse) ProtoMessage() {}

func (x *CreatePaymentMethodResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_serviceship_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePaymentMethodResponse.ProtoReflect.Descriptor instead.
func (*CreatePaymentMethodResponse) Descriptor() ([]byte, []int) {
	return file_proto_serviceship_service_proto_rawDescGZIP(), []int{24}
}

func (x *CreatePaymentMethodResponse) GetPaymentMethodId() int64 {
	if x != nil {
		return x.PaymentMethodId
	}
	return 0
}

func (x *CreatePaymentMethodResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UpdateSubscriptionPaymentMethodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionId  int32 `protobuf:"varint,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	PaymentMethodId int64 `protobuf:"varint,2,opt,name=payment_method_id,json=paymentMethodId,proto3" json:"payment_method_id,omitempty"`
}

func (x *UpdateSubscriptionPaymentMethodRequest) Reset() {
	*x = UpdateSubscriptionPaymentMethodRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_serviceship_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSubscriptionPaymentMethodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubscriptionPaymentMethodRequest) ProtoMessage() {}

func (x *UpdateSubscriptionPaymentMethodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_serviceship_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubscriptionPaymentMethodRequest.ProtoReflect.Descriptor instead.
func (*UpdateSubscriptionPaymentMethodRequest) Descriptor() ([]byte, []int) {
	return file_proto_serviceship_service_proto_rawDescGZIP(), []int{25}
}

func (x *UpdateSubscriptionPaymentMethodRequest) GetSubscriptionId() int32 {
	if x != nil {
		return x.SubscriptionId
	}
	return 0
}

func (x *UpdateSubscriptionPaymentMethodRequest) GetPaymentMethodId() int64 {
	if x != nil {
		return x.PaymentMethodId
	}
	return 0
}

type DeletePaymentMethodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId       int64  `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	PaymentMethodId int64  `protobuf:"varint,2,opt,name=payment_method_id,json=paymentMethodId,proto3" json:"payment_method_id,omitempty"`
	AccountType     string `protobuf:"bytes,3,opt,name=account_type,json=accountType,proto3" json:"account_type,omitempty"`
}

func (x *DeletePaymentMethodRequest) Reset() {
	*x = DeletePaymentMethodRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_serviceship_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePaymentMethodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePaymentMethodRequest) ProtoMessage() {}

func (x *DeletePaymentMethodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_serviceship_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePaymentMethodRequest.ProtoReflect.Descriptor instead.
func (*DeletePaymentMethodRequest) Descriptor() ([]byte, []int) {
	return file_proto_serviceship_service_proto_rawDescGZIP(), []int{26}
}

func (x *DeletePaymentMethodRequest) GetAccountId() int64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *DeletePaymentMethodRequest) GetPaymentMethodId() int64 {
	if x != nil {
		return x.PaymentMethodId
	}
	return 0
}

func (x *DeletePaymentMethodRequest) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

type PauseAutoRenewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionId int32 `protobuf:"varint,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
}

func (x *PauseAutoRenewRequest) Reset() {
	*x = PauseAutoRenewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_serviceship_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PauseAutoRenewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseAutoRenewRequest) ProtoMessage() {}

func (x *PauseAutoRenewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_serviceship_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseAutoRenewRequest.ProtoReflect.Descriptor instead.
func (*PauseAutoRenewRequest) Descriptor() ([]byte, []int) {
	return file_proto_serviceship_service_proto_rawDescGZIP(), []int{27}
}

func (x *PauseAutoRenewRequest) GetSubscriptionId() int32 {
	if x != nil {
		return x.SubscriptionId
	}
	return 0
}

type ResumeAutoRenewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionId  int32  `protobuf:"varint,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	Platform        string `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform,omitempty"`
	PaymentToken    string `protobuf:"bytes,3,opt,name=payment_token,json=paymentToken,proto3" json:"payment_token,omitempty"`
	CustomerToken   string `protobuf:"bytes,4,opt,name=customer_token,json=customerToken,proto3" json:"customer_token,omitempty"`
	PaymentMethodId int64  `protobuf:"varint,5,opt,name=payment_method_id,json=paymentMethodId,proto3" json:"payment_method_id,omitempty"`
	AccountType     string `protobuf:"bytes,6,opt,name=account_type,json=accountType,proto3" json:"account_type,omitempty"`
}

func (x *ResumeAutoRenewRequest) Reset() {
	*x = ResumeAutoRenewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_serviceship_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResumeAutoRenewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeAutoRenewRequest) ProtoMessage() {}

func (x *ResumeAutoRenewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_serviceship_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeAutoRenewRequest.ProtoReflect.Descriptor instead.
func (*ResumeAutoRenewRequest) Descriptor() ([]byte, []int) {
	return file_proto_serviceship_service_proto_rawDescGZIP(), []int{28}
}

func (x *ResumeAutoRenewRequest) GetSubscriptionId() int32 {
	if x != nil {
		return x.SubscriptionId
	}
	return 0
}

func (x *ResumeAutoRenewRequest) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *ResumeAutoRenewRequest) GetPaymentToken() string {
	if x != nil {
		return x.PaymentToken
	}
	return ""
}

func (x *ResumeAutoRenewRequest) GetCustomerToken() string {
	if x != nil {
		return x.CustomerToken
	}
	return ""
}

func (x *ResumeAutoRenewRequest) GetPaymentMethodId() int64 {
	if x != nil {
		return x.PaymentMethodId
	}
	return 0
}

func (x *ResumeAutoRenewRequest) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

type UpdateSubscriptionBillingPlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionId int32 `protobuf:"varint,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	BillingPlanId  int64 `protobuf:"varint,2,opt,name=billing_plan_id,json=billingPlanId,proto3" json:"billing_plan_id,omitempty"`
}

func (x *UpdateSubscriptionBillingPlanRequest) Reset() {
	*x = UpdateSubscriptionBillingPlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_serviceship_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSubscriptionBillingPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubscriptionBillingPlanRequest) ProtoMessage() {}

func (x *UpdateSubscriptionBillingPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_serviceship_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubscriptionBillingPlanRequest.ProtoReflect.Descriptor instead.
func (*UpdateSubscriptionBillingPlanRequest) Descriptor() ([]byte, []int) {
	return file_proto_serviceship_service_proto_rawDescGZIP(), []int{29}
}

func (x *UpdateSubscriptionBillingPlanRequest) GetSubscriptionId() int32 {
	if x != nil {
		return x.SubscriptionId
	}
	return 0
}

func (x *UpdateSubscriptionBillingPlanRequest) GetBillingPlanId() int64 {
	if x != nil {
		return x.BillingPlanId
	}
	return 0
}

type UpdateSubscriptionEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email          string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	SubscriptionId int32  `protobuf:"varint,2,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
}

func (x *UpdateSubscriptionEmailRequest) Reset() {
	*x = UpdateSubscriptionEmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_serviceship_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSubscriptionEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubscriptionEmailRequest) ProtoMessage() {}

func (x *UpdateSubscriptionEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_serviceship_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubscriptionEmailRequest.ProtoReflect.Descriptor instead.
func (*UpdateSubscriptionEmailRequest) Descriptor() ([]byte, []int) {
	return file_proto_serviceship_service_proto_rawDescGZIP(), []int{30}
}

func (x *UpdateSubscriptionEmailRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateSubscriptionEmailRequest) GetSubscriptionId() int32 {
	if x != nil {
		return x.SubscriptionId
	}
	return 0
}

type UpdateAllSubscriptionEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email       string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	AccountId   int64  `protobuf:"varint,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	AccountType string `protobuf:"bytes,3,opt,name=account_type,json=accountType,proto3" json:"account_type,omitempty"`
}

func (x *UpdateAllSubscriptionEmailRequest) Reset() {
	*x = UpdateAllSubscriptionEmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_serviceship_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAllSubscriptionEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAllSubscriptionEmailRequest) ProtoMessage() {}

func (x *UpdateAllSubscriptionEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_serviceship_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAllSubscriptionEmailRequest.ProtoReflect.Descriptor instead.
func (*UpdateAllSubscriptionEmailRequest) Descriptor() ([]byte, []int) {
	return file_proto_serviceship_service_proto_rawDescGZIP(), []int{31}
}

func (x *UpdateAllSubscriptionEmailRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateAllSubscriptionEmailRequest) GetAccountId() int64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *UpdateAllSubscriptionEmailRequest) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

type GetSubscriptionTransactionInfosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionId int32 `protobuf:"varint,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
}

func (x *GetSubscriptionTransactionInfosRequest) Reset() {
	*x = GetSubscriptionTransactionInfosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_serviceship_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubscriptionTransactionInfosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscriptionTransactionInfosRequest) ProtoMessage() {}

func (x *GetSubscriptionTransactionInfosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_serviceship_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscriptionTransactionInfosRequest.ProtoReflect.Descriptor instead.
func (*GetSubscriptionTransactionInfosRequest) Descriptor() ([]byte, []int) {
	return file_proto_serviceship_service_proto_rawDescGZIP(), []int{32}
}

func (x *GetSubscriptionTransactionInfosRequest) GetSubscriptionId() int32 {
	if x != nil {
		return x.SubscriptionId
	}
	return 0
}

type GetSubscriptionTransactionInfosResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transactions *TransactionInfos `protobuf:"bytes,1,opt,name=transactions,proto3" json:"transactions,omitempty"`
	Message      string            `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GetSubscriptionTransactionInfosResponse) Reset() {
	*x = GetSubscriptionTransactionInfosResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_serviceship_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubscriptionTransactionInfosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscriptionTransactionInfosResponse) ProtoMessage() {}

func (x *GetSubscriptionTransactionInfosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_serviceship_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscriptionTransactionInfosResponse.ProtoReflect.Descriptor instead.
func (*GetSubscriptionTransactionInfosResponse) Descriptor() ([]byte, []int) {
	return file_proto_serviceship_service_proto_rawDescGZIP(), []int{33}
}

func (x *GetSubscriptionTransactionInfosResponse) GetTransactions() *TransactionInfos {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *GetSubscriptionTransactionInfosResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type TransactionInfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionInfos []*Transaction `protobuf:"bytes,1,rep,name=transaction_infos,json=transactionInfos,proto3" json:"transaction_infos,omitempty"`
}

func (x *TransactionInfos) Reset() {
	*x = TransactionInfos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_serviceship_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionInfos) ProtoMessage() {}

func (x *TransactionInfos) ProtoReflect() protoreflect.Message {
	mi := &file_proto_serviceship_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionInfos.ProtoReflect.Descriptor instead.
func (*TransactionInfos) Descriptor() ([]byte, []int) {
	return file_proto_serviceship_service_proto_rawDescGZIP(), []int{34}
}

func (x *TransactionInfos) GetTransactionInfos() []*Transaction {
	if x != nil {
		return x.TransactionInfos
	}
	return nil
}

type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentType string  `protobuf:"bytes,1,opt,name=payment_type,json=paymentType,proto3" json:"payment_type,omitempty"`
	Amount      float32 `protobuf:"fixed32,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Type        string  `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	LastFour    string  `protobuf:"bytes,4,opt,name=last_four,json=lastFour,proto3" json:"last_four,omitempty"`
	CreatedAt   string  `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Status      string  `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	CardType    string  `protobuf:"bytes,7,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_serviceship_service_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_proto_serviceship_service_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_proto_serviceship_service_proto_rawDescGZIP(), []int{35}
}

func (x *Transaction) GetPaymentType() string {
	if x != nil {
		return x.PaymentType
	}
	return ""
}

func (x *Transaction) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Transaction) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Transaction) GetLastFour() string {
	if x != nil {
		return x.LastFour
	}
	return ""
}

func (x *Transaction) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Transaction) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Transaction) GetCardType() string {
	if x != nil {
		return x.CardType
	}
	return ""
}

type ClinicName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClinicName string `protobuf:"bytes,1,opt,name=clinic_name,json=clinicName,proto3" json:"clinic_name,omitempty"`
}

func (x *ClinicName) Reset() {
	*x = ClinicName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_serviceship_service_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClinicName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClinicName) ProtoMessage() {}

func (x *ClinicName) ProtoReflect() protoreflect.Message {
	mi := &file_proto_serviceship_service_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClinicName.ProtoReflect.Descriptor instead.
func (*ClinicName) Descriptor() ([]byte, []int) {
	return file_proto_serviceship_service_proto_rawDescGZIP(), []int{36}
}

func (x *ClinicName) GetClinicName() string {
	if x != nil {
		return x.ClinicName
	}
	return ""
}

var File_proto_serviceship_service_proto protoreflect.FileDescriptor

var file_proto_serviceship_service_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x68, 0x69, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x13, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9f, 0x02, 0x0a, 0x17, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03,
	0x66, 0x65, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x02, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0d, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43,
	0x79, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x64,
	0x69, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74,
	0x5f, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x72, 0x65,
	0x70, 0x65, 0x61, 0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x2a, 0x0a, 0x11, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x63, 0x61, 0x6c,
	0x6c, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xf0, 0x02, 0x0a,
	0x10, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x26, 0x0a, 0x0f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x2a, 0x0a, 0x11, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x6b, 0x65, 0x65, 0x70, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x6b, 0x65, 0x65, 0x70, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22,
	0x8d, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6f, 0x75, 0x74,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x4f, 0x75, 0x74, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x84, 0x01, 0x0a, 0x18, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4e, 0x0a, 0x0d,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xe0, 0x01, 0x0a, 0x13, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a,
	0x0f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65,
	0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x49, 0x0a, 0x1e, 0x47, 0x65, 0x74,
	0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x22, 0x94, 0x01, 0x0a, 0x18, 0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e,
	0x67, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x5e, 0x0a, 0x15, 0x63, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x63, 0x68, 0x61,
	0x72, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xa6, 0x04, 0x0a, 0x14,
	0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x41, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x72, 0x75, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x61, 0x73,
	0x74, 0x52, 0x75, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x72, 0x75, 0x6e,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x78, 0x74, 0x52, 0x75, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x49, 0x0a, 0x0e, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x22, 0x9c, 0x02, 0x0a, 0x0d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x72,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x66,
	0x6f, 0x75, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x46,
	0x6f, 0x75, 0x72, 0x22, 0x6e, 0x0a, 0x0f, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69,
	0x70, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x41, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x68, 0x69, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x0b, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0xc6, 0x01, 0x0a, 0x0a, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68,
	0x69, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x5f, 0x62, 0x6f, 0x6e, 0x75, 0x73,
	0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x72, 0x65, 0x70,
	0x65, 0x61, 0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x61, 0x74, 0x65, 0x22, 0x36, 0x0a, 0x0d,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x49, 0x44, 0x12, 0x25, 0x0a,
	0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x68,
	0x69, 0x70, 0x49, 0x64, 0x22, 0x6b, 0x0a, 0x0e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68,
	0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3f, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x68, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x0a, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x91, 0x01, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70,
	0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x03, 0x66, 0x65, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x79, 0x63, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x22, 0xb9, 0x01, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x6e, 0x53, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x68, 0x69, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x66, 0x65, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x02, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0d, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43,
	0x79, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x22, 0x87, 0x01, 0x0a, 0x1a, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70,
	0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x4f, 0x0a, 0x0d, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x6c, 0x61, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50,
	0x6c, 0x61, 0x6e, 0x52, 0x0c, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x6e,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x15,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x1f, 0x0a, 0x0d, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x6c,
	0x61, 0x6e, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x20, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x84, 0x01, 0x0a, 0x19, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x68, 0x69, 0x70, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4d, 0x0a, 0x0c, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f,
	0x70, 0x6c, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x42, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x0b, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50,
	0x6c, 0x61, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2f, 0x0a,
	0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x7b,
	0x0a, 0x12, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4b, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xa1, 0x02, 0x0a, 0x1a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61,
	0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x79, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x66, 0x6f, 0x75, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73,
	0x74, 0x46, 0x6f, 0x75, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x21, 0x0a, 0x0c,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x69, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x63, 0x0a, 0x1b, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x7d, 0x0a, 0x26, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x49, 0x64, 0x22, 0x8a,
	0x01, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x40, 0x0a, 0x15, 0x50,
	0x61, 0x75, 0x73, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xf8, 0x01,
	0x0a, 0x16, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x6e, 0x65,
	0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x23, 0x0a,
	0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x77, 0x0a, 0x24, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x6e, 0x49,
	0x64, 0x22, 0x5f, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0x7b, 0x0a, 0x21, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x51, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0x8e, 0x01, 0x0a, 0x27, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49,
	0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x0c, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x61, 0x0a, 0x10, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x4d, 0x0a, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0xcd, 0x01, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x66, 0x6f,
	0x75, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x46, 0x6f,
	0x75, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72,
	0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61,
	0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x22, 0x2d, 0x0a, 0x0a, 0x43, 0x6c, 0x69, 0x6e, 0x69, 0x63,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x6e, 0x69,
	0x63, 0x4e, 0x61, 0x6d, 0x65, 0x32, 0xbe, 0x11, 0x0a, 0x12, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x68, 0x69, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x66, 0x0a, 0x13,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x64, 0x12, 0x1f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6c, 0x69, 0x6e, 0x69, 0x63,
	0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x2c, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x12, 0x25, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53,
	0x69, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x7f, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x33, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2d, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00,
	0x12, 0x7f, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2d, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x00, 0x12, 0x63, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50,
	0x6c, 0x61, 0x6e, 0x12, 0x2a, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x6e, 0x53, 0x65, 0x74, 0x12, 0x30,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x50, 0x6c, 0x61, 0x6e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4c, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x6e, 0x53,
	0x65, 0x74, 0x12, 0x22, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x68, 0x69, 0x70, 0x49, 0x44, 0x1a, 0x2f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x6c,
	0x61, 0x6e, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x12,
	0x22, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61,
	0x6e, 0x49, 0x44, 0x1a, 0x2e, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x68, 0x69, 0x70, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x77, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x42, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x6e, 0x42, 0x79, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x23, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x1a, 0x2e, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x42, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x5e,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x73, 0x12, 0x1e, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x44, 0x1a, 0x27, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x7a,
	0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x2f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x85, 0x01, 0x0a, 0x1f, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x3b,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x6d, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x2f, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x63, 0x0a, 0x0e, 0x50, 0x61, 0x75, 0x73, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65,
	0x6e, 0x65, 0x77, 0x12, 0x2a, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x75, 0x73, 0x65, 0x41,
	0x75, 0x74, 0x6f, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65,
	0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x12, 0x2b, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x69, 0x6d,
	0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x81, 0x01,
	0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x6e, 0x12,
	0x39, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50,
	0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x75, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x33, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7b, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x6c, 0x6c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x36, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x9e, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x3b, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x1d, 0x5a, 0x1b, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x3b, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_serviceship_service_proto_rawDescOnce sync.Once
	file_proto_serviceship_service_proto_rawDescData = file_proto_serviceship_service_proto_rawDesc
)

func file_proto_serviceship_service_proto_rawDescGZIP() []byte {
	file_proto_serviceship_service_proto_rawDescOnce.Do(func() {
		file_proto_serviceship_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_serviceship_service_proto_rawDescData)
	})
	return file_proto_serviceship_service_proto_rawDescData
}

var file_proto_serviceship_service_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_proto_serviceship_service_proto_goTypes = []interface{}{
	(*CreateMembershipRequest)(nil),                 // 0: coresamples_service.CreateMembershipRequest
	(*SubscribeRequest)(nil),                        // 1: coresamples_service.SubscribeRequest
	(*GetAccountSubscriptionsRequest)(nil),          // 2: coresamples_service.GetAccountSubscriptionsRequest
	(*AccountSubscriptionsInfo)(nil),                // 3: coresamples_service.AccountSubscriptionsInfo
	(*AccountSubscription)(nil),                     // 4: coresamples_service.AccountSubscription
	(*GetChargingSubscriptionRequest)(nil),          // 5: coresamples_service.GetChargingSubscriptionRequest
	(*ChargingSubscriptionInfo)(nil),                // 6: coresamples_service.ChargingSubscriptionInfo
	(*ChargingSubscription)(nil),                    // 7: coresamples_service.ChargingSubscription
	(*PaymentMethod)(nil),                           // 8: coresamples_service.PaymentMethod
	(*MembershipsInfo)(nil),                         // 9: coresamples_service.MembershipsInfo
	(*Membership)(nil),                              // 10: coresamples_service.Membership
	(*ServiceshipID)(nil),                           // 11: coresamples_service.ServiceshipID
	(*MembershipInfo)(nil),                          // 12: coresamples_service.MembershipInfo
	(*AddBillingPlanRequest)(nil),                   // 13: coresamples_service.AddBillingPlanRequest
	(*CreateBillingPlanSetRequest)(nil),             // 14: coresamples_service.CreateBillingPlanSetRequest
	(*MembershipBillingPlansInfo)(nil),              // 15: coresamples_service.MembershipBillingPlansInfo
	(*MembershipBillingPlan)(nil),                   // 16: coresamples_service.MembershipBillingPlan
	(*BillingPlanID)(nil),                           // 17: coresamples_service.BillingPlanID
	(*SubscriptionID)(nil),                          // 18: coresamples_service.SubscriptionID
	(*MembershipBillingPlanInfo)(nil),               // 19: coresamples_service.MembershipBillingPlanInfo
	(*AccountID)(nil),                               // 20: coresamples_service.AccountID
	(*PaymentMethodsInfo)(nil),                      // 21: coresamples_service.PaymentMethodsInfo
	(*CreatePaymentMethodRequest)(nil),              // 22: coresamples_service.CreatePaymentMethodRequest
	(*UpdateSubscriptionPaymentMethod)(nil),         // 23: coresamples_service.UpdateSubscriptionPaymentMethod
	(*CreatePaymentMethodResponse)(nil),             // 24: coresamples_service.CreatePaymentMethodResponse
	(*UpdateSubscriptionPaymentMethodRequest)(nil),  // 25: coresamples_service.UpdateSubscriptionPaymentMethodRequest
	(*DeletePaymentMethodRequest)(nil),              // 26: coresamples_service.DeletePaymentMethodRequest
	(*PauseAutoRenewRequest)(nil),                   // 27: coresamples_service.PauseAutoRenewRequest
	(*ResumeAutoRenewRequest)(nil),                  // 28: coresamples_service.ResumeAutoRenewRequest
	(*UpdateSubscriptionBillingPlanRequest)(nil),    // 29: coresamples_service.UpdateSubscriptionBillingPlanRequest
	(*UpdateSubscriptionEmailRequest)(nil),          // 30: coresamples_service.UpdateSubscriptionEmailRequest
	(*UpdateAllSubscriptionEmailRequest)(nil),       // 31: coresamples_service.UpdateAllSubscriptionEmailRequest
	(*GetSubscriptionTransactionInfosRequest)(nil),  // 32: coresamples_service.GetSubscriptionTransactionInfosRequest
	(*GetSubscriptionTransactionInfosResponse)(nil), // 33: coresamples_service.GetSubscriptionTransactionInfosResponse
	(*TransactionInfos)(nil),                        // 34: coresamples_service.TransactionInfos
	(*Transaction)(nil),                             // 35: coresamples_service.Transaction
	(*ClinicName)(nil),                              // 36: coresamples_service.ClinicName
	(*CheckPermissionResponse)(nil),                 // 37: coresamples_service.CheckPermissionResponse
	(*SimpleResponse)(nil),                          // 38: coresamples_service.SimpleResponse
}
var file_proto_serviceship_service_proto_depIdxs = []int32{
	4,  // 0: coresamples_service.AccountSubscriptionsInfo.subscriptions:type_name -> coresamples_service.AccountSubscription
	7,  // 1: coresamples_service.ChargingSubscriptionInfo.charging_subscription:type_name -> coresamples_service.ChargingSubscription
	8,  // 2: coresamples_service.ChargingSubscription.payment_method:type_name -> coresamples_service.PaymentMethod
	10, // 3: coresamples_service.MembershipsInfo.memberships:type_name -> coresamples_service.Membership
	10, // 4: coresamples_service.MembershipInfo.membership:type_name -> coresamples_service.Membership
	16, // 5: coresamples_service.MembershipBillingPlansInfo.billing_plans:type_name -> coresamples_service.MembershipBillingPlan
	16, // 6: coresamples_service.MembershipBillingPlanInfo.billing_plan:type_name -> coresamples_service.MembershipBillingPlan
	8,  // 7: coresamples_service.PaymentMethodsInfo.payment_methods:type_name -> coresamples_service.PaymentMethod
	34, // 8: coresamples_service.GetSubscriptionTransactionInfosResponse.transactions:type_name -> coresamples_service.TransactionInfos
	35, // 9: coresamples_service.TransactionInfos.transaction_infos:type_name -> coresamples_service.Transaction
	36, // 10: coresamples_service.ServiceshipService.SubscriptionAllowed:input_type -> coresamples_service.ClinicName
	1,  // 11: coresamples_service.ServiceshipService.Subscribe:input_type -> coresamples_service.SubscribeRequest
	2,  // 12: coresamples_service.ServiceshipService.GetAccountSubscriptions:input_type -> coresamples_service.GetAccountSubscriptionsRequest
	5,  // 13: coresamples_service.ServiceshipService.GetChargingSubscription:input_type -> coresamples_service.GetChargingSubscriptionRequest
	13, // 14: coresamples_service.ServiceshipService.AddBillingPlan:input_type -> coresamples_service.AddBillingPlanRequest
	14, // 15: coresamples_service.ServiceshipService.CreateBillingPlanSet:input_type -> coresamples_service.CreateBillingPlanSetRequest
	11, // 16: coresamples_service.ServiceshipService.GetLatestBillingPlanSet:input_type -> coresamples_service.ServiceshipID
	17, // 17: coresamples_service.ServiceshipService.GetBillingPlanByID:input_type -> coresamples_service.BillingPlanID
	18, // 18: coresamples_service.ServiceshipService.GetBillingPlanBySubscriptionID:input_type -> coresamples_service.SubscriptionID
	20, // 19: coresamples_service.ServiceshipService.GetPaymentMethods:input_type -> coresamples_service.AccountID
	22, // 20: coresamples_service.ServiceshipService.CreatePaymentMethod:input_type -> coresamples_service.CreatePaymentMethodRequest
	25, // 21: coresamples_service.ServiceshipService.UpdateSubscriptionPaymentMethod:input_type -> coresamples_service.UpdateSubscriptionPaymentMethodRequest
	26, // 22: coresamples_service.ServiceshipService.DeletePaymentMethod:input_type -> coresamples_service.DeletePaymentMethodRequest
	27, // 23: coresamples_service.ServiceshipService.PauseAutoRenew:input_type -> coresamples_service.PauseAutoRenewRequest
	28, // 24: coresamples_service.ServiceshipService.ResumeAutoRenew:input_type -> coresamples_service.ResumeAutoRenewRequest
	29, // 25: coresamples_service.ServiceshipService.UpdateSubscriptionBillingPlan:input_type -> coresamples_service.UpdateSubscriptionBillingPlanRequest
	30, // 26: coresamples_service.ServiceshipService.UpdateSubscriptionEmail:input_type -> coresamples_service.UpdateSubscriptionEmailRequest
	31, // 27: coresamples_service.ServiceshipService.UpdateAllSubscriptionEmail:input_type -> coresamples_service.UpdateAllSubscriptionEmailRequest
	32, // 28: coresamples_service.ServiceshipService.GetSubscriptionTransactionInfos:input_type -> coresamples_service.GetSubscriptionTransactionInfosRequest
	37, // 29: coresamples_service.ServiceshipService.SubscriptionAllowed:output_type -> coresamples_service.CheckPermissionResponse
	38, // 30: coresamples_service.ServiceshipService.Subscribe:output_type -> coresamples_service.SimpleResponse
	3,  // 31: coresamples_service.ServiceshipService.GetAccountSubscriptions:output_type -> coresamples_service.AccountSubscriptionsInfo
	6,  // 32: coresamples_service.ServiceshipService.GetChargingSubscription:output_type -> coresamples_service.ChargingSubscriptionInfo
	38, // 33: coresamples_service.ServiceshipService.AddBillingPlan:output_type -> coresamples_service.SimpleResponse
	38, // 34: coresamples_service.ServiceshipService.CreateBillingPlanSet:output_type -> coresamples_service.SimpleResponse
	15, // 35: coresamples_service.ServiceshipService.GetLatestBillingPlanSet:output_type -> coresamples_service.MembershipBillingPlansInfo
	19, // 36: coresamples_service.ServiceshipService.GetBillingPlanByID:output_type -> coresamples_service.MembershipBillingPlanInfo
	19, // 37: coresamples_service.ServiceshipService.GetBillingPlanBySubscriptionID:output_type -> coresamples_service.MembershipBillingPlanInfo
	21, // 38: coresamples_service.ServiceshipService.GetPaymentMethods:output_type -> coresamples_service.PaymentMethodsInfo
	24, // 39: coresamples_service.ServiceshipService.CreatePaymentMethod:output_type -> coresamples_service.CreatePaymentMethodResponse
	38, // 40: coresamples_service.ServiceshipService.UpdateSubscriptionPaymentMethod:output_type -> coresamples_service.SimpleResponse
	38, // 41: coresamples_service.ServiceshipService.DeletePaymentMethod:output_type -> coresamples_service.SimpleResponse
	38, // 42: coresamples_service.ServiceshipService.PauseAutoRenew:output_type -> coresamples_service.SimpleResponse
	38, // 43: coresamples_service.ServiceshipService.ResumeAutoRenew:output_type -> coresamples_service.SimpleResponse
	38, // 44: coresamples_service.ServiceshipService.UpdateSubscriptionBillingPlan:output_type -> coresamples_service.SimpleResponse
	38, // 45: coresamples_service.ServiceshipService.UpdateSubscriptionEmail:output_type -> coresamples_service.SimpleResponse
	38, // 46: coresamples_service.ServiceshipService.UpdateAllSubscriptionEmail:output_type -> coresamples_service.SimpleResponse
	33, // 47: coresamples_service.ServiceshipService.GetSubscriptionTransactionInfos:output_type -> coresamples_service.GetSubscriptionTransactionInfosResponse
	29, // [29:48] is the sub-list for method output_type
	10, // [10:29] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_proto_serviceship_service_proto_init() }
func file_proto_serviceship_service_proto_init() {
	if File_proto_serviceship_service_proto != nil {
		return
	}
	file_proto_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_serviceship_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMembershipRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_serviceship_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_serviceship_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountSubscriptionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_serviceship_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountSubscriptionsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_serviceship_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountSubscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_serviceship_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChargingSubscriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_serviceship_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChargingSubscriptionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_serviceship_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChargingSubscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_serviceship_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentMethod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_serviceship_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MembershipsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_serviceship_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Membership); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_serviceship_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceshipID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_serviceship_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MembershipInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_serviceship_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBillingPlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_serviceship_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBillingPlanSetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_serviceship_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MembershipBillingPlansInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_serviceship_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MembershipBillingPlan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_serviceship_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BillingPlanID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_serviceship_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscriptionID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_serviceship_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MembershipBillingPlanInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_serviceship_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_serviceship_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentMethodsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_serviceship_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePaymentMethodRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_serviceship_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSubscriptionPaymentMethod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_serviceship_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePaymentMethodResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_serviceship_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSubscriptionPaymentMethodRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_serviceship_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePaymentMethodRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_serviceship_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PauseAutoRenewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_serviceship_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResumeAutoRenewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_serviceship_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSubscriptionBillingPlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_serviceship_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSubscriptionEmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_serviceship_service_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAllSubscriptionEmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_serviceship_service_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubscriptionTransactionInfosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_serviceship_service_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubscriptionTransactionInfosResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_serviceship_service_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionInfos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_serviceship_service_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_serviceship_service_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClinicName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_serviceship_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_serviceship_service_proto_goTypes,
		DependencyIndexes: file_proto_serviceship_service_proto_depIdxs,
		MessageInfos:      file_proto_serviceship_service_proto_msgTypes,
	}.Build()
	File_proto_serviceship_service_proto = out.File
	file_proto_serviceship_service_proto_rawDesc = nil
	file_proto_serviceship_service_proto_goTypes = nil
	file_proto_serviceship_service_proto_depIdxs = nil
}
