// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.1
// source: proto/user_service.proto

package coresamples_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpdateUserInvitationRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerId     int32  `protobuf:"varint,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	InvitationLink string `protobuf:"bytes,2,opt,name=invitation_link,json=invitationLink,proto3" json:"invitation_link,omitempty"`
}

func (x *UpdateUserInvitationRecordRequest) Reset() {
	*x = UpdateUserInvitationRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserInvitationRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserInvitationRecordRequest) ProtoMessage() {}

func (x *UpdateUserInvitationRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserInvitationRecordRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserInvitationRecordRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateUserInvitationRecordRequest) GetCustomerId() int32 {
	if x != nil {
		return x.CustomerId
	}
	return 0
}

func (x *UpdateUserInvitationRecordRequest) GetInvitationLink() string {
	if x != nil {
		return x.InvitationLink
	}
	return ""
}

type UpdateUserInvitationRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code         int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message      string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ErrorMessage string `protobuf:"bytes,3,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
}

func (x *UpdateUserInvitationRecordResponse) Reset() {
	*x = UpdateUserInvitationRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserInvitationRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserInvitationRecordResponse) ProtoMessage() {}

func (x *UpdateUserInvitationRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserInvitationRecordResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserInvitationRecordResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateUserInvitationRecordResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateUserInvitationRecordResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateUserInvitationRecordResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type ForceChangeLoginEmailInternalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token        string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	UserId       string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	EmailLoginId string `protobuf:"bytes,3,opt,name=email_login_id,json=emailLoginId,proto3" json:"email_login_id,omitempty"`
}

func (x *ForceChangeLoginEmailInternalRequest) Reset() {
	*x = ForceChangeLoginEmailInternalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForceChangeLoginEmailInternalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForceChangeLoginEmailInternalRequest) ProtoMessage() {}

func (x *ForceChangeLoginEmailInternalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForceChangeLoginEmailInternalRequest.ProtoReflect.Descriptor instead.
func (*ForceChangeLoginEmailInternalRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{2}
}

func (x *ForceChangeLoginEmailInternalRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ForceChangeLoginEmailInternalRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ForceChangeLoginEmailInternalRequest) GetEmailLoginId() string {
	if x != nil {
		return x.EmailLoginId
	}
	return ""
}

type ForceChangeLoginEmailInternalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code         int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message      string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ErrorMessage string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
}

func (x *ForceChangeLoginEmailInternalResponse) Reset() {
	*x = ForceChangeLoginEmailInternalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForceChangeLoginEmailInternalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForceChangeLoginEmailInternalResponse) ProtoMessage() {}

func (x *ForceChangeLoginEmailInternalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForceChangeLoginEmailInternalResponse.ProtoReflect.Descriptor instead.
func (*ForceChangeLoginEmailInternalResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{3}
}

func (x *ForceChangeLoginEmailInternalResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ForceChangeLoginEmailInternalResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ForceChangeLoginEmailInternalResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type CannySSORequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoginToken string `protobuf:"bytes,1,opt,name=login_token,json=loginToken,proto3" json:"login_token,omitempty"`
}

func (x *CannySSORequest) Reset() {
	*x = CannySSORequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CannySSORequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CannySSORequest) ProtoMessage() {}

func (x *CannySSORequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CannySSORequest.ProtoReflect.Descriptor instead.
func (*CannySSORequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{4}
}

func (x *CannySSORequest) GetLoginToken() string {
	if x != nil {
		return x.LoginToken
	}
	return ""
}

type CannySSOResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message    string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	CannyToken string `protobuf:"bytes,3,opt,name=canny_token,json=cannyToken,proto3" json:"canny_token,omitempty"`
}

func (x *CannySSOResponse) Reset() {
	*x = CannySSOResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CannySSOResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CannySSOResponse) ProtoMessage() {}

func (x *CannySSOResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CannySSOResponse.ProtoReflect.Descriptor instead.
func (*CannySSOResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{5}
}

func (x *CannySSOResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CannySSOResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CannySSOResponse) GetCannyToken() string {
	if x != nil {
		return x.CannyToken
	}
	return ""
}

type CheckWhetherEmailIsUsedAsLoginIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email    string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	ClinicId string `protobuf:"bytes,2,opt,name=clinic_id,json=clinicId,proto3" json:"clinic_id,omitempty"`
}

func (x *CheckWhetherEmailIsUsedAsLoginIdRequest) Reset() {
	*x = CheckWhetherEmailIsUsedAsLoginIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckWhetherEmailIsUsedAsLoginIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckWhetherEmailIsUsedAsLoginIdRequest) ProtoMessage() {}

func (x *CheckWhetherEmailIsUsedAsLoginIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckWhetherEmailIsUsedAsLoginIdRequest.ProtoReflect.Descriptor instead.
func (*CheckWhetherEmailIsUsedAsLoginIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{6}
}

func (x *CheckWhetherEmailIsUsedAsLoginIdRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CheckWhetherEmailIsUsedAsLoginIdRequest) GetClinicId() string {
	if x != nil {
		return x.ClinicId
	}
	return ""
}

type CheckWhetherEmailIsUsedAsLoginIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExistingUser bool   `protobuf:"varint,1,opt,name=existing_user,json=existingUser,proto3" json:"existing_user,omitempty"`
	Message      string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CheckWhetherEmailIsUsedAsLoginIdResponse) Reset() {
	*x = CheckWhetherEmailIsUsedAsLoginIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckWhetherEmailIsUsedAsLoginIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckWhetherEmailIsUsedAsLoginIdResponse) ProtoMessage() {}

func (x *CheckWhetherEmailIsUsedAsLoginIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckWhetherEmailIsUsedAsLoginIdResponse.ProtoReflect.Descriptor instead.
func (*CheckWhetherEmailIsUsedAsLoginIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{7}
}

func (x *CheckWhetherEmailIsUsedAsLoginIdResponse) GetExistingUser() bool {
	if x != nil {
		return x.ExistingUser
	}
	return false
}

func (x *CheckWhetherEmailIsUsedAsLoginIdResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CreateUserLogForInvitedCustomerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvitationLink    string   `protobuf:"bytes,1,opt,name=invitation_link,json=invitationLink,proto3" json:"invitation_link,omitempty"`
	EmailLoginId      string   `protobuf:"bytes,2,opt,name=email_login_id,json=emailLoginId,proto3" json:"email_login_id,omitempty"`
	Password          string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	CustomerFaxNumber string   `protobuf:"bytes,4,opt,name=customer_fax_number,json=customerFaxNumber,proto3" json:"customer_fax_number,omitempty"`
	CustomerWebsite   string   `protobuf:"bytes,5,opt,name=customer_website,json=customerWebsite,proto3" json:"customer_website,omitempty"`
	ReferenalSource   string   `protobuf:"bytes,6,opt,name=referenal_source,json=referenalSource,proto3" json:"referenal_source,omitempty"`
	InterestTests     []string `protobuf:"bytes,7,rep,name=interest_tests,json=interestTests,proto3" json:"interest_tests,omitempty"`
	CustomerPhone     string   `protobuf:"bytes,8,opt,name=customer_phone,json=customerPhone,proto3" json:"customer_phone,omitempty"`
}

func (x *CreateUserLogForInvitedCustomerRequest) Reset() {
	*x = CreateUserLogForInvitedCustomerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserLogForInvitedCustomerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserLogForInvitedCustomerRequest) ProtoMessage() {}

func (x *CreateUserLogForInvitedCustomerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserLogForInvitedCustomerRequest.ProtoReflect.Descriptor instead.
func (*CreateUserLogForInvitedCustomerRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{8}
}

func (x *CreateUserLogForInvitedCustomerRequest) GetInvitationLink() string {
	if x != nil {
		return x.InvitationLink
	}
	return ""
}

func (x *CreateUserLogForInvitedCustomerRequest) GetEmailLoginId() string {
	if x != nil {
		return x.EmailLoginId
	}
	return ""
}

func (x *CreateUserLogForInvitedCustomerRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateUserLogForInvitedCustomerRequest) GetCustomerFaxNumber() string {
	if x != nil {
		return x.CustomerFaxNumber
	}
	return ""
}

func (x *CreateUserLogForInvitedCustomerRequest) GetCustomerWebsite() string {
	if x != nil {
		return x.CustomerWebsite
	}
	return ""
}

func (x *CreateUserLogForInvitedCustomerRequest) GetReferenalSource() string {
	if x != nil {
		return x.ReferenalSource
	}
	return ""
}

func (x *CreateUserLogForInvitedCustomerRequest) GetInterestTests() []string {
	if x != nil {
		return x.InterestTests
	}
	return nil
}

func (x *CreateUserLogForInvitedCustomerRequest) GetCustomerPhone() string {
	if x != nil {
		return x.CustomerPhone
	}
	return ""
}

type CreateUserLogForInvitedCustomerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CreateUserLogForInvitedCustomerResponse) Reset() {
	*x = CreateUserLogForInvitedCustomerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserLogForInvitedCustomerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserLogForInvitedCustomerResponse) ProtoMessage() {}

func (x *CreateUserLogForInvitedCustomerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserLogForInvitedCustomerResponse.ProtoReflect.Descriptor instead.
func (*CreateUserLogForInvitedCustomerResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{9}
}

func (x *CreateUserLogForInvitedCustomerResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateUserLogForInvitedCustomerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type RenewTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JwtToken string `protobuf:"bytes,1,opt,name=jwt_token,json=jwtToken,proto3" json:"jwt_token,omitempty"`
}

func (x *RenewTokenRequest) Reset() {
	*x = RenewTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenewTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenewTokenRequest) ProtoMessage() {}

func (x *RenewTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenewTokenRequest.ProtoReflect.Descriptor instead.
func (*RenewTokenRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{10}
}

func (x *RenewTokenRequest) GetJwtToken() string {
	if x != nil {
		return x.JwtToken
	}
	return ""
}

type RenewTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code           int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message        string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Token          string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"` // This will be empty/null when code is 400
	ExpirationTime string `protobuf:"bytes,4,opt,name=expiration_time,json=expirationTime,proto3" json:"expiration_time,omitempty"`
}

func (x *RenewTokenResponse) Reset() {
	*x = RenewTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenewTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenewTokenResponse) ProtoMessage() {}

func (x *RenewTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenewTokenResponse.ProtoReflect.Descriptor instead.
func (*RenewTokenResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{11}
}

func (x *RenewTokenResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RenewTokenResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RenewTokenResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *RenewTokenResponse) GetExpirationTime() string {
	if x != nil {
		return x.ExpirationTime
	}
	return ""
}

// Request
type AdminLoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JwtToken   string `protobuf:"bytes,1,opt,name=jwt_token,json=jwtToken,proto3" json:"jwt_token,omitempty"`
	Role       string `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
	CustomerId string `protobuf:"bytes,3,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	ClinicId   string `protobuf:"bytes,4,opt,name=clinic_id,json=clinicId,proto3" json:"clinic_id,omitempty"`
}

func (x *AdminLoginRequest) Reset() {
	*x = AdminLoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminLoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminLoginRequest) ProtoMessage() {}

func (x *AdminLoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminLoginRequest.ProtoReflect.Descriptor instead.
func (*AdminLoginRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{12}
}

func (x *AdminLoginRequest) GetJwtToken() string {
	if x != nil {
		return x.JwtToken
	}
	return ""
}

func (x *AdminLoginRequest) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *AdminLoginRequest) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *AdminLoginRequest) GetClinicId() string {
	if x != nil {
		return x.ClinicId
	}
	return ""
}

// Response
type AdminLoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Token   string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *AdminLoginResponse) Reset() {
	*x = AdminLoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminLoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminLoginResponse) ProtoMessage() {}

func (x *AdminLoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminLoginResponse.ProtoReflect.Descriptor instead.
func (*AdminLoginResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{13}
}

func (x *AdminLoginResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AdminLoginResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AdminLoginResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type GetUser2FAContactInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contacts []*User2FAContact `protobuf:"bytes,1,rep,name=contacts,proto3" json:"contacts,omitempty"`
}

func (x *GetUser2FAContactInfoResponse) Reset() {
	*x = GetUser2FAContactInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUser2FAContactInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUser2FAContactInfoResponse) ProtoMessage() {}

func (x *GetUser2FAContactInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUser2FAContactInfoResponse.ProtoReflect.Descriptor instead.
func (*GetUser2FAContactInfoResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{14}
}

func (x *GetUser2FAContactInfoResponse) GetContacts() []*User2FAContact {
	if x != nil {
		return x.Contacts
	}
	return nil
}

type User2FAContact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContactId                 int32  `protobuf:"varint,1,opt,name=contact_id,json=contactId,proto3" json:"contact_id,omitempty"`
	ContactDescription        string `protobuf:"bytes,2,opt,name=contact_description,json=contactDescription,proto3" json:"contact_description,omitempty"`
	ContactDetails            string `protobuf:"bytes,3,opt,name=contact_details,json=contactDetails,proto3" json:"contact_details,omitempty"`
	ContactType               string `protobuf:"bytes,4,opt,name=contact_type,json=contactType,proto3" json:"contact_type,omitempty"`
	IsPrimaryContact          bool   `protobuf:"varint,5,opt,name=is_primary_contact,json=isPrimaryContact,proto3" json:"is_primary_contact,omitempty"`
	Is_2FaContact             bool   `protobuf:"varint,6,opt,name=is_2fa_contact,json=is2faContact,proto3" json:"is_2fa_contact,omitempty"`
	CustomerId                int32  `protobuf:"varint,7,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	PatientId                 int32  `protobuf:"varint,8,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	ClinicId                  int32  `protobuf:"varint,9,opt,name=clinic_id,json=clinicId,proto3" json:"clinic_id,omitempty"`
	InternalUserId            int32  `protobuf:"varint,10,opt,name=internal_user_id,json=internalUserId,proto3" json:"internal_user_id,omitempty"`
	ApplyToAllGroupMember     bool   `protobuf:"varint,11,opt,name=applyToAllGroupMember,proto3" json:"applyToAllGroupMember,omitempty"`
	ContactLevel              int32  `protobuf:"varint,12,opt,name=contact_level,json=contactLevel,proto3" json:"contact_level,omitempty"`
	ContactLevelName          string `protobuf:"bytes,13,opt,name=contact_level_name,json=contactLevelName,proto3" json:"contact_level_name,omitempty"`
	GroupContactId            int32  `protobuf:"varint,14,opt,name=group_contact_id,json=groupContactId,proto3" json:"group_contact_id,omitempty"`
	HasGroupContact           bool   `protobuf:"varint,15,opt,name=hasGroupContact,proto3" json:"hasGroupContact,omitempty"`
	IsGroupContact            bool   `protobuf:"varint,16,opt,name=isGroupContact,proto3" json:"isGroupContact,omitempty"`
	UseAsDefaultCreateContact bool   `protobuf:"varint,17,opt,name=useAsDefaultCreateContact,proto3" json:"useAsDefaultCreateContact,omitempty"`
	UseGroupContact           bool   `protobuf:"varint,18,opt,name=useGroupContact,proto3" json:"useGroupContact,omitempty"`
}

func (x *User2FAContact) Reset() {
	*x = User2FAContact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User2FAContact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User2FAContact) ProtoMessage() {}

func (x *User2FAContact) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User2FAContact.ProtoReflect.Descriptor instead.
func (*User2FAContact) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{15}
}

func (x *User2FAContact) GetContactId() int32 {
	if x != nil {
		return x.ContactId
	}
	return 0
}

func (x *User2FAContact) GetContactDescription() string {
	if x != nil {
		return x.ContactDescription
	}
	return ""
}

func (x *User2FAContact) GetContactDetails() string {
	if x != nil {
		return x.ContactDetails
	}
	return ""
}

func (x *User2FAContact) GetContactType() string {
	if x != nil {
		return x.ContactType
	}
	return ""
}

func (x *User2FAContact) GetIsPrimaryContact() bool {
	if x != nil {
		return x.IsPrimaryContact
	}
	return false
}

func (x *User2FAContact) GetIs_2FaContact() bool {
	if x != nil {
		return x.Is_2FaContact
	}
	return false
}

func (x *User2FAContact) GetCustomerId() int32 {
	if x != nil {
		return x.CustomerId
	}
	return 0
}

func (x *User2FAContact) GetPatientId() int32 {
	if x != nil {
		return x.PatientId
	}
	return 0
}

func (x *User2FAContact) GetClinicId() int32 {
	if x != nil {
		return x.ClinicId
	}
	return 0
}

func (x *User2FAContact) GetInternalUserId() int32 {
	if x != nil {
		return x.InternalUserId
	}
	return 0
}

func (x *User2FAContact) GetApplyToAllGroupMember() bool {
	if x != nil {
		return x.ApplyToAllGroupMember
	}
	return false
}

func (x *User2FAContact) GetContactLevel() int32 {
	if x != nil {
		return x.ContactLevel
	}
	return 0
}

func (x *User2FAContact) GetContactLevelName() string {
	if x != nil {
		return x.ContactLevelName
	}
	return ""
}

func (x *User2FAContact) GetGroupContactId() int32 {
	if x != nil {
		return x.GroupContactId
	}
	return 0
}

func (x *User2FAContact) GetHasGroupContact() bool {
	if x != nil {
		return x.HasGroupContact
	}
	return false
}

func (x *User2FAContact) GetIsGroupContact() bool {
	if x != nil {
		return x.IsGroupContact
	}
	return false
}

func (x *User2FAContact) GetUseAsDefaultCreateContact() bool {
	if x != nil {
		return x.UseAsDefaultCreateContact
	}
	return false
}

func (x *User2FAContact) GetUseGroupContact() bool {
	if x != nil {
		return x.UseGroupContact
	}
	return false
}

type GetUser2FAContactInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *GetUser2FAContactInfoRequest) Reset() {
	*x = GetUser2FAContactInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUser2FAContactInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUser2FAContactInfoRequest) ProtoMessage() {}

func (x *GetUser2FAContactInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUser2FAContactInfoRequest.ProtoReflect.Descriptor instead.
func (*GetUser2FAContactInfoRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{16}
}

func (x *GetUser2FAContactInfoRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type GetUserInformationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // The user_id to look up the user.
}

func (x *GetUserInformationRequest) Reset() {
	*x = GetUserInformationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInformationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInformationRequest) ProtoMessage() {}

func (x *GetUserInformationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInformationRequest.ProtoReflect.Descriptor instead.
func (*GetUserInformationRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{17}
}

func (x *GetUserInformationRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// Message for the getUserInformation response.
type GetUserInformationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId                           int32                `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Username                         string               `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	EmailUserId                      string               `protobuf:"bytes,3,opt,name=email_user_id,json=emailUserId,proto3" json:"email_user_id,omitempty"`
	IsTwoFactorAuthenticationEnabled bool                 `protobuf:"varint,4,opt,name=isTwoFactorAuthenticationEnabled,proto3" json:"isTwoFactorAuthenticationEnabled,omitempty"`
	UserPermission                   string               `protobuf:"bytes,5,opt,name=user_permission,json=userPermission,proto3" json:"user_permission,omitempty"` // This is a string here, but you may want to use an enum or another message type if it's more complex in your actual data model.
	IsActive                         bool                 `protobuf:"varint,6,opt,name=isActive,proto3" json:"isActive,omitempty"`
	ImportedUserWithSaltPassword     bool                 `protobuf:"varint,7,opt,name=imported_user_with_salt_password,json=importedUserWithSaltPassword,proto3" json:"imported_user_with_salt_password,omitempty"` // Assuming it's a boolean from your TypeScript function.
	Customer                         *GetUserInfoCustomer `protobuf:"bytes,8,opt,name=customer,proto3" json:"customer,omitempty"`
}

func (x *GetUserInformationResponse) Reset() {
	*x = GetUserInformationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInformationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInformationResponse) ProtoMessage() {}

func (x *GetUserInformationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInformationResponse.ProtoReflect.Descriptor instead.
func (*GetUserInformationResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{18}
}

func (x *GetUserInformationResponse) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetUserInformationResponse) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GetUserInformationResponse) GetEmailUserId() string {
	if x != nil {
		return x.EmailUserId
	}
	return ""
}

func (x *GetUserInformationResponse) GetIsTwoFactorAuthenticationEnabled() bool {
	if x != nil {
		return x.IsTwoFactorAuthenticationEnabled
	}
	return false
}

func (x *GetUserInformationResponse) GetUserPermission() string {
	if x != nil {
		return x.UserPermission
	}
	return ""
}

func (x *GetUserInformationResponse) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *GetUserInformationResponse) GetImportedUserWithSaltPassword() bool {
	if x != nil {
		return x.ImportedUserWithSaltPassword
	}
	return false
}

func (x *GetUserInformationResponse) GetCustomer() *GetUserInfoCustomer {
	if x != nil {
		return x.Customer
	}
	return nil
}

type GetUserInfoCustomer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerId        int32  `protobuf:"varint,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	CustomerFirstName string `protobuf:"bytes,2,opt,name=customer_first_name,json=customerFirstName,proto3" json:"customer_first_name,omitempty"`
	CustomerLastName  string `protobuf:"bytes,3,opt,name=customer_last_name,json=customerLastName,proto3" json:"customer_last_name,omitempty"`
}

func (x *GetUserInfoCustomer) Reset() {
	*x = GetUserInfoCustomer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoCustomer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoCustomer) ProtoMessage() {}

func (x *GetUserInfoCustomer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoCustomer.ProtoReflect.Descriptor instead.
func (*GetUserInfoCustomer) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{19}
}

func (x *GetUserInfoCustomer) GetCustomerId() int32 {
	if x != nil {
		return x.CustomerId
	}
	return 0
}

func (x *GetUserInfoCustomer) GetCustomerFirstName() string {
	if x != nil {
		return x.CustomerFirstName
	}
	return ""
}

func (x *GetUserInfoCustomer) GetCustomerLastName() string {
	if x != nil {
		return x.CustomerLastName
	}
	return ""
}

// Message for the TurnOff2FASettingPage request.
type TurnOff2FASettingPageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Token    string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *TurnOff2FASettingPageRequest) Reset() {
	*x = TurnOff2FASettingPageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TurnOff2FASettingPageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TurnOff2FASettingPageRequest) ProtoMessage() {}

func (x *TurnOff2FASettingPageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TurnOff2FASettingPageRequest.ProtoReflect.Descriptor instead.
func (*TurnOff2FASettingPageRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{20}
}

func (x *TurnOff2FASettingPageRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *TurnOff2FASettingPageRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// Message for the TurnOff2FASettingPage response.
type TurnOff2FASettingPageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *TurnOff2FASettingPageResponse) Reset() {
	*x = TurnOff2FASettingPageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TurnOff2FASettingPageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TurnOff2FASettingPageResponse) ProtoMessage() {}

func (x *TurnOff2FASettingPageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TurnOff2FASettingPageResponse.ProtoReflect.Descriptor instead.
func (*TurnOff2FASettingPageResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{21}
}

func (x *TurnOff2FASettingPageResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TurnOff2FASettingPageResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Verify2FAVerificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Verify2FAVerificationResponse) Reset() {
	*x = Verify2FAVerificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Verify2FAVerificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Verify2FAVerificationResponse) ProtoMessage() {}

func (x *Verify2FAVerificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Verify2FAVerificationResponse.ProtoReflect.Descriptor instead.
func (*Verify2FAVerificationResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{22}
}

func (x *Verify2FAVerificationResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Verify2FAVerificationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Verify2FAVerificationCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username         string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	VerificationCode string `protobuf:"bytes,2,opt,name=verification_code,json=verificationCode,proto3" json:"verification_code,omitempty"`
	EmailAddress     string `protobuf:"bytes,3,opt,name=email_address,json=emailAddress,proto3" json:"email_address,omitempty"` // Optional
	PhoneNumber      string `protobuf:"bytes,4,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`    // Optional
}

func (x *Verify2FAVerificationCodeRequest) Reset() {
	*x = Verify2FAVerificationCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Verify2FAVerificationCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Verify2FAVerificationCodeRequest) ProtoMessage() {}

func (x *Verify2FAVerificationCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Verify2FAVerificationCodeRequest.ProtoReflect.Descriptor instead.
func (*Verify2FAVerificationCodeRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{23}
}

func (x *Verify2FAVerificationCodeRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Verify2FAVerificationCodeRequest) GetVerificationCode() string {
	if x != nil {
		return x.VerificationCode
	}
	return ""
}

func (x *Verify2FAVerificationCodeRequest) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

func (x *Verify2FAVerificationCodeRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

type Send2FAVerificationCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Send2FAVerificationCodeResponse) Reset() {
	*x = Send2FAVerificationCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Send2FAVerificationCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Send2FAVerificationCodeResponse) ProtoMessage() {}

func (x *Send2FAVerificationCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Send2FAVerificationCodeResponse.ProtoReflect.Descriptor instead.
func (*Send2FAVerificationCodeResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{24}
}

func (x *Send2FAVerificationCodeResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Send2FAVerificationCodeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Send2FAVerificationCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username     string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	EmailAddress string `protobuf:"bytes,2,opt,name=email_address,json=emailAddress,proto3" json:"email_address,omitempty"` // Optional
	PhoneNumber  string `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`    // Optional
}

func (x *Send2FAVerificationCodeRequest) Reset() {
	*x = Send2FAVerificationCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Send2FAVerificationCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Send2FAVerificationCodeRequest) ProtoMessage() {}

func (x *Send2FAVerificationCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Send2FAVerificationCodeRequest.ProtoReflect.Descriptor instead.
func (*Send2FAVerificationCodeRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{25}
}

func (x *Send2FAVerificationCodeRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Send2FAVerificationCodeRequest) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

func (x *Send2FAVerificationCodeRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

type TurnOn2FASettingPageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username         string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Email_2FaAddress string `protobuf:"bytes,2,opt,name=email_2fa_address,json=email2faAddress,proto3" json:"email_2fa_address,omitempty"`
	Phone_2FaNumber  string `protobuf:"bytes,3,opt,name=phone_2fa_number,json=phone2faNumber,proto3" json:"phone_2fa_number,omitempty"`
	Token            string `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *TurnOn2FASettingPageRequest) Reset() {
	*x = TurnOn2FASettingPageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TurnOn2FASettingPageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TurnOn2FASettingPageRequest) ProtoMessage() {}

func (x *TurnOn2FASettingPageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TurnOn2FASettingPageRequest.ProtoReflect.Descriptor instead.
func (*TurnOn2FASettingPageRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{26}
}

func (x *TurnOn2FASettingPageRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *TurnOn2FASettingPageRequest) GetEmail_2FaAddress() string {
	if x != nil {
		return x.Email_2FaAddress
	}
	return ""
}

func (x *TurnOn2FASettingPageRequest) GetPhone_2FaNumber() string {
	if x != nil {
		return x.Phone_2FaNumber
	}
	return ""
}

func (x *TurnOn2FASettingPageRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type TurnOn2FASettingPageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message    string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	OtpauthUrl string `protobuf:"bytes,3,opt,name=otpauthUrl,proto3" json:"otpauthUrl,omitempty"` // If needed, This is Future Feature(QR Code)
}

func (x *TurnOn2FASettingPageResponse) Reset() {
	*x = TurnOn2FASettingPageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TurnOn2FASettingPageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TurnOn2FASettingPageResponse) ProtoMessage() {}

func (x *TurnOn2FASettingPageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TurnOn2FASettingPageResponse.ProtoReflect.Descriptor instead.
func (*TurnOn2FASettingPageResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{27}
}

func (x *TurnOn2FASettingPageResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TurnOn2FASettingPageResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TurnOn2FASettingPageResponse) GetOtpauthUrl() string {
	if x != nil {
		return x.OtpauthUrl
	}
	return ""
}

type Verify2FASetUpContactRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username         string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	VerificationCode string `protobuf:"bytes,2,opt,name=verification_code,json=verificationCode,proto3" json:"verification_code,omitempty"`
	EmailAddress     string `protobuf:"bytes,3,opt,name=email_address,json=emailAddress,proto3" json:"email_address,omitempty"` // Optional
	PhoneNumber      string `protobuf:"bytes,4,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`    // Optional
}

func (x *Verify2FASetUpContactRequest) Reset() {
	*x = Verify2FASetUpContactRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Verify2FASetUpContactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Verify2FASetUpContactRequest) ProtoMessage() {}

func (x *Verify2FASetUpContactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Verify2FASetUpContactRequest.ProtoReflect.Descriptor instead.
func (*Verify2FASetUpContactRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{28}
}

func (x *Verify2FASetUpContactRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Verify2FASetUpContactRequest) GetVerificationCode() string {
	if x != nil {
		return x.VerificationCode
	}
	return ""
}

func (x *Verify2FASetUpContactRequest) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

func (x *Verify2FASetUpContactRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

type Verify2FASetUpContactResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Verify2FASetUpContactResponse) Reset() {
	*x = Verify2FASetUpContactResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Verify2FASetUpContactResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Verify2FASetUpContactResponse) ProtoMessage() {}

func (x *Verify2FASetUpContactResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Verify2FASetUpContactResponse.ProtoReflect.Descriptor instead.
func (*Verify2FASetUpContactResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{29}
}

func (x *Verify2FASetUpContactResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Verify2FASetUpContactResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SendVerify2FASetUpContactInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username     string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	EmailAddress string `protobuf:"bytes,2,opt,name=email_address,json=emailAddress,proto3" json:"email_address,omitempty"` // Optional
	PhoneNumber  string `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`    // Optional
}

func (x *SendVerify2FASetUpContactInfoRequest) Reset() {
	*x = SendVerify2FASetUpContactInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendVerify2FASetUpContactInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendVerify2FASetUpContactInfoRequest) ProtoMessage() {}

func (x *SendVerify2FASetUpContactInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendVerify2FASetUpContactInfoRequest.ProtoReflect.Descriptor instead.
func (*SendVerify2FASetUpContactInfoRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{30}
}

func (x *SendVerify2FASetUpContactInfoRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SendVerify2FASetUpContactInfoRequest) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

func (x *SendVerify2FASetUpContactInfoRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

type SendVerify2FASetUpContactInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SendVerify2FASetUpContactInfoResponse) Reset() {
	*x = SendVerify2FASetUpContactInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendVerify2FASetUpContactInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendVerify2FASetUpContactInfoResponse) ProtoMessage() {}

func (x *SendVerify2FASetUpContactInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendVerify2FASetUpContactInfoResponse.ProtoReflect.Descriptor instead.
func (*SendVerify2FASetUpContactInfoResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{31}
}

func (x *SendVerify2FASetUpContactInfoResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SendVerify2FASetUpContactInfoResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type InitialForgetPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailAddress string `protobuf:"bytes,1,opt,name=email_address,json=emailAddress,proto3" json:"email_address,omitempty"`
}

func (x *InitialForgetPasswordRequest) Reset() {
	*x = InitialForgetPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitialForgetPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitialForgetPasswordRequest) ProtoMessage() {}

func (x *InitialForgetPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitialForgetPasswordRequest.ProtoReflect.Descriptor instead.
func (*InitialForgetPasswordRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{32}
}

func (x *InitialForgetPasswordRequest) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

// Response message
type ForgetPasswordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` // You can expand this to include more data if needed.
}

func (x *ForgetPasswordResponse) Reset() {
	*x = ForgetPasswordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgetPasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgetPasswordResponse) ProtoMessage() {}

func (x *ForgetPasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgetPasswordResponse.ProtoReflect.Descriptor instead.
func (*ForgetPasswordResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{33}
}

func (x *ForgetPasswordResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ForgetPasswordResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Request message
type EmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *EmailRequest) Reset() {
	*x = EmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailRequest) ProtoMessage() {}

func (x *EmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailRequest.ProtoReflect.Descriptor instead.
func (*EmailRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{34}
}

func (x *EmailRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

// Response message
type IsEmailUsedAsLoginIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UsedAsEmailLogId bool   `protobuf:"varint,1,opt,name=used_as_email_log_id,json=usedAsEmailLogId,proto3" json:"used_as_email_log_id,omitempty"`
	Message          string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	UserId           int32  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // consider making this 'optional' if using proto2 syntax
}

func (x *IsEmailUsedAsLoginIdResponse) Reset() {
	*x = IsEmailUsedAsLoginIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsEmailUsedAsLoginIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsEmailUsedAsLoginIdResponse) ProtoMessage() {}

func (x *IsEmailUsedAsLoginIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsEmailUsedAsLoginIdResponse.ProtoReflect.Descriptor instead.
func (*IsEmailUsedAsLoginIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{35}
}

func (x *IsEmailUsedAsLoginIdResponse) GetUsedAsEmailLogId() bool {
	if x != nil {
		return x.UsedAsEmailLogId
	}
	return false
}

func (x *IsEmailUsedAsLoginIdResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *IsEmailUsedAsLoginIdResponse) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type VerifySetUpUserEmailLogInRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token            string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	LogInUserEmail   string `protobuf:"bytes,2,opt,name=log_in_user_email,json=logInUserEmail,proto3" json:"log_in_user_email,omitempty"`
	VerificationCode string `protobuf:"bytes,3,opt,name=verification_code,json=verificationCode,proto3" json:"verification_code,omitempty"`
}

func (x *VerifySetUpUserEmailLogInRequest) Reset() {
	*x = VerifySetUpUserEmailLogInRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifySetUpUserEmailLogInRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifySetUpUserEmailLogInRequest) ProtoMessage() {}

func (x *VerifySetUpUserEmailLogInRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifySetUpUserEmailLogInRequest.ProtoReflect.Descriptor instead.
func (*VerifySetUpUserEmailLogInRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{36}
}

func (x *VerifySetUpUserEmailLogInRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *VerifySetUpUserEmailLogInRequest) GetLogInUserEmail() string {
	if x != nil {
		return x.LogInUserEmail
	}
	return ""
}

func (x *VerifySetUpUserEmailLogInRequest) GetVerificationCode() string {
	if x != nil {
		return x.VerificationCode
	}
	return ""
}

// The response message
type VerifySetUpUserEmailLogInResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *VerifySetUpUserEmailLogInResponse) Reset() {
	*x = VerifySetUpUserEmailLogInResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifySetUpUserEmailLogInResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifySetUpUserEmailLogInResponse) ProtoMessage() {}

func (x *VerifySetUpUserEmailLogInResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifySetUpUserEmailLogInResponse.ProtoReflect.Descriptor instead.
func (*VerifySetUpUserEmailLogInResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{37}
}

func (x *VerifySetUpUserEmailLogInResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *VerifySetUpUserEmailLogInResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Message for the input to the setUpEmailRequest function
type SetUpLoginEmailRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token          string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`                                             // Field for the token
	LogInUserEmail string `protobuf:"bytes,2,opt,name=log_in_user_email,json=logInUserEmail,proto3" json:"log_in_user_email,omitempty"` // Field for the user's email
}

func (x *SetUpLoginEmailRequestRequest) Reset() {
	*x = SetUpLoginEmailRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUpLoginEmailRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUpLoginEmailRequestRequest) ProtoMessage() {}

func (x *SetUpLoginEmailRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUpLoginEmailRequestRequest.ProtoReflect.Descriptor instead.
func (*SetUpLoginEmailRequestRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{38}
}

func (x *SetUpLoginEmailRequestRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *SetUpLoginEmailRequestRequest) GetLogInUserEmail() string {
	if x != nil {
		return x.LogInUserEmail
	}
	return ""
}

// Message for the output of the setUpEmailRequest function
type SetUpLoginEmailRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`      // Field for the status code
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` // Field for the corresponding message
}

func (x *SetUpLoginEmailRequestResponse) Reset() {
	*x = SetUpLoginEmailRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUpLoginEmailRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUpLoginEmailRequestResponse) ProtoMessage() {}

func (x *SetUpLoginEmailRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUpLoginEmailRequestResponse.ProtoReflect.Descriptor instead.
func (*SetUpLoginEmailRequestResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{39}
}

func (x *SetUpLoginEmailRequestResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SetUpLoginEmailRequestResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type TransferCustomerClinicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token    string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	ClinicId string `protobuf:"bytes,2,opt,name=clinic_id,json=clinicId,proto3" json:"clinic_id,omitempty"`
}

func (x *TransferCustomerClinicRequest) Reset() {
	*x = TransferCustomerClinicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferCustomerClinicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferCustomerClinicRequest) ProtoMessage() {}

func (x *TransferCustomerClinicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferCustomerClinicRequest.ProtoReflect.Descriptor instead.
func (*TransferCustomerClinicRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{40}
}

func (x *TransferCustomerClinicRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *TransferCustomerClinicRequest) GetClinicId() string {
	if x != nil {
		return x.ClinicId
	}
	return ""
}

// Response for transferring customer's clinic
type TransferCustomerClinicResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token      string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	StatusCode string `protobuf:"bytes,2,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
}

func (x *TransferCustomerClinicResponse) Reset() {
	*x = TransferCustomerClinicResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferCustomerClinicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferCustomerClinicResponse) ProtoMessage() {}

func (x *TransferCustomerClinicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferCustomerClinicResponse.ProtoReflect.Descriptor instead.
func (*TransferCustomerClinicResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{41}
}

func (x *TransferCustomerClinicResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *TransferCustomerClinicResponse) GetStatusCode() string {
	if x != nil {
		return x.StatusCode
	}
	return ""
}

type ForgetPasswordRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username      string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	RequestMethod string `protobuf:"bytes,2,opt,name=request_method,json=requestMethod,proto3" json:"request_method,omitempty"`
	RequestTarget string `protobuf:"bytes,3,opt,name=request_target,json=requestTarget,proto3" json:"request_target,omitempty"`
}

func (x *ForgetPasswordRequestRequest) Reset() {
	*x = ForgetPasswordRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgetPasswordRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgetPasswordRequestRequest) ProtoMessage() {}

func (x *ForgetPasswordRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgetPasswordRequestRequest.ProtoReflect.Descriptor instead.
func (*ForgetPasswordRequestRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{42}
}

func (x *ForgetPasswordRequestRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ForgetPasswordRequestRequest) GetRequestMethod() string {
	if x != nil {
		return x.RequestMethod
	}
	return ""
}

func (x *ForgetPasswordRequestRequest) GetRequestTarget() string {
	if x != nil {
		return x.RequestTarget
	}
	return ""
}

type ForgetPasswordRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ForgetPasswordRequestResponse) Reset() {
	*x = ForgetPasswordRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgetPasswordRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgetPasswordRequestResponse) ProtoMessage() {}

func (x *ForgetPasswordRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgetPasswordRequestResponse.ProtoReflect.Descriptor instead.
func (*ForgetPasswordRequestResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{43}
}

func (x *ForgetPasswordRequestResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ForgetPasswordRequestResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ForgetPasswordRequestMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username         string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	VerificationCode string `protobuf:"bytes,2,opt,name=verification_code,json=verificationCode,proto3" json:"verification_code,omitempty"`
	NewPassword      string `protobuf:"bytes,3,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
}

func (x *ForgetPasswordRequestMessage) Reset() {
	*x = ForgetPasswordRequestMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgetPasswordRequestMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgetPasswordRequestMessage) ProtoMessage() {}

func (x *ForgetPasswordRequestMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgetPasswordRequestMessage.ProtoReflect.Descriptor instead.
func (*ForgetPasswordRequestMessage) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{44}
}

func (x *ForgetPasswordRequestMessage) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ForgetPasswordRequestMessage) GetVerificationCode() string {
	if x != nil {
		return x.VerificationCode
	}
	return ""
}

func (x *ForgetPasswordRequestMessage) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

type ForgetPasswordVerifyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ForgetPasswordVerifyResponse) Reset() {
	*x = ForgetPasswordVerifyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgetPasswordVerifyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgetPasswordVerifyResponse) ProtoMessage() {}

func (x *ForgetPasswordVerifyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgetPasswordVerifyResponse.ProtoReflect.Descriptor instead.
func (*ForgetPasswordVerifyResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{45}
}

func (x *ForgetPasswordVerifyResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ForgetPasswordVerifyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ForgetPasswordRequestCheckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username      string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	RequestTarget string `protobuf:"bytes,2,opt,name=request_target,json=requestTarget,proto3" json:"request_target,omitempty"`
}

func (x *ForgetPasswordRequestCheckRequest) Reset() {
	*x = ForgetPasswordRequestCheckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgetPasswordRequestCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgetPasswordRequestCheckRequest) ProtoMessage() {}

func (x *ForgetPasswordRequestCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgetPasswordRequestCheckRequest.ProtoReflect.Descriptor instead.
func (*ForgetPasswordRequestCheckRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{46}
}

func (x *ForgetPasswordRequestCheckRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ForgetPasswordRequestCheckRequest) GetRequestTarget() string {
	if x != nil {
		return x.RequestTarget
	}
	return ""
}

type ForgetPasswordCheckRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ForgetPasswordCheckRequestResponse) Reset() {
	*x = ForgetPasswordCheckRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgetPasswordCheckRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgetPasswordCheckRequestResponse) ProtoMessage() {}

func (x *ForgetPasswordCheckRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgetPasswordCheckRequestResponse.ProtoReflect.Descriptor instead.
func (*ForgetPasswordCheckRequestResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{47}
}

func (x *ForgetPasswordCheckRequestResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ForgetPasswordCheckRequestResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Send2FATokenRequestMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username      string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	RequestMethod string `protobuf:"bytes,2,opt,name=request_method,json=requestMethod,proto3" json:"request_method,omitempty"`
	RequestTarget string `protobuf:"bytes,3,opt,name=request_target,json=requestTarget,proto3" json:"request_target,omitempty"`
}

func (x *Send2FATokenRequestMessage) Reset() {
	*x = Send2FATokenRequestMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Send2FATokenRequestMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Send2FATokenRequestMessage) ProtoMessage() {}

func (x *Send2FATokenRequestMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Send2FATokenRequestMessage.ProtoReflect.Descriptor instead.
func (*Send2FATokenRequestMessage) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{48}
}

func (x *Send2FATokenRequestMessage) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Send2FATokenRequestMessage) GetRequestMethod() string {
	if x != nil {
		return x.RequestMethod
	}
	return ""
}

func (x *Send2FATokenRequestMessage) GetRequestTarget() string {
	if x != nil {
		return x.RequestTarget
	}
	return ""
}

type Send2FATokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Send2FATokenResponse) Reset() {
	*x = Send2FATokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Send2FATokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Send2FATokenResponse) ProtoMessage() {}

func (x *Send2FATokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Send2FATokenResponse.ProtoReflect.Descriptor instead.
func (*Send2FATokenResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{49}
}

func (x *Send2FATokenResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Send2FATokenResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type TransferLISTokenToPortalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JwtToken   string `protobuf:"bytes,1,opt,name=jwt_token,json=jwtToken,proto3" json:"jwt_token,omitempty"`
	CustomerId string `protobuf:"bytes,2,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	ClinicId   string `protobuf:"bytes,3,opt,name=clinic_id,json=clinicId,proto3" json:"clinic_id,omitempty"`
	Role       string `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *TransferLISTokenToPortalRequest) Reset() {
	*x = TransferLISTokenToPortalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferLISTokenToPortalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferLISTokenToPortalRequest) ProtoMessage() {}

func (x *TransferLISTokenToPortalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferLISTokenToPortalRequest.ProtoReflect.Descriptor instead.
func (*TransferLISTokenToPortalRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{50}
}

func (x *TransferLISTokenToPortalRequest) GetJwtToken() string {
	if x != nil {
		return x.JwtToken
	}
	return ""
}

func (x *TransferLISTokenToPortalRequest) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *TransferLISTokenToPortalRequest) GetClinicId() string {
	if x != nil {
		return x.ClinicId
	}
	return ""
}

func (x *TransferLISTokenToPortalRequest) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type TransferLISTokenToPortalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode string `protobuf:"bytes,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Token      string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *TransferLISTokenToPortalResponse) Reset() {
	*x = TransferLISTokenToPortalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferLISTokenToPortalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferLISTokenToPortalResponse) ProtoMessage() {}

func (x *TransferLISTokenToPortalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferLISTokenToPortalResponse.ProtoReflect.Descriptor instead.
func (*TransferLISTokenToPortalResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{51}
}

func (x *TransferLISTokenToPortalResponse) GetStatusCode() string {
	if x != nil {
		return x.StatusCode
	}
	return ""
}

func (x *TransferLISTokenToPortalResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type UpdatePasswordByOldPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	OldPassword string `protobuf:"bytes,2,opt,name=old_password,json=oldPassword,proto3" json:"old_password,omitempty"`
	NewPassword string `protobuf:"bytes,3,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
	TwofaCode   string `protobuf:"bytes,4,opt,name=twofa_code,json=twofaCode,proto3" json:"twofa_code,omitempty"`
}

func (x *UpdatePasswordByOldPasswordRequest) Reset() {
	*x = UpdatePasswordByOldPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePasswordByOldPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePasswordByOldPasswordRequest) ProtoMessage() {}

func (x *UpdatePasswordByOldPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePasswordByOldPasswordRequest.ProtoReflect.Descriptor instead.
func (*UpdatePasswordByOldPasswordRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{52}
}

func (x *UpdatePasswordByOldPasswordRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdatePasswordByOldPasswordRequest) GetOldPassword() string {
	if x != nil {
		return x.OldPassword
	}
	return ""
}

func (x *UpdatePasswordByOldPasswordRequest) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

func (x *UpdatePasswordByOldPasswordRequest) GetTwofaCode() string {
	if x != nil {
		return x.TwofaCode
	}
	return ""
}

type UpdateUserPasswordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Token   string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateUserPasswordResponse) Reset() {
	*x = UpdateUserPasswordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserPasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserPasswordResponse) ProtoMessage() {}

func (x *UpdateUserPasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserPasswordResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserPasswordResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{53}
}

func (x *UpdateUserPasswordResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateUserPasswordResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *UpdateUserPasswordResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetUserInfoByRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserRole string `protobuf:"bytes,2,opt,name=user_role,json=userRole,proto3" json:"user_role,omitempty"`
}

func (x *GetUserInfoByRoleRequest) Reset() {
	*x = GetUserInfoByRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoByRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoByRoleRequest) ProtoMessage() {}

func (x *GetUserInfoByRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoByRoleRequest.ProtoReflect.Descriptor instead.
func (*GetUserInfoByRoleRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{54}
}

func (x *GetUserInfoByRoleRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserInfoByRoleRequest) GetUserRole() string {
	if x != nil {
		return x.UserRole
	}
	return ""
}

type GetUserInfoByRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         int32         `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Username       string        `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	UserGroup      string        `protobuf:"bytes,3,opt,name=user_group,json=userGroup,proto3" json:"user_group,omitempty"`
	UserPermission string        `protobuf:"bytes,4,opt,name=user_permission,json=userPermission,proto3" json:"user_permission,omitempty"`
	IsActive       bool          `protobuf:"varint,5,opt,name=isActive,proto3" json:"isActive,omitempty"`
	Customer       *UserCustomer `protobuf:"bytes,6,opt,name=customer,proto3" json:"customer,omitempty"`
	Clinic         *UserClinic   `protobuf:"bytes,7,opt,name=clinic,proto3" json:"clinic,omitempty"`
	Internal       *UserInternal `protobuf:"bytes,8,opt,name=internal,proto3" json:"internal,omitempty"`
	Patient        *UserPatient  `protobuf:"bytes,9,opt,name=patient,proto3" json:"patient,omitempty"`
	RequestedBy    string        `protobuf:"bytes,10,opt,name=requested_by,json=requestedBy,proto3" json:"requested_by,omitempty"`
}

func (x *GetUserInfoByRoleResponse) Reset() {
	*x = GetUserInfoByRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoByRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoByRoleResponse) ProtoMessage() {}

func (x *GetUserInfoByRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoByRoleResponse.ProtoReflect.Descriptor instead.
func (*GetUserInfoByRoleResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{55}
}

func (x *GetUserInfoByRoleResponse) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetUserInfoByRoleResponse) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GetUserInfoByRoleResponse) GetUserGroup() string {
	if x != nil {
		return x.UserGroup
	}
	return ""
}

func (x *GetUserInfoByRoleResponse) GetUserPermission() string {
	if x != nil {
		return x.UserPermission
	}
	return ""
}

func (x *GetUserInfoByRoleResponse) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *GetUserInfoByRoleResponse) GetCustomer() *UserCustomer {
	if x != nil {
		return x.Customer
	}
	return nil
}

func (x *GetUserInfoByRoleResponse) GetClinic() *UserClinic {
	if x != nil {
		return x.Clinic
	}
	return nil
}

func (x *GetUserInfoByRoleResponse) GetInternal() *UserInternal {
	if x != nil {
		return x.Internal
	}
	return nil
}

func (x *GetUserInfoByRoleResponse) GetPatient() *UserPatient {
	if x != nil {
		return x.Patient
	}
	return nil
}

func (x *GetUserInfoByRoleResponse) GetRequestedBy() string {
	if x != nil {
		return x.RequestedBy
	}
	return ""
}

type UserCustomer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerId         int32  `protobuf:"varint,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	CustomerFirstName  string `protobuf:"bytes,2,opt,name=customer_first_name,json=customerFirstName,proto3" json:"customer_first_name,omitempty"`
	CustomerLastName   string `protobuf:"bytes,3,opt,name=customer_last_name,json=customerLastName,proto3" json:"customer_last_name,omitempty"`
	CustomerMiddleName string `protobuf:"bytes,4,opt,name=customer_middle_name,json=customerMiddleName,proto3" json:"customer_middle_name,omitempty"`
}

func (x *UserCustomer) Reset() {
	*x = UserCustomer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCustomer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCustomer) ProtoMessage() {}

func (x *UserCustomer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCustomer.ProtoReflect.Descriptor instead.
func (*UserCustomer) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{56}
}

func (x *UserCustomer) GetCustomerId() int32 {
	if x != nil {
		return x.CustomerId
	}
	return 0
}

func (x *UserCustomer) GetCustomerFirstName() string {
	if x != nil {
		return x.CustomerFirstName
	}
	return ""
}

func (x *UserCustomer) GetCustomerLastName() string {
	if x != nil {
		return x.CustomerLastName
	}
	return ""
}

func (x *UserCustomer) GetCustomerMiddleName() string {
	if x != nil {
		return x.CustomerMiddleName
	}
	return ""
}

type UserClinic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClinicId   int32  `protobuf:"varint,1,opt,name=clinic_id,json=clinicId,proto3" json:"clinic_id,omitempty"`
	ClinicName string `protobuf:"bytes,2,opt,name=clinic_name,json=clinicName,proto3" json:"clinic_name,omitempty"`
}

func (x *UserClinic) Reset() {
	*x = UserClinic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserClinic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserClinic) ProtoMessage() {}

func (x *UserClinic) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserClinic.ProtoReflect.Descriptor instead.
func (*UserClinic) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{57}
}

func (x *UserClinic) GetClinicId() int32 {
	if x != nil {
		return x.ClinicId
	}
	return 0
}

func (x *UserClinic) GetClinicName() string {
	if x != nil {
		return x.ClinicName
	}
	return ""
}

type UserInternal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InternalUserId         int32  `protobuf:"varint,1,opt,name=internal_user_id,json=internalUserId,proto3" json:"internal_user_id,omitempty"`
	InternalUserRole       string `protobuf:"bytes,2,opt,name=internal_user_role,json=internalUserRole,proto3" json:"internal_user_role,omitempty"`
	InternalUserRoleId     int32  `protobuf:"varint,3,opt,name=internal_user_role_id,json=internalUserRoleId,proto3" json:"internal_user_role_id,omitempty"`
	InternalUserFirstname  string `protobuf:"bytes,4,opt,name=internal_user_firstname,json=internalUserFirstname,proto3" json:"internal_user_firstname,omitempty"`
	InternalUserLastname   string `protobuf:"bytes,5,opt,name=internal_user_lastname,json=internalUserLastname,proto3" json:"internal_user_lastname,omitempty"`
	InternalUserMiddlename string `protobuf:"bytes,6,opt,name=internal_user_middlename,json=internalUserMiddlename,proto3" json:"internal_user_middlename,omitempty"`
}

func (x *UserInternal) Reset() {
	*x = UserInternal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInternal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInternal) ProtoMessage() {}

func (x *UserInternal) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInternal.ProtoReflect.Descriptor instead.
func (*UserInternal) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{58}
}

func (x *UserInternal) GetInternalUserId() int32 {
	if x != nil {
		return x.InternalUserId
	}
	return 0
}

func (x *UserInternal) GetInternalUserRole() string {
	if x != nil {
		return x.InternalUserRole
	}
	return ""
}

func (x *UserInternal) GetInternalUserRoleId() int32 {
	if x != nil {
		return x.InternalUserRoleId
	}
	return 0
}

func (x *UserInternal) GetInternalUserFirstname() string {
	if x != nil {
		return x.InternalUserFirstname
	}
	return ""
}

func (x *UserInternal) GetInternalUserLastname() string {
	if x != nil {
		return x.InternalUserLastname
	}
	return ""
}

func (x *UserInternal) GetInternalUserMiddlename() string {
	if x != nil {
		return x.InternalUserMiddlename
	}
	return ""
}

type UserPatient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PatientId         int32  `protobuf:"varint,1,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	PatientFirstName  string `protobuf:"bytes,2,opt,name=patient_first_name,json=patientFirstName,proto3" json:"patient_first_name,omitempty"`
	PatientLastName   string `protobuf:"bytes,3,opt,name=patient_last_name,json=patientLastName,proto3" json:"patient_last_name,omitempty"`
	PatientMiddleName string `protobuf:"bytes,4,opt,name=patient_middle_name,json=patientMiddleName,proto3" json:"patient_middle_name,omitempty"`
}

func (x *UserPatient) Reset() {
	*x = UserPatient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPatient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPatient) ProtoMessage() {}

func (x *UserPatient) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPatient.ProtoReflect.Descriptor instead.
func (*UserPatient) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{59}
}

func (x *UserPatient) GetPatientId() int32 {
	if x != nil {
		return x.PatientId
	}
	return 0
}

func (x *UserPatient) GetPatientFirstName() string {
	if x != nil {
		return x.PatientFirstName
	}
	return ""
}

func (x *UserPatient) GetPatientLastName() string {
	if x != nil {
		return x.PatientLastName
	}
	return ""
}

func (x *UserPatient) GetPatientMiddleName() string {
	if x != nil {
		return x.PatientMiddleName
	}
	return ""
}

type LogInRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username      string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password      string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	RememberMe    bool   `protobuf:"varint,3,opt,name=remember_me,json=rememberMe,proto3" json:"remember_me,omitempty"`
	TwoFactorCode string `protobuf:"bytes,4,opt,name=two_factor_code,json=twoFactorCode,proto3" json:"two_factor_code,omitempty"`
	LoginIp       string `protobuf:"bytes,5,opt,name=login_ip,json=loginIp,proto3" json:"login_ip,omitempty"`
	LoginDeviceId string `protobuf:"bytes,6,opt,name=login_device_id,json=loginDeviceId,proto3" json:"login_device_id,omitempty"`
}

func (x *LogInRequest) Reset() {
	*x = LogInRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogInRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogInRequest) ProtoMessage() {}

func (x *LogInRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogInRequest.ProtoReflect.Descriptor instead.
func (*LogInRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{60}
}

func (x *LogInRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LogInRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *LogInRequest) GetRememberMe() bool {
	if x != nil {
		return x.RememberMe
	}
	return false
}

func (x *LogInRequest) GetTwoFactorCode() string {
	if x != nil {
		return x.TwoFactorCode
	}
	return ""
}

func (x *LogInRequest) GetLoginIp() string {
	if x != nil {
		return x.LoginIp
	}
	return ""
}

func (x *LogInRequest) GetLoginDeviceId() string {
	if x != nil {
		return x.LoginDeviceId
	}
	return ""
}

type LogInResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token               string            `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Message             string            `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Code                string            `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	CustomerId          string            `protobuf:"bytes,4,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	IsEmailIdSetUp      bool              `protobuf:"varint,5,opt,name=is_email_id_set_up,json=isEmailIdSetUp,proto3" json:"is_email_id_set_up,omitempty"`
	User_2FaContact     []*User2FAContact `protobuf:"bytes,6,rep,name=user_2fa_contact,json=user2faContact,proto3" json:"user_2fa_contact,omitempty"`
	ExpirationTime      string            `protobuf:"bytes,7,opt,name=expiration_time,json=expirationTime,proto3" json:"expiration_time,omitempty"`
	HasAdminPanelAccess bool              `protobuf:"varint,8,opt,name=hasAdminPanelAccess,proto3" json:"hasAdminPanelAccess,omitempty"`
}

func (x *LogInResponse) Reset() {
	*x = LogInResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogInResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogInResponse) ProtoMessage() {}

func (x *LogInResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogInResponse.ProtoReflect.Descriptor instead.
func (*LogInResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{61}
}

func (x *LogInResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *LogInResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LogInResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *LogInResponse) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *LogInResponse) GetIsEmailIdSetUp() bool {
	if x != nil {
		return x.IsEmailIdSetUp
	}
	return false
}

func (x *LogInResponse) GetUser_2FaContact() []*User2FAContact {
	if x != nil {
		return x.User_2FaContact
	}
	return nil
}

func (x *LogInResponse) GetExpirationTime() string {
	if x != nil {
		return x.ExpirationTime
	}
	return ""
}

func (x *LogInResponse) GetHasAdminPanelAccess() bool {
	if x != nil {
		return x.HasAdminPanelAccess
	}
	return false
}

type UserChangeEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId           string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	NewEmailUserId   string `protobuf:"bytes,2,opt,name=new_email_user_id,json=newEmailUserId,proto3" json:"new_email_user_id,omitempty"`
	VerificationCode string `protobuf:"bytes,3,opt,name=verification_code,json=verificationCode,proto3" json:"verification_code,omitempty"`
}

func (x *UserChangeEmailRequest) Reset() {
	*x = UserChangeEmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserChangeEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserChangeEmailRequest) ProtoMessage() {}

func (x *UserChangeEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserChangeEmailRequest.ProtoReflect.Descriptor instead.
func (*UserChangeEmailRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{62}
}

func (x *UserChangeEmailRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserChangeEmailRequest) GetNewEmailUserId() string {
	if x != nil {
		return x.NewEmailUserId
	}
	return ""
}

func (x *UserChangeEmailRequest) GetVerificationCode() string {
	if x != nil {
		return x.VerificationCode
	}
	return ""
}

// Response message for userChangeEmailLogInID
type UserChangeEmailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UserChangeEmailResponse) Reset() {
	*x = UserChangeEmailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserChangeEmailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserChangeEmailResponse) ProtoMessage() {}

func (x *UserChangeEmailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserChangeEmailResponse.ProtoReflect.Descriptor instead.
func (*UserChangeEmailResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{63}
}

func (x *UserChangeEmailResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UserChangeEmailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type AdminLoginSearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users        []*AdminLoginSearchResponse_User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	ErrorMessage string                           `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
}

func (x *AdminLoginSearchResponse) Reset() {
	*x = AdminLoginSearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminLoginSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminLoginSearchResponse) ProtoMessage() {}

func (x *AdminLoginSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminLoginSearchResponse.ProtoReflect.Descriptor instead.
func (*AdminLoginSearchResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{64}
}

func (x *AdminLoginSearchResponse) GetUsers() []*AdminLoginSearchResponse_User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *AdminLoginSearchResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type AdminLoginSearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JwtToken string `protobuf:"bytes,1,opt,name=jwt_token,json=jwtToken,proto3" json:"jwt_token,omitempty"`
	// int32 page = 2;
	// int32 perPage = 3;
	Username     string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"` // These are optional fields in the function
	SampleId     string `protobuf:"bytes,3,opt,name=sample_id,json=sampleId,proto3" json:"sample_id,omitempty"`
	CustomerId   string `protobuf:"bytes,4,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	CustomerName string `protobuf:"bytes,5,opt,name=customer_name,json=customerName,proto3" json:"customer_name,omitempty"`
	ClinicId     string `protobuf:"bytes,6,opt,name=clinic_id,json=clinicId,proto3" json:"clinic_id,omitempty"`
	ClinicName   string `protobuf:"bytes,7,opt,name=clinic_name,json=clinicName,proto3" json:"clinic_name,omitempty"`
}

func (x *AdminLoginSearchRequest) Reset() {
	*x = AdminLoginSearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminLoginSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminLoginSearchRequest) ProtoMessage() {}

func (x *AdminLoginSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminLoginSearchRequest.ProtoReflect.Descriptor instead.
func (*AdminLoginSearchRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{65}
}

func (x *AdminLoginSearchRequest) GetJwtToken() string {
	if x != nil {
		return x.JwtToken
	}
	return ""
}

func (x *AdminLoginSearchRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AdminLoginSearchRequest) GetSampleId() string {
	if x != nil {
		return x.SampleId
	}
	return ""
}

func (x *AdminLoginSearchRequest) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *AdminLoginSearchRequest) GetCustomerName() string {
	if x != nil {
		return x.CustomerName
	}
	return ""
}

func (x *AdminLoginSearchRequest) GetClinicId() string {
	if x != nil {
		return x.ClinicId
	}
	return ""
}

func (x *AdminLoginSearchRequest) GetClinicName() string {
	if x != nil {
		return x.ClinicName
	}
	return ""
}

type CustomerOfficeAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressId                 int32  `protobuf:"varint,1,opt,name=address_id,json=addressId,proto3" json:"address_id,omitempty"`
	AddressType               string `protobuf:"bytes,2,opt,name=address_type,json=addressType,proto3" json:"address_type,omitempty"`
	StreetAddress             string `protobuf:"bytes,3,opt,name=street_address,json=streetAddress,proto3" json:"street_address,omitempty"`
	AptPo                     string `protobuf:"bytes,4,opt,name=apt_po,json=aptPo,proto3" json:"apt_po,omitempty"`
	City                      string `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	State                     string `protobuf:"bytes,6,opt,name=state,proto3" json:"state,omitempty"`
	Zipcode                   string `protobuf:"bytes,7,opt,name=zipcode,proto3" json:"zipcode,omitempty"`
	Country                   string `protobuf:"bytes,8,opt,name=country,proto3" json:"country,omitempty"`
	AddressConfirmed          bool   `protobuf:"varint,9,opt,name=address_confirmed,json=addressConfirmed,proto3" json:"address_confirmed,omitempty"`
	IsPrimaryAddress          bool   `protobuf:"varint,10,opt,name=is_primary_address,json=isPrimaryAddress,proto3" json:"is_primary_address,omitempty"`
	CustomerId                int32  `protobuf:"varint,11,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	PatientId                 int32  `protobuf:"varint,12,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	ClinicId                  int32  `protobuf:"varint,13,opt,name=clinic_id,json=clinicId,proto3" json:"clinic_id,omitempty"`
	InternalUserId            int32  `protobuf:"varint,14,opt,name=internal_user_id,json=internalUserId,proto3" json:"internal_user_id,omitempty"`
	AddressLevel              int32  `protobuf:"varint,15,opt,name=address_level,json=addressLevel,proto3" json:"address_level,omitempty"`
	AddressLevelName          string `protobuf:"bytes,16,opt,name=address_level_name,json=addressLevelName,proto3" json:"address_level_name,omitempty"`
	ApplyToAllGroupMember     bool   `protobuf:"varint,17,opt,name=applyToAllGroupMember,proto3" json:"applyToAllGroupMember,omitempty"`
	GroupAddressId            int32  `protobuf:"varint,18,opt,name=group_address_id,json=groupAddressId,proto3" json:"group_address_id,omitempty"`
	HasGroupAddress           bool   `protobuf:"varint,19,opt,name=hasGroupAddress,proto3" json:"hasGroupAddress,omitempty"`
	IsGroupAddress            bool   `protobuf:"varint,20,opt,name=isGroupAddress,proto3" json:"isGroupAddress,omitempty"`
	UseAsDefaultCreateAddress bool   `protobuf:"varint,21,opt,name=useAsDefaultCreateAddress,proto3" json:"useAsDefaultCreateAddress,omitempty"`
	UseGroupAddress           bool   `protobuf:"varint,22,opt,name=useGroupAddress,proto3" json:"useGroupAddress,omitempty"`
}

func (x *CustomerOfficeAddress) Reset() {
	*x = CustomerOfficeAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerOfficeAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerOfficeAddress) ProtoMessage() {}

func (x *CustomerOfficeAddress) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerOfficeAddress.ProtoReflect.Descriptor instead.
func (*CustomerOfficeAddress) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{66}
}

func (x *CustomerOfficeAddress) GetAddressId() int32 {
	if x != nil {
		return x.AddressId
	}
	return 0
}

func (x *CustomerOfficeAddress) GetAddressType() string {
	if x != nil {
		return x.AddressType
	}
	return ""
}

func (x *CustomerOfficeAddress) GetStreetAddress() string {
	if x != nil {
		return x.StreetAddress
	}
	return ""
}

func (x *CustomerOfficeAddress) GetAptPo() string {
	if x != nil {
		return x.AptPo
	}
	return ""
}

func (x *CustomerOfficeAddress) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *CustomerOfficeAddress) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *CustomerOfficeAddress) GetZipcode() string {
	if x != nil {
		return x.Zipcode
	}
	return ""
}

func (x *CustomerOfficeAddress) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *CustomerOfficeAddress) GetAddressConfirmed() bool {
	if x != nil {
		return x.AddressConfirmed
	}
	return false
}

func (x *CustomerOfficeAddress) GetIsPrimaryAddress() bool {
	if x != nil {
		return x.IsPrimaryAddress
	}
	return false
}

func (x *CustomerOfficeAddress) GetCustomerId() int32 {
	if x != nil {
		return x.CustomerId
	}
	return 0
}

func (x *CustomerOfficeAddress) GetPatientId() int32 {
	if x != nil {
		return x.PatientId
	}
	return 0
}

func (x *CustomerOfficeAddress) GetClinicId() int32 {
	if x != nil {
		return x.ClinicId
	}
	return 0
}

func (x *CustomerOfficeAddress) GetInternalUserId() int32 {
	if x != nil {
		return x.InternalUserId
	}
	return 0
}

func (x *CustomerOfficeAddress) GetAddressLevel() int32 {
	if x != nil {
		return x.AddressLevel
	}
	return 0
}

func (x *CustomerOfficeAddress) GetAddressLevelName() string {
	if x != nil {
		return x.AddressLevelName
	}
	return ""
}

func (x *CustomerOfficeAddress) GetApplyToAllGroupMember() bool {
	if x != nil {
		return x.ApplyToAllGroupMember
	}
	return false
}

func (x *CustomerOfficeAddress) GetGroupAddressId() int32 {
	if x != nil {
		return x.GroupAddressId
	}
	return 0
}

func (x *CustomerOfficeAddress) GetHasGroupAddress() bool {
	if x != nil {
		return x.HasGroupAddress
	}
	return false
}

func (x *CustomerOfficeAddress) GetIsGroupAddress() bool {
	if x != nil {
		return x.IsGroupAddress
	}
	return false
}

func (x *CustomerOfficeAddress) GetUseAsDefaultCreateAddress() bool {
	if x != nil {
		return x.UseAsDefaultCreateAddress
	}
	return false
}

func (x *CustomerOfficeAddress) GetUseGroupAddress() bool {
	if x != nil {
		return x.UseGroupAddress
	}
	return false
}

type AdminCustomer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerId                int32                    `protobuf:"varint,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	UserId                    int32                    `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CustomerType              string                   `protobuf:"bytes,3,opt,name=customer_type,json=customerType,proto3" json:"customer_type,omitempty"`
	CustomerFirstName         string                   `protobuf:"bytes,4,opt,name=customer_first_name,json=customerFirstName,proto3" json:"customer_first_name,omitempty"`
	CustomerLastName          string                   `protobuf:"bytes,5,opt,name=customer_last_name,json=customerLastName,proto3" json:"customer_last_name,omitempty"`
	CustomerMiddleName        string                   `protobuf:"bytes,6,opt,name=customer_middle_name,json=customerMiddleName,proto3" json:"customer_middle_name,omitempty"`
	CustomerTypeId            string                   `protobuf:"bytes,7,opt,name=customer_type_id,json=customerTypeId,proto3" json:"customer_type_id,omitempty"`
	CustomerSuffix            string                   `protobuf:"bytes,8,opt,name=customer_suffix,json=customerSuffix,proto3" json:"customer_suffix,omitempty"`
	CustomerSamplesReceived   string                   `protobuf:"bytes,9,opt,name=customer_samples_received,json=customerSamplesReceived,proto3" json:"customer_samples_received,omitempty"`
	CustomerRequestSubmitTime string                   `protobuf:"bytes,10,opt,name=customer_request_submit_time,json=customerRequestSubmitTime,proto3" json:"customer_request_submit_time,omitempty"`
	CustomerPaymentMethod     string                   `protobuf:"bytes,11,opt,name=customer_payment_method,json=customerPaymentMethod,proto3" json:"customer_payment_method,omitempty"`
	IsActive                  bool                     `protobuf:"varint,12,opt,name=isActive,proto3" json:"isActive,omitempty"`
	SalesId                   int32                    `protobuf:"varint,13,opt,name=sales_id,json=salesId,proto3" json:"sales_id,omitempty"`
	CustomerNpiNumber         string                   `protobuf:"bytes,14,opt,name=customer_npi_number,json=customerNpiNumber,proto3" json:"customer_npi_number,omitempty"`
	CustomerPermission        string                   `protobuf:"bytes,15,opt,name=customer_permission,json=customerPermission,proto3" json:"customer_permission,omitempty"`
	ReferralSource            string                   `protobuf:"bytes,16,opt,name=referral_source,json=referralSource,proto3" json:"referral_source,omitempty"`
	CustomerAddress           []*CustomerOfficeAddress `protobuf:"bytes,17,rep,name=customer_address,json=customerAddress,proto3" json:"customer_address,omitempty"`
}

func (x *AdminCustomer) Reset() {
	*x = AdminCustomer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminCustomer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminCustomer) ProtoMessage() {}

func (x *AdminCustomer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminCustomer.ProtoReflect.Descriptor instead.
func (*AdminCustomer) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{67}
}

func (x *AdminCustomer) GetCustomerId() int32 {
	if x != nil {
		return x.CustomerId
	}
	return 0
}

func (x *AdminCustomer) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AdminCustomer) GetCustomerType() string {
	if x != nil {
		return x.CustomerType
	}
	return ""
}

func (x *AdminCustomer) GetCustomerFirstName() string {
	if x != nil {
		return x.CustomerFirstName
	}
	return ""
}

func (x *AdminCustomer) GetCustomerLastName() string {
	if x != nil {
		return x.CustomerLastName
	}
	return ""
}

func (x *AdminCustomer) GetCustomerMiddleName() string {
	if x != nil {
		return x.CustomerMiddleName
	}
	return ""
}

func (x *AdminCustomer) GetCustomerTypeId() string {
	if x != nil {
		return x.CustomerTypeId
	}
	return ""
}

func (x *AdminCustomer) GetCustomerSuffix() string {
	if x != nil {
		return x.CustomerSuffix
	}
	return ""
}

func (x *AdminCustomer) GetCustomerSamplesReceived() string {
	if x != nil {
		return x.CustomerSamplesReceived
	}
	return ""
}

func (x *AdminCustomer) GetCustomerRequestSubmitTime() string {
	if x != nil {
		return x.CustomerRequestSubmitTime
	}
	return ""
}

func (x *AdminCustomer) GetCustomerPaymentMethod() string {
	if x != nil {
		return x.CustomerPaymentMethod
	}
	return ""
}

func (x *AdminCustomer) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *AdminCustomer) GetSalesId() int32 {
	if x != nil {
		return x.SalesId
	}
	return 0
}

func (x *AdminCustomer) GetCustomerNpiNumber() string {
	if x != nil {
		return x.CustomerNpiNumber
	}
	return ""
}

func (x *AdminCustomer) GetCustomerPermission() string {
	if x != nil {
		return x.CustomerPermission
	}
	return ""
}

func (x *AdminCustomer) GetReferralSource() string {
	if x != nil {
		return x.ReferralSource
	}
	return ""
}

func (x *AdminCustomer) GetCustomerAddress() []*CustomerOfficeAddress {
	if x != nil {
		return x.CustomerAddress
	}
	return nil
}

type GetLoginHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerId string `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	UserId     string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	StartTime  string `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"` // Format: "yyyy-MM-dd HH:mm:ss"
	EndTime    string `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`       // Format: "yyyy-MM-dd HH:mm:ss"
	PerPage    int32  `protobuf:"varint,5,opt,name=perPage,proto3" json:"perPage,omitempty"`                     // Default: 100
	Page       int32  `protobuf:"varint,6,opt,name=page,proto3" json:"page,omitempty"`                           // Default: 1
}

func (x *GetLoginHistoryRequest) Reset() {
	*x = GetLoginHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLoginHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLoginHistoryRequest) ProtoMessage() {}

func (x *GetLoginHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLoginHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetLoginHistoryRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{68}
}

func (x *GetLoginHistoryRequest) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *GetLoginHistoryRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetLoginHistoryRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *GetLoginHistoryRequest) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *GetLoginHistoryRequest) GetPerPage() int32 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

func (x *GetLoginHistoryRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetLoginHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoginHistory []*LoginHistory `protobuf:"bytes,1,rep,name=login_history,json=loginHistory,proto3" json:"login_history,omitempty"`
	TotalCount   int32           `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *GetLoginHistoryResponse) Reset() {
	*x = GetLoginHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLoginHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLoginHistoryResponse) ProtoMessage() {}

func (x *GetLoginHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLoginHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetLoginHistoryResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{69}
}

func (x *GetLoginHistoryResponse) GetLoginHistory() []*LoginHistory {
	if x != nil {
		return x.LoginHistory
	}
	return nil
}

func (x *GetLoginHistoryResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type LoginHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Username          string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	LoginTime         string `protobuf:"bytes,3,opt,name=login_time,json=loginTime,proto3" json:"login_time,omitempty"`
	LoginIp           string `protobuf:"bytes,4,opt,name=login_ip,json=loginIp,proto3" json:"login_ip,omitempty"`
	LoginSuccessfully bool   `protobuf:"varint,5,opt,name=login_successfully,json=loginSuccessfully,proto3" json:"login_successfully,omitempty"`
	FailureReason     string `protobuf:"bytes,6,opt,name=failure_reason,json=failureReason,proto3" json:"failure_reason,omitempty"`
	LoginPortal       string `protobuf:"bytes,7,opt,name=login_portal,json=loginPortal,proto3" json:"login_portal,omitempty"`
}

func (x *LoginHistory) Reset() {
	*x = LoginHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginHistory) ProtoMessage() {}

func (x *LoginHistory) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginHistory.ProtoReflect.Descriptor instead.
func (*LoginHistory) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{70}
}

func (x *LoginHistory) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LoginHistory) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LoginHistory) GetLoginTime() string {
	if x != nil {
		return x.LoginTime
	}
	return ""
}

func (x *LoginHistory) GetLoginIp() string {
	if x != nil {
		return x.LoginIp
	}
	return ""
}

func (x *LoginHistory) GetLoginSuccessfully() bool {
	if x != nil {
		return x.LoginSuccessfully
	}
	return false
}

func (x *LoginHistory) GetFailureReason() string {
	if x != nil {
		return x.FailureReason
	}
	return ""
}

func (x *LoginHistory) GetLoginPortal() string {
	if x != nil {
		return x.LoginPortal
	}
	return ""
}

type AdminLoginSearchResponse_User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId                           int32                                    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Username                         string                                   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	EmailUserId                      string                                   `protobuf:"bytes,3,opt,name=email_user_id,json=emailUserId,proto3" json:"email_user_id,omitempty"`
	IsTwoFactorAuthenticationEnabled bool                                     `protobuf:"varint,4,opt,name=isTwoFactorAuthenticationEnabled,proto3" json:"isTwoFactorAuthenticationEnabled,omitempty"`
	IsInternalAdminUser              bool                                     `protobuf:"varint,5,opt,name=isInternalAdminUser,proto3" json:"isInternalAdminUser,omitempty"`
	UserGroup                        string                                   `protobuf:"bytes,6,opt,name=user_group,json=userGroup,proto3" json:"user_group,omitempty"`                // optional
	UserPermission                   string                                   `protobuf:"bytes,7,opt,name=user_permission,json=userPermission,proto3" json:"user_permission,omitempty"` // optional
	IsActive                         bool                                     `protobuf:"varint,8,opt,name=isActive,proto3" json:"isActive,omitempty"`
	CustomerId                       int32                                    `protobuf:"varint,9,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	CustomerType                     string                                   `protobuf:"bytes,10,opt,name=customer_type,json=customerType,proto3" json:"customer_type,omitempty"`
	CustomerFirstName                string                                   `protobuf:"bytes,11,opt,name=customer_first_name,json=customerFirstName,proto3" json:"customer_first_name,omitempty"`
	CustomerLastName                 string                                   `protobuf:"bytes,12,opt,name=customer_last_name,json=customerLastName,proto3" json:"customer_last_name,omitempty"`
	CustomerMiddleName               string                                   `protobuf:"bytes,13,opt,name=customer_middle_name,json=customerMiddleName,proto3" json:"customer_middle_name,omitempty"`
	CustomerTypeId                   string                                   `protobuf:"bytes,14,opt,name=customer_type_id,json=customerTypeId,proto3" json:"customer_type_id,omitempty"`
	CustomerSuffix                   string                                   `protobuf:"bytes,15,opt,name=customer_suffix,json=customerSuffix,proto3" json:"customer_suffix,omitempty"`
	SalesId                          int32                                    `protobuf:"varint,16,opt,name=sales_id,json=salesId,proto3" json:"sales_id,omitempty"`
	CustomerNpiNumber                string                                   `protobuf:"bytes,17,opt,name=customer_npi_number,json=customerNpiNumber,proto3" json:"customer_npi_number,omitempty"`
	CustomerPermission               string                                   `protobuf:"bytes,18,opt,name=customer_permission,json=customerPermission,proto3" json:"customer_permission,omitempty"`
	CustomerAddress                  []*AdminLoginSearchResponse_User_Address `protobuf:"bytes,19,rep,name=customer_address,json=customerAddress,proto3" json:"customer_address,omitempty"`
	ClinicId                         int32                                    `protobuf:"varint,20,opt,name=clinic_id,json=clinicId,proto3" json:"clinic_id,omitempty"`
	ClinicName                       string                                   `protobuf:"bytes,21,opt,name=clinic_name,json=clinicName,proto3" json:"clinic_name,omitempty"`
	ClinicType                       string                                   `protobuf:"bytes,22,opt,name=clinic_type,json=clinicType,proto3" json:"clinic_type,omitempty"`
	ClinicAccountId                  int32                                    `protobuf:"varint,23,opt,name=clinic_account_id,json=clinicAccountId,proto3" json:"clinic_account_id,omitempty"`
	ClinicNpiNumber                  string                                   `protobuf:"bytes,24,opt,name=clinic_npi_number,json=clinicNpiNumber,proto3" json:"clinic_npi_number,omitempty"`               // optional
	ClinicPermission                 string                                   `protobuf:"bytes,25,opt,name=clinic_permission,json=clinicPermission,proto3" json:"clinic_permission,omitempty"`              // optional
	ClinicNameOldSystem              string                                   `protobuf:"bytes,26,opt,name=clinic_name_old_system,json=clinicNameOldSystem,proto3" json:"clinic_name_old_system,omitempty"` // optional
	CustomerRole                     string                                   `protobuf:"bytes,27,opt,name=customer_role,json=customerRole,proto3" json:"customer_role,omitempty"`
}

func (x *AdminLoginSearchResponse_User) Reset() {
	*x = AdminLoginSearchResponse_User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminLoginSearchResponse_User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminLoginSearchResponse_User) ProtoMessage() {}

func (x *AdminLoginSearchResponse_User) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminLoginSearchResponse_User.ProtoReflect.Descriptor instead.
func (*AdminLoginSearchResponse_User) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{64, 0}
}

func (x *AdminLoginSearchResponse_User) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AdminLoginSearchResponse_User) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AdminLoginSearchResponse_User) GetEmailUserId() string {
	if x != nil {
		return x.EmailUserId
	}
	return ""
}

func (x *AdminLoginSearchResponse_User) GetIsTwoFactorAuthenticationEnabled() bool {
	if x != nil {
		return x.IsTwoFactorAuthenticationEnabled
	}
	return false
}

func (x *AdminLoginSearchResponse_User) GetIsInternalAdminUser() bool {
	if x != nil {
		return x.IsInternalAdminUser
	}
	return false
}

func (x *AdminLoginSearchResponse_User) GetUserGroup() string {
	if x != nil {
		return x.UserGroup
	}
	return ""
}

func (x *AdminLoginSearchResponse_User) GetUserPermission() string {
	if x != nil {
		return x.UserPermission
	}
	return ""
}

func (x *AdminLoginSearchResponse_User) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *AdminLoginSearchResponse_User) GetCustomerId() int32 {
	if x != nil {
		return x.CustomerId
	}
	return 0
}

func (x *AdminLoginSearchResponse_User) GetCustomerType() string {
	if x != nil {
		return x.CustomerType
	}
	return ""
}

func (x *AdminLoginSearchResponse_User) GetCustomerFirstName() string {
	if x != nil {
		return x.CustomerFirstName
	}
	return ""
}

func (x *AdminLoginSearchResponse_User) GetCustomerLastName() string {
	if x != nil {
		return x.CustomerLastName
	}
	return ""
}

func (x *AdminLoginSearchResponse_User) GetCustomerMiddleName() string {
	if x != nil {
		return x.CustomerMiddleName
	}
	return ""
}

func (x *AdminLoginSearchResponse_User) GetCustomerTypeId() string {
	if x != nil {
		return x.CustomerTypeId
	}
	return ""
}

func (x *AdminLoginSearchResponse_User) GetCustomerSuffix() string {
	if x != nil {
		return x.CustomerSuffix
	}
	return ""
}

func (x *AdminLoginSearchResponse_User) GetSalesId() int32 {
	if x != nil {
		return x.SalesId
	}
	return 0
}

func (x *AdminLoginSearchResponse_User) GetCustomerNpiNumber() string {
	if x != nil {
		return x.CustomerNpiNumber
	}
	return ""
}

func (x *AdminLoginSearchResponse_User) GetCustomerPermission() string {
	if x != nil {
		return x.CustomerPermission
	}
	return ""
}

func (x *AdminLoginSearchResponse_User) GetCustomerAddress() []*AdminLoginSearchResponse_User_Address {
	if x != nil {
		return x.CustomerAddress
	}
	return nil
}

func (x *AdminLoginSearchResponse_User) GetClinicId() int32 {
	if x != nil {
		return x.ClinicId
	}
	return 0
}

func (x *AdminLoginSearchResponse_User) GetClinicName() string {
	if x != nil {
		return x.ClinicName
	}
	return ""
}

func (x *AdminLoginSearchResponse_User) GetClinicType() string {
	if x != nil {
		return x.ClinicType
	}
	return ""
}

func (x *AdminLoginSearchResponse_User) GetClinicAccountId() int32 {
	if x != nil {
		return x.ClinicAccountId
	}
	return 0
}

func (x *AdminLoginSearchResponse_User) GetClinicNpiNumber() string {
	if x != nil {
		return x.ClinicNpiNumber
	}
	return ""
}

func (x *AdminLoginSearchResponse_User) GetClinicPermission() string {
	if x != nil {
		return x.ClinicPermission
	}
	return ""
}

func (x *AdminLoginSearchResponse_User) GetClinicNameOldSystem() string {
	if x != nil {
		return x.ClinicNameOldSystem
	}
	return ""
}

func (x *AdminLoginSearchResponse_User) GetCustomerRole() string {
	if x != nil {
		return x.CustomerRole
	}
	return ""
}

type AdminLoginSearchResponse_User_Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressId                 int32  `protobuf:"varint,1,opt,name=address_id,json=addressId,proto3" json:"address_id,omitempty"`
	AddressType               string `protobuf:"bytes,2,opt,name=address_type,json=addressType,proto3" json:"address_type,omitempty"`
	StreetAddress             string `protobuf:"bytes,3,opt,name=street_address,json=streetAddress,proto3" json:"street_address,omitempty"`
	AptPo                     string `protobuf:"bytes,4,opt,name=apt_po,json=aptPo,proto3" json:"apt_po,omitempty"` // optional
	City                      string `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	State                     string `protobuf:"bytes,6,opt,name=state,proto3" json:"state,omitempty"`
	Zipcode                   string `protobuf:"bytes,7,opt,name=zipcode,proto3" json:"zipcode,omitempty"`
	Country                   string `protobuf:"bytes,8,opt,name=country,proto3" json:"country,omitempty"`
	AddressConfirmed          bool   `protobuf:"varint,9,opt,name=address_confirmed,json=addressConfirmed,proto3" json:"address_confirmed,omitempty"`
	IsPrimaryAddress          bool   `protobuf:"varint,10,opt,name=is_primary_address,json=isPrimaryAddress,proto3" json:"is_primary_address,omitempty"`
	CustomerId                int32  `protobuf:"varint,11,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	PatientId                 int32  `protobuf:"varint,12,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`                  // optional
	ClinicId                  int32  `protobuf:"varint,13,opt,name=clinic_id,json=clinicId,proto3" json:"clinic_id,omitempty"`                     // optional
	InternalUserId            int32  `protobuf:"varint,14,opt,name=internal_user_id,json=internalUserId,proto3" json:"internal_user_id,omitempty"` // optional
	AddressLevel              int32  `protobuf:"varint,15,opt,name=address_level,json=addressLevel,proto3" json:"address_level,omitempty"`
	AddressLevelName          string `protobuf:"bytes,16,opt,name=address_level_name,json=addressLevelName,proto3" json:"address_level_name,omitempty"`
	ApplyToAllGroupMember     bool   `protobuf:"varint,17,opt,name=applyToAllGroupMember,proto3" json:"applyToAllGroupMember,omitempty"`
	GroupAddressId            int32  `protobuf:"varint,18,opt,name=group_address_id,json=groupAddressId,proto3" json:"group_address_id,omitempty"` // optional
	HasGroupAddress           bool   `protobuf:"varint,19,opt,name=hasGroupAddress,proto3" json:"hasGroupAddress,omitempty"`
	IsGroupAddress            bool   `protobuf:"varint,20,opt,name=isGroupAddress,proto3" json:"isGroupAddress,omitempty"`
	UseAsDefaultCreateAddress bool   `protobuf:"varint,21,opt,name=useAsDefaultCreateAddress,proto3" json:"useAsDefaultCreateAddress,omitempty"`
	UseGroupAddress           bool   `protobuf:"varint,22,opt,name=useGroupAddress,proto3" json:"useGroupAddress,omitempty"`
}

func (x *AdminLoginSearchResponse_User_Address) Reset() {
	*x = AdminLoginSearchResponse_User_Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_service_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminLoginSearchResponse_User_Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminLoginSearchResponse_User_Address) ProtoMessage() {}

func (x *AdminLoginSearchResponse_User_Address) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminLoginSearchResponse_User_Address.ProtoReflect.Descriptor instead.
func (*AdminLoginSearchResponse_User_Address) Descriptor() ([]byte, []int) {
	return file_proto_user_service_proto_rawDescGZIP(), []int{64, 0, 0}
}

func (x *AdminLoginSearchResponse_User_Address) GetAddressId() int32 {
	if x != nil {
		return x.AddressId
	}
	return 0
}

func (x *AdminLoginSearchResponse_User_Address) GetAddressType() string {
	if x != nil {
		return x.AddressType
	}
	return ""
}

func (x *AdminLoginSearchResponse_User_Address) GetStreetAddress() string {
	if x != nil {
		return x.StreetAddress
	}
	return ""
}

func (x *AdminLoginSearchResponse_User_Address) GetAptPo() string {
	if x != nil {
		return x.AptPo
	}
	return ""
}

func (x *AdminLoginSearchResponse_User_Address) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *AdminLoginSearchResponse_User_Address) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *AdminLoginSearchResponse_User_Address) GetZipcode() string {
	if x != nil {
		return x.Zipcode
	}
	return ""
}

func (x *AdminLoginSearchResponse_User_Address) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *AdminLoginSearchResponse_User_Address) GetAddressConfirmed() bool {
	if x != nil {
		return x.AddressConfirmed
	}
	return false
}

func (x *AdminLoginSearchResponse_User_Address) GetIsPrimaryAddress() bool {
	if x != nil {
		return x.IsPrimaryAddress
	}
	return false
}

func (x *AdminLoginSearchResponse_User_Address) GetCustomerId() int32 {
	if x != nil {
		return x.CustomerId
	}
	return 0
}

func (x *AdminLoginSearchResponse_User_Address) GetPatientId() int32 {
	if x != nil {
		return x.PatientId
	}
	return 0
}

func (x *AdminLoginSearchResponse_User_Address) GetClinicId() int32 {
	if x != nil {
		return x.ClinicId
	}
	return 0
}

func (x *AdminLoginSearchResponse_User_Address) GetInternalUserId() int32 {
	if x != nil {
		return x.InternalUserId
	}
	return 0
}

func (x *AdminLoginSearchResponse_User_Address) GetAddressLevel() int32 {
	if x != nil {
		return x.AddressLevel
	}
	return 0
}

func (x *AdminLoginSearchResponse_User_Address) GetAddressLevelName() string {
	if x != nil {
		return x.AddressLevelName
	}
	return ""
}

func (x *AdminLoginSearchResponse_User_Address) GetApplyToAllGroupMember() bool {
	if x != nil {
		return x.ApplyToAllGroupMember
	}
	return false
}

func (x *AdminLoginSearchResponse_User_Address) GetGroupAddressId() int32 {
	if x != nil {
		return x.GroupAddressId
	}
	return 0
}

func (x *AdminLoginSearchResponse_User_Address) GetHasGroupAddress() bool {
	if x != nil {
		return x.HasGroupAddress
	}
	return false
}

func (x *AdminLoginSearchResponse_User_Address) GetIsGroupAddress() bool {
	if x != nil {
		return x.IsGroupAddress
	}
	return false
}

func (x *AdminLoginSearchResponse_User_Address) GetUseAsDefaultCreateAddress() bool {
	if x != nil {
		return x.UseAsDefaultCreateAddress
	}
	return false
}

func (x *AdminLoginSearchResponse_User_Address) GetUseGroupAddress() bool {
	if x != nil {
		return x.UseGroupAddress
	}
	return false
}

var File_proto_user_service_proto protoreflect.FileDescriptor

var file_proto_user_service_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x63, 0x6f, 0x72, 0x65,
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22,
	0x6d, 0x0a, 0x21, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x22, 0x76,
	0x0a, 0x22, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x7b, 0x0a, 0x24, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a,
	0x0e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x49, 0x64, 0x22, 0x7a, 0x0a, 0x25, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x32, 0x0a, 0x0f, 0x43, 0x61, 0x6e, 0x6e, 0x79, 0x53, 0x53, 0x4f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0x61, 0x0a, 0x10, 0x43, 0x61, 0x6e, 0x6e, 0x79, 0x53, 0x53, 0x4f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x6e, 0x6e, 0x79, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x6e, 0x6e,
	0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x5c, 0x0a, 0x27, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x57,
	0x68, 0x65, 0x74, 0x68, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x73, 0x55, 0x73, 0x65,
	0x64, 0x41, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x6e, 0x69,
	0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x6e,
	0x69, 0x63, 0x49, 0x64, 0x22, 0x69, 0x0a, 0x28, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x57, 0x68, 0x65,
	0x74, 0x68, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x73, 0x55, 0x73, 0x65, 0x64, 0x41,
	0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x65, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0x55, 0x73, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0xe7, 0x02, 0x0a, 0x26, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f,
	0x67, 0x46, 0x6f, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e,
	0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x69, 0x6e, 0x6b, 0x12, 0x24, 0x0a, 0x0e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x66, 0x61, 0x78, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x46, 0x61, 0x78, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65,
	0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x61, 0x6c, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x54, 0x65, 0x73,
	0x74, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x57, 0x0a, 0x27, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x46, 0x6f, 0x72, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x30, 0x0a, 0x11, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x77, 0x74, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x77, 0x74, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x81, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x11, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x6a, 0x77, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6a, 0x77, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x49, 0x64, 0x22, 0x58, 0x0a,
	0x12, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x60, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x32, 0x46, 0x41, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x32, 0x46, 0x41, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52,
	0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x22, 0xf4, 0x05, 0x0a, 0x0e, 0x55, 0x73,
	0x65, 0x72, 0x32, 0x46, 0x41, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x13, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x73, 0x5f, 0x70,
	0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x32, 0x66, 0x61,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x69, 0x73, 0x32, 0x66, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x63, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x15, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x41, 0x6c,
	0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x15, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x41, 0x6c, 0x6c, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2c,
	0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x68, 0x61, 0x73, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0f, 0x68, 0x61, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x12, 0x26, 0x0a, 0x0e, 0x69, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x3c, 0x0a, 0x19, 0x75, 0x73, 0x65, 0x41,
	0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x75, 0x73, 0x65,
	0x41, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0f, 0x75, 0x73, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x22, 0x34, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x32, 0x46, 0x41, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x34, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x94, 0x03, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x22, 0x0a, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x4a, 0x0a, 0x20, 0x69, 0x73, 0x54, 0x77, 0x6f, 0x46, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x20,
	0x69, 0x73, 0x54, 0x77, 0x6f, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x41, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x12, 0x27, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x46, 0x0a, 0x20, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x65,
	0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x73, 0x61, 0x6c, 0x74,
	0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x1c, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74,
	0x68, 0x53, 0x61, 0x6c, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x44, 0x0a,
	0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x22, 0x94, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x50, 0x0a, 0x1c, 0x54, 0x75,
	0x72, 0x6e, 0x4f, 0x66, 0x66, 0x32, 0x46, 0x41, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x4d, 0x0a, 0x1d,
	0x54, 0x75, 0x72, 0x6e, 0x4f, 0x66, 0x66, 0x32, 0x46, 0x41, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x4d, 0x0a, 0x1d, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x32, 0x46, 0x41, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xb3, 0x01, 0x0a, 0x20, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x32, 0x46, 0x41, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x22, 0x4f, 0x0a, 0x1f, 0x53, 0x65, 0x6e, 0x64, 0x32, 0x46, 0x41, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x84, 0x01, 0x0a, 0x1e, 0x53, 0x65, 0x6e, 0x64, 0x32, 0x46, 0x41, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xa5, 0x01, 0x0a, 0x1b, 0x54, 0x75, 0x72,
	0x6e, 0x4f, 0x6e, 0x32, 0x46, 0x41, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x32, 0x66,
	0x61, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x32, 0x66, 0x61, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x28, 0x0a, 0x10, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x32, 0x66, 0x61, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x32, 0x66, 0x61, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x6c, 0x0a, 0x1c, 0x54, 0x75, 0x72, 0x6e, 0x4f, 0x6e, 0x32, 0x46, 0x41, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x6f, 0x74, 0x70, 0x61, 0x75, 0x74, 0x68, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6f, 0x74, 0x70, 0x61, 0x75, 0x74, 0x68, 0x55, 0x72, 0x6c, 0x22, 0xaf,
	0x01, 0x0a, 0x1c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x32, 0x46, 0x41, 0x53, 0x65, 0x74, 0x55,
	0x70, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x22, 0x4d, 0x0a, 0x1d, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x32, 0x46, 0x41, 0x53, 0x65, 0x74,
	0x55, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x8a, 0x01, 0x0a, 0x24, 0x53, 0x65, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x32, 0x46,
	0x41, 0x53, 0x65, 0x74, 0x55, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x55, 0x0a, 0x25,
	0x53, 0x65, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x32, 0x46, 0x41, 0x53, 0x65, 0x74,
	0x55, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x43, 0x0a, 0x1c, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x46, 0x6f,
	0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x46, 0x0a, 0x16, 0x46, 0x6f, 0x72, 0x67,
	0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x24, 0x0a, 0x0c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x81, 0x01, 0x0a, 0x1c, 0x49, 0x73, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x55, 0x73, 0x65, 0x64, 0x41, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x14, 0x75, 0x73, 0x65, 0x64, 0x5f,
	0x61, 0x73, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x75, 0x73, 0x65, 0x64, 0x41, 0x73, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x90, 0x01, 0x0a, 0x20, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x65, 0x74, 0x55, 0x70, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x29, 0x0a, 0x11, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x6e, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x2b, 0x0a, 0x11, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x51, 0x0a,
	0x21, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x65, 0x74, 0x55, 0x70, 0x55, 0x73, 0x65, 0x72,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x60, 0x0a, 0x1d, 0x53, 0x65, 0x74, 0x55, 0x70, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x29, 0x0a, 0x11, 0x6c, 0x6f, 0x67, 0x5f, 0x69,
	0x6e, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x22, 0x4e, 0x0a, 0x1e, 0x53, 0x65, 0x74, 0x55, 0x70, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x52, 0x0a, 0x1d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69,
	0x6e, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c,
	0x69, 0x6e, 0x69, 0x63, 0x49, 0x64, 0x22, 0x57, 0x0a, 0x1e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x6c, 0x69, 0x6e, 0x69, 0x63,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x22,
	0x88, 0x01, 0x0a, 0x1c, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x4d, 0x0a, 0x1d, 0x46, 0x6f,
	0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x8a, 0x01, 0x0a, 0x1c, 0x46, 0x6f,
	0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x4c, 0x0a, 0x1c, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x66, 0x0a, 0x21, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x52, 0x0a, 0x22,
	0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x86, 0x01, 0x0a, 0x1a, 0x53, 0x65, 0x6e, 0x64, 0x32, 0x46, 0x41, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x44, 0x0a, 0x14, 0x53, 0x65, 0x6e,
	0x64, 0x32, 0x46, 0x41, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x90, 0x01, 0x0a, 0x1f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4c, 0x49, 0x53, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x6f, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x77, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x77, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x22, 0x59, 0x0a, 0x20, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4c, 0x49,
	0x53, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x6f, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xa2, 0x01,
	0x0a, 0x22, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x42, 0x79, 0x4f, 0x6c, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x6f, 0x6c, 0x64, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x6c, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x77, 0x6f, 0x66, 0x61, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x77, 0x6f, 0x66, 0x61, 0x43, 0x6f,
	0x64, 0x65, 0x22, 0x60, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x50, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x22, 0xca, 0x03, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75,
	0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x27, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x3d, 0x0a,
	0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x06,
	0x63, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x52, 0x06, 0x63,
	0x6c, 0x69, 0x6e, 0x69, 0x63, 0x12, 0x3d, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x12, 0x3a, 0x0a, 0x07, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x22, 0xbf, 0x01, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x46, 0x69, 0x72, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4c, 0x61, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x4a, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6c, 0x69,
	0x6e, 0x69, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0xc1, 0x02, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x6f,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x31, 0x0a, 0x15, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x36, 0x0a,
	0x17, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x72, 0x73,
	0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x61, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x18, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xb6, 0x01, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61,
	0x74, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x74, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70,
	0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e,
	0x0a, 0x13, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x61, 0x74,
	0x69, 0x65, 0x6e, 0x74, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xd2,
	0x01, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x72, 0x65,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x77, 0x6f, 0x5f,
	0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x74, 0x77, 0x6f, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x70, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x70, 0x12, 0x26, 0x0a, 0x0f, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x22, 0xca, 0x02, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x12, 0x69, 0x73,
	0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x64, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x75, 0x70,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x49,
	0x64, 0x53, 0x65, 0x74, 0x55, 0x70, 0x12, 0x4d, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x32,
	0x66, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x32, 0x46, 0x41, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x32, 0x66, 0x61, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x30,
	0x0a, 0x13, 0x68, 0x61, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x68, 0x61, 0x73,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x22, 0x89, 0x01, 0x0a, 0x16, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x11, 0x6e, 0x65, 0x77, 0x5f, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x6e, 0x65, 0x77, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x2b, 0x0a, 0x11, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x47, 0x0a, 0x17,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xcf, 0x10, 0x0a, 0x18, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x48, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x32, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x22, 0x0a, 0x0c,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x1a, 0xc4, 0x0f, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22,
	0x0a, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x4a, 0x0a, 0x20, 0x69, 0x73, 0x54, 0x77, 0x6f, 0x46, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x20, 0x69, 0x73,
	0x54, 0x77, 0x6f, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x30,
	0x0a, 0x13, 0x69, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x55, 0x73, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x69, 0x73, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x27, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x75, 0x66, 0x66, 0x69, 0x78, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x70, 0x69, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e,
	0x70, 0x69, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x13, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x65, 0x0a, 0x10, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x13, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x2a, 0x0a, 0x11, 0x63, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x6c, 0x69, 0x6e,
	0x69, 0x63, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x63,
	0x6c, 0x69, 0x6e, 0x69, 0x63, 0x5f, 0x6e, 0x70, 0x69, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x4e, 0x70,
	0x69, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6c, 0x69, 0x6e, 0x69,
	0x63, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x19, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x63, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x16, 0x63, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x5f, 0x6f, 0x6c, 0x64, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x1a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65,
	0x4f, 0x6c, 0x64, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x1a, 0xb6,
	0x06, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x74, 0x5f, 0x70, 0x6f, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x74, 0x50, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x7a, 0x69, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x7a, 0x69, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x10, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x6d,
	0x61, 0x72, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x10, 0x69, 0x73, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x5f, 0x69, 0x64,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x49, 0x64,
	0x12, 0x28, 0x0a, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x2c, 0x0a, 0x12, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a,
	0x15, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x41, 0x6c, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x61, 0x70,
	0x70, 0x6c, 0x79, 0x54, 0x6f, 0x41, 0x6c, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x28, 0x0a,
	0x0f, 0x68, 0x61, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x68, 0x61, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x73, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0e, 0x69, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x3c, 0x0a, 0x19, 0x75, 0x73, 0x65, 0x41, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x19, 0x75, 0x73, 0x65, 0x41, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x28, 0x0a,
	0x0f, 0x75, 0x73, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xf3, 0x01, 0x0a, 0x17, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x77, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x77, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xc4, 0x06,
	0x0a, 0x15, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x65,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74, 0x72,
	0x65, 0x65, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x74, 0x5f, 0x70, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x61, 0x70, 0x74, 0x50, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x7a, 0x69, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x7a, 0x69, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x10, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x65, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10,
	0x69, 0x73, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x49, 0x64, 0x12, 0x28, 0x0a,
	0x10, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2c, 0x0a, 0x12,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x61, 0x70,
	0x70, 0x6c, 0x79, 0x54, 0x6f, 0x41, 0x6c, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x61, 0x70, 0x70, 0x6c, 0x79,
	0x54, 0x6f, 0x41, 0x6c, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x28, 0x0a, 0x10, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x5f, 0x69, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x68, 0x61,
	0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0f, 0x68, 0x61, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3c, 0x0a, 0x19,
	0x75, 0x73, 0x65, 0x41, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x19, 0x75, 0x73, 0x65, 0x41, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x75, 0x73,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x22, 0x9e, 0x06, 0x0a, 0x0d, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x46, 0x69, 0x72, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4c, 0x61, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12,
	0x27, 0x0a, 0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x75, 0x66, 0x66,
	0x69, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x53, 0x75, 0x66, 0x66, 0x69, 0x78, 0x12, 0x3a, 0x0a, 0x19, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x64, 0x12, 0x3f, 0x0a, 0x1c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x61, 0x6c,
	0x65, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x61, 0x6c,
	0x65, 0x73, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x6e, 0x70, 0x69, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x70, 0x69, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x13, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61,
	0x6c, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x55,
	0x0a, 0x10, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xba, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46,
	0x0a, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x0c, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xed, 0x01, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x70, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x70, 0x12, 0x2d,
	0x0a, 0x12, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66,
	0x75, 0x6c, 0x6c, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x6c, 0x79, 0x12, 0x25, 0x0a,
	0x0e, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x70, 0x6f,
	0x72, 0x74, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x32, 0xa7, 0x1e, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x49, 0x6e,
	0x12, 0x21, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x74, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x2d,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42,
	0x79, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x89, 0x01, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x42, 0x79, 0x4f, 0x6c, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x37, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x4f, 0x6c, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x89, 0x01, 0x0a, 0x18,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4c, 0x49, 0x53, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x54, 0x6f, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x12, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4c, 0x49, 0x53, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54,
	0x6f, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4c, 0x49, 0x53,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x6f, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x13, 0x53, 0x65, 0x6e, 0x64, 0x32,
	0x46, 0x41, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x32, 0x46, 0x41, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a,
	0x29, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x32, 0x46, 0x41, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x80, 0x01, 0x0a,
	0x15, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x6f, 0x72,
	0x67, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x78, 0x0a, 0x0e, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x31, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x1a, 0x31, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x6f, 0x72, 0x67, 0x65,
	0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x81, 0x01, 0x0a, 0x16, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x6c,
	0x69, 0x6e, 0x69, 0x63, 0x12, 0x32, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x6c, 0x69, 0x6e, 0x69,
	0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43,
	0x6c, 0x69, 0x6e, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7c, 0x0a,
	0x11, 0x53, 0x65, 0x74, 0x55, 0x70, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x32, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x55, 0x70, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x74,
	0x55, 0x70, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8a, 0x01, 0x0a, 0x19,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x65, 0x74, 0x55, 0x70, 0x55, 0x73, 0x65, 0x72, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x12, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x65, 0x74, 0x55, 0x70, 0x55, 0x73, 0x65, 0x72, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x36, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x65, 0x74,
	0x55, 0x70, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x49, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6c, 0x0a, 0x14, 0x49, 0x73, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x55, 0x73, 0x65, 0x64, 0x41, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x64,
	0x12, 0x21, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x73, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x55, 0x73, 0x65, 0x64, 0x41, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x15, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x6c, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x31, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x46, 0x6f, 0x72,
	0x67, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x96, 0x01, 0x0a, 0x1d, 0x53, 0x65, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x32, 0x46,
	0x41, 0x53, 0x65, 0x74, 0x55, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x39, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x32, 0x46, 0x41, 0x53, 0x65, 0x74, 0x55, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x32, 0x46, 0x41,
	0x53, 0x65, 0x74, 0x55, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x82, 0x01, 0x0a, 0x19, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x32, 0x46, 0x41, 0x53, 0x65, 0x74, 0x55, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x31, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x32, 0x46, 0x41, 0x53, 0x65, 0x74, 0x55, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x32, 0x46, 0x41, 0x53, 0x65, 0x74, 0x55, 0x70, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7b, 0x0a,
	0x14, 0x54, 0x75, 0x72, 0x6e, 0x4f, 0x6e, 0x32, 0x46, 0x41, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x61, 0x67, 0x65, 0x12, 0x30, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x75, 0x72, 0x6e,
	0x4f, 0x6e, 0x32, 0x46, 0x41, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x75,
	0x72, 0x6e, 0x4f, 0x6e, 0x32, 0x46, 0x41, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x84, 0x01, 0x0a, 0x17, 0x53,
	0x65, 0x6e, 0x64, 0x32, 0x46, 0x41, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x33, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6e,
	0x64, 0x32, 0x46, 0x41, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x32, 0x46, 0x41, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x86, 0x01, 0x0a, 0x19, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x32, 0x46, 0x41, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x32, 0x46, 0x41, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x32, 0x46, 0x41, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7e, 0x0a, 0x15, 0x54, 0x75,
	0x72, 0x6e, 0x4f, 0x66, 0x66, 0x32, 0x46, 0x41, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50,
	0x61, 0x67, 0x65, 0x12, 0x31, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x75, 0x72, 0x6e, 0x4f, 0x66,
	0x66, 0x32, 0x46, 0x41, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x75, 0x72,
	0x6e, 0x4f, 0x66, 0x66, 0x32, 0x46, 0x41, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x75, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2e, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x7e, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x32, 0x46, 0x41, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x31, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x32, 0x46, 0x41, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x32, 0x46, 0x41, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x73, 0x0a, 0x16, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x49, 0x44, 0x12, 0x2b, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a, 0x14, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x2c,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x0a, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x26, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x27, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x0a, 0x52, 0x65,
	0x6e, 0x65, 0x77, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x26, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52,
	0x65, 0x6e, 0x65, 0x77, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x27, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x08, 0x4c, 0x49, 0x53,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x21, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x49,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c,
	0x6f, 0x67, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x9e,
	0x01, 0x0a, 0x21, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67,
	0x49, 0x6e, 0x46, 0x6f, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x12, 0x3b, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x46, 0x6f, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x3c, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x4c, 0x6f, 0x67, 0x46, 0x6f, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x9f, 0x01, 0x0a, 0x20, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x57, 0x68, 0x65, 0x74, 0x68, 0x65, 0x72,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x73, 0x55, 0x73, 0x65, 0x64, 0x41, 0x73, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x49, 0x64, 0x12, 0x3c, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x57, 0x68, 0x65, 0x74, 0x68, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x73, 0x55, 0x73,
	0x65, 0x64, 0x41, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x57, 0x68,
	0x65, 0x74, 0x68, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x73, 0x55, 0x73, 0x65, 0x64,
	0x41, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x57, 0x0a, 0x08, 0x43, 0x61, 0x6e, 0x6e, 0x79, 0x53, 0x53, 0x4f, 0x12, 0x24, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x6e, 0x6e, 0x79, 0x53, 0x53, 0x4f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x6e, 0x6e, 0x79, 0x53,
	0x53, 0x4f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x96, 0x01, 0x0a, 0x1d, 0x46,
	0x6f, 0x72, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x12, 0x39, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x6f,
	0x72, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x8d, 0x01, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x12, 0x36, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x6c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x2b, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x1d, 0x5a, 0x1b, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x63, 0x6f, 0x72,
	0x65, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_user_service_proto_rawDescOnce sync.Once
	file_proto_user_service_proto_rawDescData = file_proto_user_service_proto_rawDesc
)

func file_proto_user_service_proto_rawDescGZIP() []byte {
	file_proto_user_service_proto_rawDescOnce.Do(func() {
		file_proto_user_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_user_service_proto_rawDescData)
	})
	return file_proto_user_service_proto_rawDescData
}

var file_proto_user_service_proto_msgTypes = make([]protoimpl.MessageInfo, 73)
var file_proto_user_service_proto_goTypes = []interface{}{
	(*UpdateUserInvitationRecordRequest)(nil),        // 0: coresamples_service.UpdateUserInvitationRecordRequest
	(*UpdateUserInvitationRecordResponse)(nil),       // 1: coresamples_service.UpdateUserInvitationRecordResponse
	(*ForceChangeLoginEmailInternalRequest)(nil),     // 2: coresamples_service.ForceChangeLoginEmailInternalRequest
	(*ForceChangeLoginEmailInternalResponse)(nil),    // 3: coresamples_service.ForceChangeLoginEmailInternalResponse
	(*CannySSORequest)(nil),                          // 4: coresamples_service.CannySSORequest
	(*CannySSOResponse)(nil),                         // 5: coresamples_service.CannySSOResponse
	(*CheckWhetherEmailIsUsedAsLoginIdRequest)(nil),  // 6: coresamples_service.CheckWhetherEmailIsUsedAsLoginIdRequest
	(*CheckWhetherEmailIsUsedAsLoginIdResponse)(nil), // 7: coresamples_service.CheckWhetherEmailIsUsedAsLoginIdResponse
	(*CreateUserLogForInvitedCustomerRequest)(nil),   // 8: coresamples_service.CreateUserLogForInvitedCustomerRequest
	(*CreateUserLogForInvitedCustomerResponse)(nil),  // 9: coresamples_service.CreateUserLogForInvitedCustomerResponse
	(*RenewTokenRequest)(nil),                        // 10: coresamples_service.RenewTokenRequest
	(*RenewTokenResponse)(nil),                       // 11: coresamples_service.RenewTokenResponse
	(*AdminLoginRequest)(nil),                        // 12: coresamples_service.AdminLoginRequest
	(*AdminLoginResponse)(nil),                       // 13: coresamples_service.AdminLoginResponse
	(*GetUser2FAContactInfoResponse)(nil),            // 14: coresamples_service.GetUser2FAContactInfoResponse
	(*User2FAContact)(nil),                           // 15: coresamples_service.User2FAContact
	(*GetUser2FAContactInfoRequest)(nil),             // 16: coresamples_service.GetUser2FAContactInfoRequest
	(*GetUserInformationRequest)(nil),                // 17: coresamples_service.GetUserInformationRequest
	(*GetUserInformationResponse)(nil),               // 18: coresamples_service.GetUserInformationResponse
	(*GetUserInfoCustomer)(nil),                      // 19: coresamples_service.GetUserInfoCustomer
	(*TurnOff2FASettingPageRequest)(nil),             // 20: coresamples_service.TurnOff2FASettingPageRequest
	(*TurnOff2FASettingPageResponse)(nil),            // 21: coresamples_service.TurnOff2FASettingPageResponse
	(*Verify2FAVerificationResponse)(nil),            // 22: coresamples_service.Verify2FAVerificationResponse
	(*Verify2FAVerificationCodeRequest)(nil),         // 23: coresamples_service.Verify2FAVerificationCodeRequest
	(*Send2FAVerificationCodeResponse)(nil),          // 24: coresamples_service.Send2FAVerificationCodeResponse
	(*Send2FAVerificationCodeRequest)(nil),           // 25: coresamples_service.Send2FAVerificationCodeRequest
	(*TurnOn2FASettingPageRequest)(nil),              // 26: coresamples_service.TurnOn2FASettingPageRequest
	(*TurnOn2FASettingPageResponse)(nil),             // 27: coresamples_service.TurnOn2FASettingPageResponse
	(*Verify2FASetUpContactRequest)(nil),             // 28: coresamples_service.Verify2FASetUpContactRequest
	(*Verify2FASetUpContactResponse)(nil),            // 29: coresamples_service.Verify2FASetUpContactResponse
	(*SendVerify2FASetUpContactInfoRequest)(nil),     // 30: coresamples_service.SendVerify2FASetUpContactInfoRequest
	(*SendVerify2FASetUpContactInfoResponse)(nil),    // 31: coresamples_service.SendVerify2FASetUpContactInfoResponse
	(*InitialForgetPasswordRequest)(nil),             // 32: coresamples_service.InitialForgetPasswordRequest
	(*ForgetPasswordResponse)(nil),                   // 33: coresamples_service.ForgetPasswordResponse
	(*EmailRequest)(nil),                             // 34: coresamples_service.EmailRequest
	(*IsEmailUsedAsLoginIdResponse)(nil),             // 35: coresamples_service.IsEmailUsedAsLoginIdResponse
	(*VerifySetUpUserEmailLogInRequest)(nil),         // 36: coresamples_service.VerifySetUpUserEmailLogInRequest
	(*VerifySetUpUserEmailLogInResponse)(nil),        // 37: coresamples_service.VerifySetUpUserEmailLogInResponse
	(*SetUpLoginEmailRequestRequest)(nil),            // 38: coresamples_service.SetUpLoginEmailRequestRequest
	(*SetUpLoginEmailRequestResponse)(nil),           // 39: coresamples_service.SetUpLoginEmailRequestResponse
	(*TransferCustomerClinicRequest)(nil),            // 40: coresamples_service.TransferCustomerClinicRequest
	(*TransferCustomerClinicResponse)(nil),           // 41: coresamples_service.TransferCustomerClinicResponse
	(*ForgetPasswordRequestRequest)(nil),             // 42: coresamples_service.ForgetPasswordRequestRequest
	(*ForgetPasswordRequestResponse)(nil),            // 43: coresamples_service.ForgetPasswordRequestResponse
	(*ForgetPasswordRequestMessage)(nil),             // 44: coresamples_service.ForgetPasswordRequestMessage
	(*ForgetPasswordVerifyResponse)(nil),             // 45: coresamples_service.ForgetPasswordVerifyResponse
	(*ForgetPasswordRequestCheckRequest)(nil),        // 46: coresamples_service.ForgetPasswordRequestCheckRequest
	(*ForgetPasswordCheckRequestResponse)(nil),       // 47: coresamples_service.ForgetPasswordCheckRequestResponse
	(*Send2FATokenRequestMessage)(nil),               // 48: coresamples_service.Send2FATokenRequestMessage
	(*Send2FATokenResponse)(nil),                     // 49: coresamples_service.Send2FATokenResponse
	(*TransferLISTokenToPortalRequest)(nil),          // 50: coresamples_service.TransferLISTokenToPortalRequest
	(*TransferLISTokenToPortalResponse)(nil),         // 51: coresamples_service.TransferLISTokenToPortalResponse
	(*UpdatePasswordByOldPasswordRequest)(nil),       // 52: coresamples_service.UpdatePasswordByOldPasswordRequest
	(*UpdateUserPasswordResponse)(nil),               // 53: coresamples_service.UpdateUserPasswordResponse
	(*GetUserInfoByRoleRequest)(nil),                 // 54: coresamples_service.GetUserInfoByRoleRequest
	(*GetUserInfoByRoleResponse)(nil),                // 55: coresamples_service.GetUserInfoByRoleResponse
	(*UserCustomer)(nil),                             // 56: coresamples_service.UserCustomer
	(*UserClinic)(nil),                               // 57: coresamples_service.UserClinic
	(*UserInternal)(nil),                             // 58: coresamples_service.UserInternal
	(*UserPatient)(nil),                              // 59: coresamples_service.UserPatient
	(*LogInRequest)(nil),                             // 60: coresamples_service.LogInRequest
	(*LogInResponse)(nil),                            // 61: coresamples_service.LogInResponse
	(*UserChangeEmailRequest)(nil),                   // 62: coresamples_service.UserChangeEmailRequest
	(*UserChangeEmailResponse)(nil),                  // 63: coresamples_service.UserChangeEmailResponse
	(*AdminLoginSearchResponse)(nil),                 // 64: coresamples_service.AdminLoginSearchResponse
	(*AdminLoginSearchRequest)(nil),                  // 65: coresamples_service.AdminLoginSearchRequest
	(*CustomerOfficeAddress)(nil),                    // 66: coresamples_service.CustomerOfficeAddress
	(*AdminCustomer)(nil),                            // 67: coresamples_service.AdminCustomer
	(*GetLoginHistoryRequest)(nil),                   // 68: coresamples_service.GetLoginHistoryRequest
	(*GetLoginHistoryResponse)(nil),                  // 69: coresamples_service.GetLoginHistoryResponse
	(*LoginHistory)(nil),                             // 70: coresamples_service.LoginHistory
	(*AdminLoginSearchResponse_User)(nil),            // 71: coresamples_service.AdminLoginSearchResponse.User
	(*AdminLoginSearchResponse_User_Address)(nil),    // 72: coresamples_service.AdminLoginSearchResponse.User.Address
}
var file_proto_user_service_proto_depIdxs = []int32{
	15, // 0: coresamples_service.GetUser2FAContactInfoResponse.contacts:type_name -> coresamples_service.User2FAContact
	19, // 1: coresamples_service.GetUserInformationResponse.customer:type_name -> coresamples_service.GetUserInfoCustomer
	56, // 2: coresamples_service.GetUserInfoByRoleResponse.customer:type_name -> coresamples_service.UserCustomer
	57, // 3: coresamples_service.GetUserInfoByRoleResponse.clinic:type_name -> coresamples_service.UserClinic
	58, // 4: coresamples_service.GetUserInfoByRoleResponse.internal:type_name -> coresamples_service.UserInternal
	59, // 5: coresamples_service.GetUserInfoByRoleResponse.patient:type_name -> coresamples_service.UserPatient
	15, // 6: coresamples_service.LogInResponse.user_2fa_contact:type_name -> coresamples_service.User2FAContact
	71, // 7: coresamples_service.AdminLoginSearchResponse.users:type_name -> coresamples_service.AdminLoginSearchResponse.User
	66, // 8: coresamples_service.AdminCustomer.customer_address:type_name -> coresamples_service.CustomerOfficeAddress
	70, // 9: coresamples_service.GetLoginHistoryResponse.login_history:type_name -> coresamples_service.LoginHistory
	72, // 10: coresamples_service.AdminLoginSearchResponse.User.customer_address:type_name -> coresamples_service.AdminLoginSearchResponse.User.Address
	60, // 11: coresamples_service.UserService.LogIn:input_type -> coresamples_service.LogInRequest
	54, // 12: coresamples_service.UserService.GetUserInfoByRole:input_type -> coresamples_service.GetUserInfoByRoleRequest
	52, // 13: coresamples_service.UserService.UpdatePasswordByOldPassword:input_type -> coresamples_service.UpdatePasswordByOldPasswordRequest
	50, // 14: coresamples_service.UserService.TransferLISTokenToPortal:input_type -> coresamples_service.TransferLISTokenToPortalRequest
	48, // 15: coresamples_service.UserService.Send2FATokenRequest:input_type -> coresamples_service.Send2FATokenRequestMessage
	42, // 16: coresamples_service.UserService.ForgetPasswordRequest:input_type -> coresamples_service.ForgetPasswordRequestRequest
	44, // 17: coresamples_service.UserService.ForgetPassword:input_type -> coresamples_service.ForgetPasswordRequestMessage
	40, // 18: coresamples_service.UserService.TransferCustomerClinic:input_type -> coresamples_service.TransferCustomerClinicRequest
	38, // 19: coresamples_service.UserService.SetUpEmailRequest:input_type -> coresamples_service.SetUpLoginEmailRequestRequest
	36, // 20: coresamples_service.UserService.VerifySetUpUserEmailLogIn:input_type -> coresamples_service.VerifySetUpUserEmailLogInRequest
	34, // 21: coresamples_service.UserService.IsEmailUsedAsLoginId:input_type -> coresamples_service.EmailRequest
	32, // 22: coresamples_service.UserService.InitialForgetPassword:input_type -> coresamples_service.InitialForgetPasswordRequest
	30, // 23: coresamples_service.UserService.SendVerify2FASetUpContactInfo:input_type -> coresamples_service.SendVerify2FASetUpContactInfoRequest
	28, // 24: coresamples_service.UserService.Verify2FASetUpContactInfo:input_type -> coresamples_service.Verify2FASetUpContactRequest
	26, // 25: coresamples_service.UserService.TurnOn2FASettingPage:input_type -> coresamples_service.TurnOn2FASettingPageRequest
	25, // 26: coresamples_service.UserService.Send2FAVerificationCode:input_type -> coresamples_service.Send2FAVerificationCodeRequest
	23, // 27: coresamples_service.UserService.Verify2FAVerificationCode:input_type -> coresamples_service.Verify2FAVerificationCodeRequest
	20, // 28: coresamples_service.UserService.TurnOff2FASettingPage:input_type -> coresamples_service.TurnOff2FASettingPageRequest
	17, // 29: coresamples_service.UserService.GetUserInformation:input_type -> coresamples_service.GetUserInformationRequest
	16, // 30: coresamples_service.UserService.GetUser2FAContactInfo:input_type -> coresamples_service.GetUser2FAContactInfoRequest
	62, // 31: coresamples_service.UserService.ChangeUserEmailLogInID:input_type -> coresamples_service.UserChangeEmailRequest
	65, // 32: coresamples_service.UserService.AdminUserLoginSearch:input_type -> coresamples_service.AdminLoginSearchRequest
	12, // 33: coresamples_service.UserService.AdminLogin:input_type -> coresamples_service.AdminLoginRequest
	10, // 34: coresamples_service.UserService.RenewToken:input_type -> coresamples_service.RenewTokenRequest
	60, // 35: coresamples_service.UserService.LISLogin:input_type -> coresamples_service.LogInRequest
	8,  // 36: coresamples_service.UserService.CreateUserLogInForInvitedCustomer:input_type -> coresamples_service.CreateUserLogForInvitedCustomerRequest
	6,  // 37: coresamples_service.UserService.CheckWhetherEmailIsUsedAsLoginId:input_type -> coresamples_service.CheckWhetherEmailIsUsedAsLoginIdRequest
	4,  // 38: coresamples_service.UserService.CannySSO:input_type -> coresamples_service.CannySSORequest
	2,  // 39: coresamples_service.UserService.ForceChangeLoginEmailInternal:input_type -> coresamples_service.ForceChangeLoginEmailInternalRequest
	0,  // 40: coresamples_service.UserService.UpdateUserInvitationRecord:input_type -> coresamples_service.UpdateUserInvitationRecordRequest
	68, // 41: coresamples_service.UserService.GetLoginHistory:input_type -> coresamples_service.GetLoginHistoryRequest
	61, // 42: coresamples_service.UserService.LogIn:output_type -> coresamples_service.LogInResponse
	55, // 43: coresamples_service.UserService.GetUserInfoByRole:output_type -> coresamples_service.GetUserInfoByRoleResponse
	53, // 44: coresamples_service.UserService.UpdatePasswordByOldPassword:output_type -> coresamples_service.UpdateUserPasswordResponse
	51, // 45: coresamples_service.UserService.TransferLISTokenToPortal:output_type -> coresamples_service.TransferLISTokenToPortalResponse
	49, // 46: coresamples_service.UserService.Send2FATokenRequest:output_type -> coresamples_service.Send2FATokenResponse
	43, // 47: coresamples_service.UserService.ForgetPasswordRequest:output_type -> coresamples_service.ForgetPasswordRequestResponse
	45, // 48: coresamples_service.UserService.ForgetPassword:output_type -> coresamples_service.ForgetPasswordVerifyResponse
	41, // 49: coresamples_service.UserService.TransferCustomerClinic:output_type -> coresamples_service.TransferCustomerClinicResponse
	39, // 50: coresamples_service.UserService.SetUpEmailRequest:output_type -> coresamples_service.SetUpLoginEmailRequestResponse
	37, // 51: coresamples_service.UserService.VerifySetUpUserEmailLogIn:output_type -> coresamples_service.VerifySetUpUserEmailLogInResponse
	35, // 52: coresamples_service.UserService.IsEmailUsedAsLoginId:output_type -> coresamples_service.IsEmailUsedAsLoginIdResponse
	33, // 53: coresamples_service.UserService.InitialForgetPassword:output_type -> coresamples_service.ForgetPasswordResponse
	31, // 54: coresamples_service.UserService.SendVerify2FASetUpContactInfo:output_type -> coresamples_service.SendVerify2FASetUpContactInfoResponse
	29, // 55: coresamples_service.UserService.Verify2FASetUpContactInfo:output_type -> coresamples_service.Verify2FASetUpContactResponse
	27, // 56: coresamples_service.UserService.TurnOn2FASettingPage:output_type -> coresamples_service.TurnOn2FASettingPageResponse
	24, // 57: coresamples_service.UserService.Send2FAVerificationCode:output_type -> coresamples_service.Send2FAVerificationCodeResponse
	22, // 58: coresamples_service.UserService.Verify2FAVerificationCode:output_type -> coresamples_service.Verify2FAVerificationResponse
	21, // 59: coresamples_service.UserService.TurnOff2FASettingPage:output_type -> coresamples_service.TurnOff2FASettingPageResponse
	18, // 60: coresamples_service.UserService.GetUserInformation:output_type -> coresamples_service.GetUserInformationResponse
	14, // 61: coresamples_service.UserService.GetUser2FAContactInfo:output_type -> coresamples_service.GetUser2FAContactInfoResponse
	63, // 62: coresamples_service.UserService.ChangeUserEmailLogInID:output_type -> coresamples_service.UserChangeEmailResponse
	64, // 63: coresamples_service.UserService.AdminUserLoginSearch:output_type -> coresamples_service.AdminLoginSearchResponse
	13, // 64: coresamples_service.UserService.AdminLogin:output_type -> coresamples_service.AdminLoginResponse
	11, // 65: coresamples_service.UserService.RenewToken:output_type -> coresamples_service.RenewTokenResponse
	61, // 66: coresamples_service.UserService.LISLogin:output_type -> coresamples_service.LogInResponse
	9,  // 67: coresamples_service.UserService.CreateUserLogInForInvitedCustomer:output_type -> coresamples_service.CreateUserLogForInvitedCustomerResponse
	7,  // 68: coresamples_service.UserService.CheckWhetherEmailIsUsedAsLoginId:output_type -> coresamples_service.CheckWhetherEmailIsUsedAsLoginIdResponse
	5,  // 69: coresamples_service.UserService.CannySSO:output_type -> coresamples_service.CannySSOResponse
	3,  // 70: coresamples_service.UserService.ForceChangeLoginEmailInternal:output_type -> coresamples_service.ForceChangeLoginEmailInternalResponse
	1,  // 71: coresamples_service.UserService.UpdateUserInvitationRecord:output_type -> coresamples_service.UpdateUserInvitationRecordResponse
	69, // 72: coresamples_service.UserService.GetLoginHistory:output_type -> coresamples_service.GetLoginHistoryResponse
	42, // [42:73] is the sub-list for method output_type
	11, // [11:42] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_proto_user_service_proto_init() }
func file_proto_user_service_proto_init() {
	if File_proto_user_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_user_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserInvitationRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserInvitationRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForceChangeLoginEmailInternalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForceChangeLoginEmailInternalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CannySSORequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CannySSOResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckWhetherEmailIsUsedAsLoginIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckWhetherEmailIsUsedAsLoginIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserLogForInvitedCustomerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserLogForInvitedCustomerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenewTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenewTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminLoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminLoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUser2FAContactInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User2FAContact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUser2FAContactInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInformationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInformationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfoCustomer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TurnOff2FASettingPageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TurnOff2FASettingPageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Verify2FAVerificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Verify2FAVerificationCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Send2FAVerificationCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Send2FAVerificationCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TurnOn2FASettingPageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TurnOn2FASettingPageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Verify2FASetUpContactRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Verify2FASetUpContactResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendVerify2FASetUpContactInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendVerify2FASetUpContactInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitialForgetPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForgetPasswordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsEmailUsedAsLoginIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifySetUpUserEmailLogInRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifySetUpUserEmailLogInResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUpLoginEmailRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUpLoginEmailRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferCustomerClinicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferCustomerClinicResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForgetPasswordRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForgetPasswordRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForgetPasswordRequestMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForgetPasswordVerifyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForgetPasswordRequestCheckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForgetPasswordCheckRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Send2FATokenRequestMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Send2FATokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferLISTokenToPortalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferLISTokenToPortalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePasswordByOldPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserPasswordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfoByRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfoByRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCustomer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserClinic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInternal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPatient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogInRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogInResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserChangeEmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserChangeEmailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminLoginSearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminLoginSearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerOfficeAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminCustomer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLoginHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLoginHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminLoginSearchResponse_User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_service_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminLoginSearchResponse_User_Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_user_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   73,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_user_service_proto_goTypes,
		DependencyIndexes: file_proto_user_service_proto_depIdxs,
		MessageInfos:      file_proto_user_service_proto_msgTypes,
	}.Build()
	File_proto_user_service_proto = out.File
	file_proto_user_service_proto_rawDesc = nil
	file_proto_user_service_proto_goTypes = nil
	file_proto_user_service_proto_depIdxs = nil
}
