// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: proto/customer.proto

package coresamples_service

import (
	fmt "fmt"
	proto "google.golang.org/protobuf/proto"
	_ "google.golang.org/protobuf/types/known/durationpb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	math "math"
)

import (
	context "context"
	api "go-micro.dev/v4/api"
	client "go-micro.dev/v4/client"
	server "go-micro.dev/v4/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Reference imports to suppress errors if they are not otherwise used.
var _ api.Endpoint
var _ context.Context
var _ client.Option
var _ server.Option

// Api Endpoints for CustomerService service

func NewCustomerServiceEndpoints() []*api.Endpoint {
	return []*api.Endpoint{}
}

// Client API for CustomerService service

type CustomerService interface {
	// Version 0.7
	CreateCustomer(ctx context.Context, in *CreateCustomerRequest, opts ...client.CallOption) (*Customer, error)
	ListCustomers(ctx context.Context, in *CustomerPage, opts ...client.CallOption) (*ListCustomersResponse, error)
	GetCustomer(ctx context.Context, in *CustomerID, opts ...client.CallOption) (*FullCustomer, error)
	GetSalesCustomers(ctx context.Context, in *SalesInfo, opts ...client.CallOption) (*FullCustomerList, error)
	GetClinicSalesSamples(ctx context.Context, in *GetSampleDataByPracticeAndSalesRequest, opts ...client.CallOption) (*SampleDataByPracticeAndSalesResponse, error)
	GetCustomerSetting(ctx context.Context, in *GetCustomerSettingRequest, opts ...client.CallOption) (*GetCustomerSettingResponse, error)
	GetCustomerSales(ctx context.Context, in *GetCustomerSalesRequest, opts ...client.CallOption) (*ListSalesCustomerResponseV7, error)
	// Version 0.7.1
	UpdateCustomerSetting(ctx context.Context, in *UpdateCustomerSettingRequest, opts ...client.CallOption) (*UpdateCustomerSettingResponse, error)
	UpdateCustomer(ctx context.Context, in *UpdateCustomerRequest, opts ...client.CallOption) (*UpdateCustomerResponse, error)
	// Version 0.7.3.5
	CreatePatientInternalNotes(ctx context.Context, in *CreatePatientInternalNotesRequest, opts ...client.CallOption) (*CreatePatientInternalNotesResponse, error)
	ModifyPatientInternalNotes(ctx context.Context, in *ModifyPatientInternalNotesRequest, opts ...client.CallOption) (*ModifyPatientInternalNotesResponse, error)
	DeletePatientInternalNotes(ctx context.Context, in *DeletePatientInternalNotesRequest, opts ...client.CallOption) (*DeletePatientInternalNotesResponse, error)
	// Version 0.7.3.7
	IsNewCustomer(ctx context.Context, in *CustomerID, opts ...client.CallOption) (*GetIsNewCustomerResponse, error)
	// Version 0.7.3.9
	UpdateCustomerNPI(ctx context.Context, in *UpdateCustomerNPIRequest, opts ...client.CallOption) (*Customer, error)
	UpdateCustomerSettingFull(ctx context.Context, in *UpdateCustomerSettingFullRequest, opts ...client.CallOption) (*UpdateCustomerSettingResponse, error)
	EditCustomerSettingProperties(ctx context.Context, in *EditCustomerSettingPropertiesequest, opts ...client.CallOption) (*UpdateCustomerSettingResponse, error)
	EditCustomerProfileOnSettingPage(ctx context.Context, in *EditCustomerProfileOnSettingPageRequest, opts ...client.CallOption) (*EditCustomerProfileOnSettingPageResponse, error)
	RemoveCustomerFromClinic(ctx context.Context, in *RemoveCustomerFromClinicRequest, opts ...client.CallOption) (*EditCustomerProfileOnSettingPageResponse, error)
	JoinCustomerToClinic(ctx context.Context, in *JoinCustomerFromClinicRequest, opts ...client.CallOption) (*EditCustomerProfileOnSettingPageResponse, error)
	GetCustomerByIDs(ctx context.Context, in *GetCustomerByIDsRequest, opts ...client.CallOption) (*GetCustomerByIDsResponse, error)
	// Version 0.7.4
	CheckCustomerNPINumber(ctx context.Context, in *CheckCustomerNPINumberRequest, opts ...client.CallOption) (*NPICheckResult, error)
	GetCustomer2FAContact(ctx context.Context, in *GetCustomer2FAContactRequest, opts ...client.CallOption) (*GetCustomer2FAContactResponse, error)
	SignUpCustomer(ctx context.Context, in *CustomerSignUpRequest, opts ...client.CallOption) (*SignUpResponse, error)
	SearchClientsByName(ctx context.Context, in *SearchcliensNameRequest, opts ...client.CallOption) (*SearchclientsInfoResponse, error)
	ListCustomerAllClinics(ctx context.Context, in *ListCustomerAllClinicsRequest, opts ...client.CallOption) (*ListCustomerAllClinicsResponse, error)
	GetStatementData(ctx context.Context, in *GetStatementRequest, opts ...client.CallOption) (*GetStatementResponse, error)
	CheckClientAttributes(ctx context.Context, in *CheckClientAttributesRequest, opts ...client.CallOption) (*CheckClientAttributesResponse, error)
	NewEditCustomerProfileOnSettingPage(ctx context.Context, in *NewEditCustomerProfileOnSettingPageRequest, opts ...client.CallOption) (*NewEditCustomerProfileOnSettingPageResponse, error)
	AddCustomerWithNPINumber(ctx context.Context, in *AddCustomerWithNPINumberRequest, opts ...client.CallOption) (*AddCustomerWithNPINumberResponse, error)
	// Version 2
	V2_EditCustomerProfileOnSettingPage(ctx context.Context, in *V2_EditCustomerProfileOnSettingPageRequest, opts ...client.CallOption) (*V2_EditCustomerProfileOnSettingPageResponse, error)
	// VP-4964 OnboardingQuestionnair Check
	CheckCustomerOnboardingQuestionnaireStatus(ctx context.Context, in *CheckCustomerOnboardingQuestionnaireStatusRequest, opts ...client.CallOption) (*CheckCustomerOnboardingQuestionnaireStatusResponse, error)
	UpdateCustomerOnboardingQuestionnaireStatus(ctx context.Context, in *UpdateCustomerOnboardingQuestionnaireStatusRequest, opts ...client.CallOption) (*UpdateCustomerOnboardingQuestionnaireStatusResponse, error)
	// Add Native Method of Creating Customer
	AddCustomerWithNPINumberNative(ctx context.Context, in *AddCustomerWithNPINumberRequest, opts ...client.CallOption) (*AddCustomerWithNPINumberResponse, error)
	SignUpCustomerV2(ctx context.Context, in *CustomerSignUpRequest, opts ...client.CallOption) (*SignUpResponse, error)
	FuzzySearchCustomers(ctx context.Context, in *FuzzySearchCustomersRequest, opts ...client.CallOption) (*SearchclientsInfoResponse, error)
	GetCustomerByNPINumber(ctx context.Context, in *NPINumber, opts ...client.CallOption) (*GetCustomerByNPINumberResponse, error)
	ReinviteNPICheck(ctx context.Context, in *ReinviteNPICheckRequest, opts ...client.CallOption) (*ReinviteNPICheckResponse, error)
	FuzzySearchCustomerClinicName(ctx context.Context, in *FuzzySearchRequest, opts ...client.CallOption) (*FuzzySearchResponse, error)
	FetchCustomerBetaProgramsForClinic(ctx context.Context, in *FetchCustomerBetaProgramsForClinicInput, opts ...client.CallOption) (*FetchCustomerBetaProgramsForClinicResponse, error)
}

type customerService struct {
	c    client.Client
	name string
}

func NewCustomerService(name string, c client.Client) CustomerService {
	return &customerService{
		c:    c,
		name: name,
	}
}

func (c *customerService) CreateCustomer(ctx context.Context, in *CreateCustomerRequest, opts ...client.CallOption) (*Customer, error) {
	req := c.c.NewRequest(c.name, "CustomerService.CreateCustomer", in)
	out := new(Customer)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) ListCustomers(ctx context.Context, in *CustomerPage, opts ...client.CallOption) (*ListCustomersResponse, error) {
	req := c.c.NewRequest(c.name, "CustomerService.ListCustomers", in)
	out := new(ListCustomersResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) GetCustomer(ctx context.Context, in *CustomerID, opts ...client.CallOption) (*FullCustomer, error) {
	req := c.c.NewRequest(c.name, "CustomerService.GetCustomer", in)
	out := new(FullCustomer)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) GetSalesCustomers(ctx context.Context, in *SalesInfo, opts ...client.CallOption) (*FullCustomerList, error) {
	req := c.c.NewRequest(c.name, "CustomerService.GetSalesCustomers", in)
	out := new(FullCustomerList)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) GetClinicSalesSamples(ctx context.Context, in *GetSampleDataByPracticeAndSalesRequest, opts ...client.CallOption) (*SampleDataByPracticeAndSalesResponse, error) {
	req := c.c.NewRequest(c.name, "CustomerService.GetClinicSalesSamples", in)
	out := new(SampleDataByPracticeAndSalesResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) GetCustomerSetting(ctx context.Context, in *GetCustomerSettingRequest, opts ...client.CallOption) (*GetCustomerSettingResponse, error) {
	req := c.c.NewRequest(c.name, "CustomerService.GetCustomerSetting", in)
	out := new(GetCustomerSettingResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) GetCustomerSales(ctx context.Context, in *GetCustomerSalesRequest, opts ...client.CallOption) (*ListSalesCustomerResponseV7, error) {
	req := c.c.NewRequest(c.name, "CustomerService.GetCustomerSales", in)
	out := new(ListSalesCustomerResponseV7)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) UpdateCustomerSetting(ctx context.Context, in *UpdateCustomerSettingRequest, opts ...client.CallOption) (*UpdateCustomerSettingResponse, error) {
	req := c.c.NewRequest(c.name, "CustomerService.UpdateCustomerSetting", in)
	out := new(UpdateCustomerSettingResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) UpdateCustomer(ctx context.Context, in *UpdateCustomerRequest, opts ...client.CallOption) (*UpdateCustomerResponse, error) {
	req := c.c.NewRequest(c.name, "CustomerService.UpdateCustomer", in)
	out := new(UpdateCustomerResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) CreatePatientInternalNotes(ctx context.Context, in *CreatePatientInternalNotesRequest, opts ...client.CallOption) (*CreatePatientInternalNotesResponse, error) {
	req := c.c.NewRequest(c.name, "CustomerService.CreatePatientInternalNotes", in)
	out := new(CreatePatientInternalNotesResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) ModifyPatientInternalNotes(ctx context.Context, in *ModifyPatientInternalNotesRequest, opts ...client.CallOption) (*ModifyPatientInternalNotesResponse, error) {
	req := c.c.NewRequest(c.name, "CustomerService.ModifyPatientInternalNotes", in)
	out := new(ModifyPatientInternalNotesResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) DeletePatientInternalNotes(ctx context.Context, in *DeletePatientInternalNotesRequest, opts ...client.CallOption) (*DeletePatientInternalNotesResponse, error) {
	req := c.c.NewRequest(c.name, "CustomerService.DeletePatientInternalNotes", in)
	out := new(DeletePatientInternalNotesResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) IsNewCustomer(ctx context.Context, in *CustomerID, opts ...client.CallOption) (*GetIsNewCustomerResponse, error) {
	req := c.c.NewRequest(c.name, "CustomerService.IsNewCustomer", in)
	out := new(GetIsNewCustomerResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) UpdateCustomerNPI(ctx context.Context, in *UpdateCustomerNPIRequest, opts ...client.CallOption) (*Customer, error) {
	req := c.c.NewRequest(c.name, "CustomerService.UpdateCustomerNPI", in)
	out := new(Customer)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) UpdateCustomerSettingFull(ctx context.Context, in *UpdateCustomerSettingFullRequest, opts ...client.CallOption) (*UpdateCustomerSettingResponse, error) {
	req := c.c.NewRequest(c.name, "CustomerService.UpdateCustomerSettingFull", in)
	out := new(UpdateCustomerSettingResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) EditCustomerSettingProperties(ctx context.Context, in *EditCustomerSettingPropertiesequest, opts ...client.CallOption) (*UpdateCustomerSettingResponse, error) {
	req := c.c.NewRequest(c.name, "CustomerService.EditCustomerSettingProperties", in)
	out := new(UpdateCustomerSettingResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) EditCustomerProfileOnSettingPage(ctx context.Context, in *EditCustomerProfileOnSettingPageRequest, opts ...client.CallOption) (*EditCustomerProfileOnSettingPageResponse, error) {
	req := c.c.NewRequest(c.name, "CustomerService.EditCustomerProfileOnSettingPage", in)
	out := new(EditCustomerProfileOnSettingPageResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) RemoveCustomerFromClinic(ctx context.Context, in *RemoveCustomerFromClinicRequest, opts ...client.CallOption) (*EditCustomerProfileOnSettingPageResponse, error) {
	req := c.c.NewRequest(c.name, "CustomerService.RemoveCustomerFromClinic", in)
	out := new(EditCustomerProfileOnSettingPageResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) JoinCustomerToClinic(ctx context.Context, in *JoinCustomerFromClinicRequest, opts ...client.CallOption) (*EditCustomerProfileOnSettingPageResponse, error) {
	req := c.c.NewRequest(c.name, "CustomerService.JoinCustomerToClinic", in)
	out := new(EditCustomerProfileOnSettingPageResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) GetCustomerByIDs(ctx context.Context, in *GetCustomerByIDsRequest, opts ...client.CallOption) (*GetCustomerByIDsResponse, error) {
	req := c.c.NewRequest(c.name, "CustomerService.GetCustomerByIDs", in)
	out := new(GetCustomerByIDsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) CheckCustomerNPINumber(ctx context.Context, in *CheckCustomerNPINumberRequest, opts ...client.CallOption) (*NPICheckResult, error) {
	req := c.c.NewRequest(c.name, "CustomerService.CheckCustomerNPINumber", in)
	out := new(NPICheckResult)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) GetCustomer2FAContact(ctx context.Context, in *GetCustomer2FAContactRequest, opts ...client.CallOption) (*GetCustomer2FAContactResponse, error) {
	req := c.c.NewRequest(c.name, "CustomerService.GetCustomer2FAContact", in)
	out := new(GetCustomer2FAContactResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) SignUpCustomer(ctx context.Context, in *CustomerSignUpRequest, opts ...client.CallOption) (*SignUpResponse, error) {
	req := c.c.NewRequest(c.name, "CustomerService.SignUpCustomer", in)
	out := new(SignUpResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) SearchClientsByName(ctx context.Context, in *SearchcliensNameRequest, opts ...client.CallOption) (*SearchclientsInfoResponse, error) {
	req := c.c.NewRequest(c.name, "CustomerService.SearchClientsByName", in)
	out := new(SearchclientsInfoResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) ListCustomerAllClinics(ctx context.Context, in *ListCustomerAllClinicsRequest, opts ...client.CallOption) (*ListCustomerAllClinicsResponse, error) {
	req := c.c.NewRequest(c.name, "CustomerService.ListCustomerAllClinics", in)
	out := new(ListCustomerAllClinicsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) GetStatementData(ctx context.Context, in *GetStatementRequest, opts ...client.CallOption) (*GetStatementResponse, error) {
	req := c.c.NewRequest(c.name, "CustomerService.GetStatementData", in)
	out := new(GetStatementResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) CheckClientAttributes(ctx context.Context, in *CheckClientAttributesRequest, opts ...client.CallOption) (*CheckClientAttributesResponse, error) {
	req := c.c.NewRequest(c.name, "CustomerService.CheckClientAttributes", in)
	out := new(CheckClientAttributesResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) NewEditCustomerProfileOnSettingPage(ctx context.Context, in *NewEditCustomerProfileOnSettingPageRequest, opts ...client.CallOption) (*NewEditCustomerProfileOnSettingPageResponse, error) {
	req := c.c.NewRequest(c.name, "CustomerService.NewEditCustomerProfileOnSettingPage", in)
	out := new(NewEditCustomerProfileOnSettingPageResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) AddCustomerWithNPINumber(ctx context.Context, in *AddCustomerWithNPINumberRequest, opts ...client.CallOption) (*AddCustomerWithNPINumberResponse, error) {
	req := c.c.NewRequest(c.name, "CustomerService.AddCustomerWithNPINumber", in)
	out := new(AddCustomerWithNPINumberResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) V2_EditCustomerProfileOnSettingPage(ctx context.Context, in *V2_EditCustomerProfileOnSettingPageRequest, opts ...client.CallOption) (*V2_EditCustomerProfileOnSettingPageResponse, error) {
	req := c.c.NewRequest(c.name, "CustomerService.V2_EditCustomerProfileOnSettingPage", in)
	out := new(V2_EditCustomerProfileOnSettingPageResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) CheckCustomerOnboardingQuestionnaireStatus(ctx context.Context, in *CheckCustomerOnboardingQuestionnaireStatusRequest, opts ...client.CallOption) (*CheckCustomerOnboardingQuestionnaireStatusResponse, error) {
	req := c.c.NewRequest(c.name, "CustomerService.CheckCustomerOnboardingQuestionnaireStatus", in)
	out := new(CheckCustomerOnboardingQuestionnaireStatusResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) UpdateCustomerOnboardingQuestionnaireStatus(ctx context.Context, in *UpdateCustomerOnboardingQuestionnaireStatusRequest, opts ...client.CallOption) (*UpdateCustomerOnboardingQuestionnaireStatusResponse, error) {
	req := c.c.NewRequest(c.name, "CustomerService.UpdateCustomerOnboardingQuestionnaireStatus", in)
	out := new(UpdateCustomerOnboardingQuestionnaireStatusResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) AddCustomerWithNPINumberNative(ctx context.Context, in *AddCustomerWithNPINumberRequest, opts ...client.CallOption) (*AddCustomerWithNPINumberResponse, error) {
	req := c.c.NewRequest(c.name, "CustomerService.AddCustomerWithNPINumberNative", in)
	out := new(AddCustomerWithNPINumberResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) SignUpCustomerV2(ctx context.Context, in *CustomerSignUpRequest, opts ...client.CallOption) (*SignUpResponse, error) {
	req := c.c.NewRequest(c.name, "CustomerService.SignUpCustomerV2", in)
	out := new(SignUpResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) FuzzySearchCustomers(ctx context.Context, in *FuzzySearchCustomersRequest, opts ...client.CallOption) (*SearchclientsInfoResponse, error) {
	req := c.c.NewRequest(c.name, "CustomerService.FuzzySearchCustomers", in)
	out := new(SearchclientsInfoResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) GetCustomerByNPINumber(ctx context.Context, in *NPINumber, opts ...client.CallOption) (*GetCustomerByNPINumberResponse, error) {
	req := c.c.NewRequest(c.name, "CustomerService.GetCustomerByNPINumber", in)
	out := new(GetCustomerByNPINumberResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) ReinviteNPICheck(ctx context.Context, in *ReinviteNPICheckRequest, opts ...client.CallOption) (*ReinviteNPICheckResponse, error) {
	req := c.c.NewRequest(c.name, "CustomerService.ReinviteNPICheck", in)
	out := new(ReinviteNPICheckResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) FuzzySearchCustomerClinicName(ctx context.Context, in *FuzzySearchRequest, opts ...client.CallOption) (*FuzzySearchResponse, error) {
	req := c.c.NewRequest(c.name, "CustomerService.FuzzySearchCustomerClinicName", in)
	out := new(FuzzySearchResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerService) FetchCustomerBetaProgramsForClinic(ctx context.Context, in *FetchCustomerBetaProgramsForClinicInput, opts ...client.CallOption) (*FetchCustomerBetaProgramsForClinicResponse, error) {
	req := c.c.NewRequest(c.name, "CustomerService.FetchCustomerBetaProgramsForClinic", in)
	out := new(FetchCustomerBetaProgramsForClinicResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for CustomerService service

type CustomerServiceHandler interface {
	// Version 0.7
	CreateCustomer(context.Context, *CreateCustomerRequest, *Customer) error
	ListCustomers(context.Context, *CustomerPage, *ListCustomersResponse) error
	GetCustomer(context.Context, *CustomerID, *FullCustomer) error
	GetSalesCustomers(context.Context, *SalesInfo, *FullCustomerList) error
	GetClinicSalesSamples(context.Context, *GetSampleDataByPracticeAndSalesRequest, *SampleDataByPracticeAndSalesResponse) error
	GetCustomerSetting(context.Context, *GetCustomerSettingRequest, *GetCustomerSettingResponse) error
	GetCustomerSales(context.Context, *GetCustomerSalesRequest, *ListSalesCustomerResponseV7) error
	// Version 0.7.1
	UpdateCustomerSetting(context.Context, *UpdateCustomerSettingRequest, *UpdateCustomerSettingResponse) error
	UpdateCustomer(context.Context, *UpdateCustomerRequest, *UpdateCustomerResponse) error
	// Version 0.7.3.5
	CreatePatientInternalNotes(context.Context, *CreatePatientInternalNotesRequest, *CreatePatientInternalNotesResponse) error
	ModifyPatientInternalNotes(context.Context, *ModifyPatientInternalNotesRequest, *ModifyPatientInternalNotesResponse) error
	DeletePatientInternalNotes(context.Context, *DeletePatientInternalNotesRequest, *DeletePatientInternalNotesResponse) error
	// Version 0.7.3.7
	IsNewCustomer(context.Context, *CustomerID, *GetIsNewCustomerResponse) error
	// Version 0.7.3.9
	UpdateCustomerNPI(context.Context, *UpdateCustomerNPIRequest, *Customer) error
	UpdateCustomerSettingFull(context.Context, *UpdateCustomerSettingFullRequest, *UpdateCustomerSettingResponse) error
	EditCustomerSettingProperties(context.Context, *EditCustomerSettingPropertiesequest, *UpdateCustomerSettingResponse) error
	EditCustomerProfileOnSettingPage(context.Context, *EditCustomerProfileOnSettingPageRequest, *EditCustomerProfileOnSettingPageResponse) error
	RemoveCustomerFromClinic(context.Context, *RemoveCustomerFromClinicRequest, *EditCustomerProfileOnSettingPageResponse) error
	JoinCustomerToClinic(context.Context, *JoinCustomerFromClinicRequest, *EditCustomerProfileOnSettingPageResponse) error
	GetCustomerByIDs(context.Context, *GetCustomerByIDsRequest, *GetCustomerByIDsResponse) error
	// Version 0.7.4
	CheckCustomerNPINumber(context.Context, *CheckCustomerNPINumberRequest, *NPICheckResult) error
	GetCustomer2FAContact(context.Context, *GetCustomer2FAContactRequest, *GetCustomer2FAContactResponse) error
	SignUpCustomer(context.Context, *CustomerSignUpRequest, *SignUpResponse) error
	SearchClientsByName(context.Context, *SearchcliensNameRequest, *SearchclientsInfoResponse) error
	ListCustomerAllClinics(context.Context, *ListCustomerAllClinicsRequest, *ListCustomerAllClinicsResponse) error
	GetStatementData(context.Context, *GetStatementRequest, *GetStatementResponse) error
	CheckClientAttributes(context.Context, *CheckClientAttributesRequest, *CheckClientAttributesResponse) error
	NewEditCustomerProfileOnSettingPage(context.Context, *NewEditCustomerProfileOnSettingPageRequest, *NewEditCustomerProfileOnSettingPageResponse) error
	AddCustomerWithNPINumber(context.Context, *AddCustomerWithNPINumberRequest, *AddCustomerWithNPINumberResponse) error
	// Version 2
	V2_EditCustomerProfileOnSettingPage(context.Context, *V2_EditCustomerProfileOnSettingPageRequest, *V2_EditCustomerProfileOnSettingPageResponse) error
	// VP-4964 OnboardingQuestionnair Check
	CheckCustomerOnboardingQuestionnaireStatus(context.Context, *CheckCustomerOnboardingQuestionnaireStatusRequest, *CheckCustomerOnboardingQuestionnaireStatusResponse) error
	UpdateCustomerOnboardingQuestionnaireStatus(context.Context, *UpdateCustomerOnboardingQuestionnaireStatusRequest, *UpdateCustomerOnboardingQuestionnaireStatusResponse) error
	// Add Native Method of Creating Customer
	AddCustomerWithNPINumberNative(context.Context, *AddCustomerWithNPINumberRequest, *AddCustomerWithNPINumberResponse) error
	SignUpCustomerV2(context.Context, *CustomerSignUpRequest, *SignUpResponse) error
	FuzzySearchCustomers(context.Context, *FuzzySearchCustomersRequest, *SearchclientsInfoResponse) error
	GetCustomerByNPINumber(context.Context, *NPINumber, *GetCustomerByNPINumberResponse) error
	ReinviteNPICheck(context.Context, *ReinviteNPICheckRequest, *ReinviteNPICheckResponse) error
	FuzzySearchCustomerClinicName(context.Context, *FuzzySearchRequest, *FuzzySearchResponse) error
	FetchCustomerBetaProgramsForClinic(context.Context, *FetchCustomerBetaProgramsForClinicInput, *FetchCustomerBetaProgramsForClinicResponse) error
}

func RegisterCustomerServiceHandler(s server.Server, hdlr CustomerServiceHandler, opts ...server.HandlerOption) error {
	type customerService interface {
		CreateCustomer(ctx context.Context, in *CreateCustomerRequest, out *Customer) error
		ListCustomers(ctx context.Context, in *CustomerPage, out *ListCustomersResponse) error
		GetCustomer(ctx context.Context, in *CustomerID, out *FullCustomer) error
		GetSalesCustomers(ctx context.Context, in *SalesInfo, out *FullCustomerList) error
		GetClinicSalesSamples(ctx context.Context, in *GetSampleDataByPracticeAndSalesRequest, out *SampleDataByPracticeAndSalesResponse) error
		GetCustomerSetting(ctx context.Context, in *GetCustomerSettingRequest, out *GetCustomerSettingResponse) error
		GetCustomerSales(ctx context.Context, in *GetCustomerSalesRequest, out *ListSalesCustomerResponseV7) error
		UpdateCustomerSetting(ctx context.Context, in *UpdateCustomerSettingRequest, out *UpdateCustomerSettingResponse) error
		UpdateCustomer(ctx context.Context, in *UpdateCustomerRequest, out *UpdateCustomerResponse) error
		CreatePatientInternalNotes(ctx context.Context, in *CreatePatientInternalNotesRequest, out *CreatePatientInternalNotesResponse) error
		ModifyPatientInternalNotes(ctx context.Context, in *ModifyPatientInternalNotesRequest, out *ModifyPatientInternalNotesResponse) error
		DeletePatientInternalNotes(ctx context.Context, in *DeletePatientInternalNotesRequest, out *DeletePatientInternalNotesResponse) error
		IsNewCustomer(ctx context.Context, in *CustomerID, out *GetIsNewCustomerResponse) error
		UpdateCustomerNPI(ctx context.Context, in *UpdateCustomerNPIRequest, out *Customer) error
		UpdateCustomerSettingFull(ctx context.Context, in *UpdateCustomerSettingFullRequest, out *UpdateCustomerSettingResponse) error
		EditCustomerSettingProperties(ctx context.Context, in *EditCustomerSettingPropertiesequest, out *UpdateCustomerSettingResponse) error
		EditCustomerProfileOnSettingPage(ctx context.Context, in *EditCustomerProfileOnSettingPageRequest, out *EditCustomerProfileOnSettingPageResponse) error
		RemoveCustomerFromClinic(ctx context.Context, in *RemoveCustomerFromClinicRequest, out *EditCustomerProfileOnSettingPageResponse) error
		JoinCustomerToClinic(ctx context.Context, in *JoinCustomerFromClinicRequest, out *EditCustomerProfileOnSettingPageResponse) error
		GetCustomerByIDs(ctx context.Context, in *GetCustomerByIDsRequest, out *GetCustomerByIDsResponse) error
		CheckCustomerNPINumber(ctx context.Context, in *CheckCustomerNPINumberRequest, out *NPICheckResult) error
		GetCustomer2FAContact(ctx context.Context, in *GetCustomer2FAContactRequest, out *GetCustomer2FAContactResponse) error
		SignUpCustomer(ctx context.Context, in *CustomerSignUpRequest, out *SignUpResponse) error
		SearchClientsByName(ctx context.Context, in *SearchcliensNameRequest, out *SearchclientsInfoResponse) error
		ListCustomerAllClinics(ctx context.Context, in *ListCustomerAllClinicsRequest, out *ListCustomerAllClinicsResponse) error
		GetStatementData(ctx context.Context, in *GetStatementRequest, out *GetStatementResponse) error
		CheckClientAttributes(ctx context.Context, in *CheckClientAttributesRequest, out *CheckClientAttributesResponse) error
		NewEditCustomerProfileOnSettingPage(ctx context.Context, in *NewEditCustomerProfileOnSettingPageRequest, out *NewEditCustomerProfileOnSettingPageResponse) error
		AddCustomerWithNPINumber(ctx context.Context, in *AddCustomerWithNPINumberRequest, out *AddCustomerWithNPINumberResponse) error
		V2_EditCustomerProfileOnSettingPage(ctx context.Context, in *V2_EditCustomerProfileOnSettingPageRequest, out *V2_EditCustomerProfileOnSettingPageResponse) error
		CheckCustomerOnboardingQuestionnaireStatus(ctx context.Context, in *CheckCustomerOnboardingQuestionnaireStatusRequest, out *CheckCustomerOnboardingQuestionnaireStatusResponse) error
		UpdateCustomerOnboardingQuestionnaireStatus(ctx context.Context, in *UpdateCustomerOnboardingQuestionnaireStatusRequest, out *UpdateCustomerOnboardingQuestionnaireStatusResponse) error
		AddCustomerWithNPINumberNative(ctx context.Context, in *AddCustomerWithNPINumberRequest, out *AddCustomerWithNPINumberResponse) error
		SignUpCustomerV2(ctx context.Context, in *CustomerSignUpRequest, out *SignUpResponse) error
		FuzzySearchCustomers(ctx context.Context, in *FuzzySearchCustomersRequest, out *SearchclientsInfoResponse) error
		GetCustomerByNPINumber(ctx context.Context, in *NPINumber, out *GetCustomerByNPINumberResponse) error
		ReinviteNPICheck(ctx context.Context, in *ReinviteNPICheckRequest, out *ReinviteNPICheckResponse) error
		FuzzySearchCustomerClinicName(ctx context.Context, in *FuzzySearchRequest, out *FuzzySearchResponse) error
		FetchCustomerBetaProgramsForClinic(ctx context.Context, in *FetchCustomerBetaProgramsForClinicInput, out *FetchCustomerBetaProgramsForClinicResponse) error
	}
	type CustomerService struct {
		customerService
	}
	h := &customerServiceHandler{hdlr}
	return s.Handle(s.NewHandler(&CustomerService{h}, opts...))
}

type customerServiceHandler struct {
	CustomerServiceHandler
}

func (h *customerServiceHandler) CreateCustomer(ctx context.Context, in *CreateCustomerRequest, out *Customer) error {
	return h.CustomerServiceHandler.CreateCustomer(ctx, in, out)
}

func (h *customerServiceHandler) ListCustomers(ctx context.Context, in *CustomerPage, out *ListCustomersResponse) error {
	return h.CustomerServiceHandler.ListCustomers(ctx, in, out)
}

func (h *customerServiceHandler) GetCustomer(ctx context.Context, in *CustomerID, out *FullCustomer) error {
	return h.CustomerServiceHandler.GetCustomer(ctx, in, out)
}

func (h *customerServiceHandler) GetSalesCustomers(ctx context.Context, in *SalesInfo, out *FullCustomerList) error {
	return h.CustomerServiceHandler.GetSalesCustomers(ctx, in, out)
}

func (h *customerServiceHandler) GetClinicSalesSamples(ctx context.Context, in *GetSampleDataByPracticeAndSalesRequest, out *SampleDataByPracticeAndSalesResponse) error {
	return h.CustomerServiceHandler.GetClinicSalesSamples(ctx, in, out)
}

func (h *customerServiceHandler) GetCustomerSetting(ctx context.Context, in *GetCustomerSettingRequest, out *GetCustomerSettingResponse) error {
	return h.CustomerServiceHandler.GetCustomerSetting(ctx, in, out)
}

func (h *customerServiceHandler) GetCustomerSales(ctx context.Context, in *GetCustomerSalesRequest, out *ListSalesCustomerResponseV7) error {
	return h.CustomerServiceHandler.GetCustomerSales(ctx, in, out)
}

func (h *customerServiceHandler) UpdateCustomerSetting(ctx context.Context, in *UpdateCustomerSettingRequest, out *UpdateCustomerSettingResponse) error {
	return h.CustomerServiceHandler.UpdateCustomerSetting(ctx, in, out)
}

func (h *customerServiceHandler) UpdateCustomer(ctx context.Context, in *UpdateCustomerRequest, out *UpdateCustomerResponse) error {
	return h.CustomerServiceHandler.UpdateCustomer(ctx, in, out)
}

func (h *customerServiceHandler) CreatePatientInternalNotes(ctx context.Context, in *CreatePatientInternalNotesRequest, out *CreatePatientInternalNotesResponse) error {
	return h.CustomerServiceHandler.CreatePatientInternalNotes(ctx, in, out)
}

func (h *customerServiceHandler) ModifyPatientInternalNotes(ctx context.Context, in *ModifyPatientInternalNotesRequest, out *ModifyPatientInternalNotesResponse) error {
	return h.CustomerServiceHandler.ModifyPatientInternalNotes(ctx, in, out)
}

func (h *customerServiceHandler) DeletePatientInternalNotes(ctx context.Context, in *DeletePatientInternalNotesRequest, out *DeletePatientInternalNotesResponse) error {
	return h.CustomerServiceHandler.DeletePatientInternalNotes(ctx, in, out)
}

func (h *customerServiceHandler) IsNewCustomer(ctx context.Context, in *CustomerID, out *GetIsNewCustomerResponse) error {
	return h.CustomerServiceHandler.IsNewCustomer(ctx, in, out)
}

func (h *customerServiceHandler) UpdateCustomerNPI(ctx context.Context, in *UpdateCustomerNPIRequest, out *Customer) error {
	return h.CustomerServiceHandler.UpdateCustomerNPI(ctx, in, out)
}

func (h *customerServiceHandler) UpdateCustomerSettingFull(ctx context.Context, in *UpdateCustomerSettingFullRequest, out *UpdateCustomerSettingResponse) error {
	return h.CustomerServiceHandler.UpdateCustomerSettingFull(ctx, in, out)
}

func (h *customerServiceHandler) EditCustomerSettingProperties(ctx context.Context, in *EditCustomerSettingPropertiesequest, out *UpdateCustomerSettingResponse) error {
	return h.CustomerServiceHandler.EditCustomerSettingProperties(ctx, in, out)
}

func (h *customerServiceHandler) EditCustomerProfileOnSettingPage(ctx context.Context, in *EditCustomerProfileOnSettingPageRequest, out *EditCustomerProfileOnSettingPageResponse) error {
	return h.CustomerServiceHandler.EditCustomerProfileOnSettingPage(ctx, in, out)
}

func (h *customerServiceHandler) RemoveCustomerFromClinic(ctx context.Context, in *RemoveCustomerFromClinicRequest, out *EditCustomerProfileOnSettingPageResponse) error {
	return h.CustomerServiceHandler.RemoveCustomerFromClinic(ctx, in, out)
}

func (h *customerServiceHandler) JoinCustomerToClinic(ctx context.Context, in *JoinCustomerFromClinicRequest, out *EditCustomerProfileOnSettingPageResponse) error {
	return h.CustomerServiceHandler.JoinCustomerToClinic(ctx, in, out)
}

func (h *customerServiceHandler) GetCustomerByIDs(ctx context.Context, in *GetCustomerByIDsRequest, out *GetCustomerByIDsResponse) error {
	return h.CustomerServiceHandler.GetCustomerByIDs(ctx, in, out)
}

func (h *customerServiceHandler) CheckCustomerNPINumber(ctx context.Context, in *CheckCustomerNPINumberRequest, out *NPICheckResult) error {
	return h.CustomerServiceHandler.CheckCustomerNPINumber(ctx, in, out)
}

func (h *customerServiceHandler) GetCustomer2FAContact(ctx context.Context, in *GetCustomer2FAContactRequest, out *GetCustomer2FAContactResponse) error {
	return h.CustomerServiceHandler.GetCustomer2FAContact(ctx, in, out)
}

func (h *customerServiceHandler) SignUpCustomer(ctx context.Context, in *CustomerSignUpRequest, out *SignUpResponse) error {
	return h.CustomerServiceHandler.SignUpCustomer(ctx, in, out)
}

func (h *customerServiceHandler) SearchClientsByName(ctx context.Context, in *SearchcliensNameRequest, out *SearchclientsInfoResponse) error {
	return h.CustomerServiceHandler.SearchClientsByName(ctx, in, out)
}

func (h *customerServiceHandler) ListCustomerAllClinics(ctx context.Context, in *ListCustomerAllClinicsRequest, out *ListCustomerAllClinicsResponse) error {
	return h.CustomerServiceHandler.ListCustomerAllClinics(ctx, in, out)
}

func (h *customerServiceHandler) GetStatementData(ctx context.Context, in *GetStatementRequest, out *GetStatementResponse) error {
	return h.CustomerServiceHandler.GetStatementData(ctx, in, out)
}

func (h *customerServiceHandler) CheckClientAttributes(ctx context.Context, in *CheckClientAttributesRequest, out *CheckClientAttributesResponse) error {
	return h.CustomerServiceHandler.CheckClientAttributes(ctx, in, out)
}

func (h *customerServiceHandler) NewEditCustomerProfileOnSettingPage(ctx context.Context, in *NewEditCustomerProfileOnSettingPageRequest, out *NewEditCustomerProfileOnSettingPageResponse) error {
	return h.CustomerServiceHandler.NewEditCustomerProfileOnSettingPage(ctx, in, out)
}

func (h *customerServiceHandler) AddCustomerWithNPINumber(ctx context.Context, in *AddCustomerWithNPINumberRequest, out *AddCustomerWithNPINumberResponse) error {
	return h.CustomerServiceHandler.AddCustomerWithNPINumber(ctx, in, out)
}

func (h *customerServiceHandler) V2_EditCustomerProfileOnSettingPage(ctx context.Context, in *V2_EditCustomerProfileOnSettingPageRequest, out *V2_EditCustomerProfileOnSettingPageResponse) error {
	return h.CustomerServiceHandler.V2_EditCustomerProfileOnSettingPage(ctx, in, out)
}

func (h *customerServiceHandler) CheckCustomerOnboardingQuestionnaireStatus(ctx context.Context, in *CheckCustomerOnboardingQuestionnaireStatusRequest, out *CheckCustomerOnboardingQuestionnaireStatusResponse) error {
	return h.CustomerServiceHandler.CheckCustomerOnboardingQuestionnaireStatus(ctx, in, out)
}

func (h *customerServiceHandler) UpdateCustomerOnboardingQuestionnaireStatus(ctx context.Context, in *UpdateCustomerOnboardingQuestionnaireStatusRequest, out *UpdateCustomerOnboardingQuestionnaireStatusResponse) error {
	return h.CustomerServiceHandler.UpdateCustomerOnboardingQuestionnaireStatus(ctx, in, out)
}

func (h *customerServiceHandler) AddCustomerWithNPINumberNative(ctx context.Context, in *AddCustomerWithNPINumberRequest, out *AddCustomerWithNPINumberResponse) error {
	return h.CustomerServiceHandler.AddCustomerWithNPINumberNative(ctx, in, out)
}

func (h *customerServiceHandler) SignUpCustomerV2(ctx context.Context, in *CustomerSignUpRequest, out *SignUpResponse) error {
	return h.CustomerServiceHandler.SignUpCustomerV2(ctx, in, out)
}

func (h *customerServiceHandler) FuzzySearchCustomers(ctx context.Context, in *FuzzySearchCustomersRequest, out *SearchclientsInfoResponse) error {
	return h.CustomerServiceHandler.FuzzySearchCustomers(ctx, in, out)
}

func (h *customerServiceHandler) GetCustomerByNPINumber(ctx context.Context, in *NPINumber, out *GetCustomerByNPINumberResponse) error {
	return h.CustomerServiceHandler.GetCustomerByNPINumber(ctx, in, out)
}

func (h *customerServiceHandler) ReinviteNPICheck(ctx context.Context, in *ReinviteNPICheckRequest, out *ReinviteNPICheckResponse) error {
	return h.CustomerServiceHandler.ReinviteNPICheck(ctx, in, out)
}

func (h *customerServiceHandler) FuzzySearchCustomerClinicName(ctx context.Context, in *FuzzySearchRequest, out *FuzzySearchResponse) error {
	return h.CustomerServiceHandler.FuzzySearchCustomerClinicName(ctx, in, out)
}

func (h *customerServiceHandler) FetchCustomerBetaProgramsForClinic(ctx context.Context, in *FetchCustomerBetaProgramsForClinicInput, out *FetchCustomerBetaProgramsForClinicResponse) error {
	return h.CustomerServiceHandler.FetchCustomerBetaProgramsForClinic(ctx, in, out)
}
